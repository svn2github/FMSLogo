<chapter id="error-processing">
   <title>Proceso de errores</title>

<para>
Cuando ocurre un error, &GENERICNAME; toma los pasos siguientes.
Primero, si hay una variable definida llamada <link linkend="command-erract">ERRACT</link>, &GENERICNAME; toma su valor como una lista de instrucciones y la ejecuta.
Puedes usar la operación <link linkend="command-error">ERROR</link> dentro de estas instrucciones (soló una vez) para examinar la condición de error.
Si la lista de instrucciones ejecuta <link linkend="command-pause">PAUSA</link>, entonces se escribe el mensaje de error antes de que la pausa ocurre.
</para>

<para>
Hay ciertos errores que son «recuperables».
Por uno de aquellos errores, si la lista de instrucciones devuelve un valor, se usa ese valor en lugar del expresión que causó el error.
(Si las instrucciones en ERRACT ejecutan PAUSA y el usuario, del modo pausado, ejecuta <link linkend="command-continue">SIGUE</link> con un argumento, entonces PAUSA devuelve el valor de ese argumento, y, por consiguiente, es lo que la lista de instrucciones de ERRACT devuelve, también.)
</para>

<para>
Es posible que una lista de instrucciones de ERRACT devuelva un valor no apropiado para el contexto o devuelva ningún valor cuando el contexto necesite uno.
Como resultado, el mismo condición de error puede recurrir para siempre.

<!-- The following is commented out because this functionality has been removed.
     The comment not been removed because maybe I should add the functionality back.
To avoid that danger, if the same error condition occurs twice in a row from an ERRACT instruction list without user interaction, the message "Erract loop" is printed and control returns to toplevel.
"Without user interaction" means that if ERRACT invokes PAUSE and the user provides an incorrect value, this loop prevention mechanism does not take effect and the user gets to try again.
-->
</para>

<para>
Mientras que se ejecuta la lista de instrucciones de ERRACT se ignora el valor de ERRACT para asegurar que un error en la lista de instrucciones no causa un bucle infinito.
En particular, un error durante una pausa no causa una pausa-dentro-de-una-pausa.
</para>

<para>
Si ERRACT no tiene un valor, &GENERICNAME; maneja el error generando un <userinput>LANZA "ERROR</userinput> interno.
Si no atrapas esta <link linkend="command-throw">LANZA</link> con un <userinput>ATRAPA "ERROR</userinput> en tu programa, se atrapa el error eventualmente el alto nivel interactivo o un bucle de pausa, que escribe el mensaje de error.
Una ejecución de <userinput>ATRAPA "ERROR</userinput> tiene precedencia sobre ERRACT.
</para>

<para>
Si un desbordamiento aritmético de coma flotante ocurre, o si se ejecuta una función de dos argumentos (como <link linkend="command-power">POTENCIA</link>) con una combinación de malos argumentos, el mensaje «no le gustó recibir» refiere al segundo argumento, pero deberías tomarlo como refiriendo a la combinación.
</para>

   <section id="error-codes">
      <title>Códigos de error</title>
      <indexterm><primary>Códigos de error</primary></indexterm>

<para>
Cuando ocurre un error, puedes usar la operación <link linkend="command-error">ERROR</link> para determinar lo que salió mal.
ERROR devuelve una lista cuyos elementos describen el error.
El primer elemento es el código numérico del tipo de error que ocurrió.
El segundo elemento es un mensaje que explica el error en español.
</para>

<para>
Algunos mensajes tienen dos códigos diferentes dependiendo de si el error es recuperable o no (esto es, si puedes proporcionar un valor sustituto mediante el mecanismo de <link linkend="command-erract">ERRACT</link>).
</para>

<para>
Algunos mensajes son advertencias y no errores; no se puede atrapar estos.
</para>

<para>
Las condiciones que generan códigos 1 y 34 son tan malas que &GENERICNAME; termina inmediatamente.
No se puede atrapar estos tampoco.
</para>

<para>
Los códigos de error y sus mensajes correspondientes son dados en la tabla siguiente.
</para>

<para>
<informaltable frame='all'>
  <tgroup cols='2'>
    <thead>
      <row><entry>Código de Error</entry> <entry>Mensaje de Error</entry></row>
    </thead>
    <tbody>
      <row><entry>1</entry><entry>Logo: Error Interno Fatal (no puede ser atrapado)</entry></row>
      <row><entry>2</entry><entry>desborde de pila</entry></row>
      <row><entry>3</entry><entry>tortuga fuera de los límites</entry></row>
      <row><entry>4</entry><entry>a PROCEDIMIENTO no le gustó recibir DATO (no recuperable)</entry></row>
      <row><entry>5</entry><entry>PROCEDIMIENTO no devolvió valor a PROCEDIMIENTO</entry></row>
      <row><entry>6</entry><entry>PROCEDIMIENTO necesita recibir más cosas</entry></row>
      <row><entry>7</entry><entry>a PROCEDIMIENTO no le gustó recibir DATO (recuperable)</entry></row>
      <row><entry>8</entry><entry>demasiadas cosas entre paréntesis ()</entry></row>
      <row><entry>9</entry><entry>No dices qué debo hacer con DATO</entry></row>
      <row><entry>10</entry><entry>demasiados paréntesis '('</entry></row>
      <row><entry>11</entry><entry>VAR no tiene un valor todavía</entry></row>
      <row><entry>12</entry><entry>paréntesis ')' inesperado</entry></row>
      <row><entry>13</entry><entry>no sé cómo realizar PROCEDIMIENTO (recuperable)</entry></row>
      <row><entry>14</entry><entry>no puedo encontrar la etiqueta <link linkend="command-throw">LANZA</link> (THROW) para ETIQUETA</entry></row>
      <row><entry>15</entry><entry>PROCEDIMIENTO ya está definido</entry></row>
      <row><entry>16</entry><entry>Parando...</entry></row>
      <row><entry>17</entry><entry><link linkend="command-dribble">ECO</link> está activado</entry></row>
      <row><entry>18</entry><entry>Error del sistema de archivos</entry></row>
      <row><entry>19</entry><entry>Asumo que querías decir <link linkend="command-ifelse">SISINO</link> (IFELSE), no <link linkend="command-if">SI</link> (IF) (advertencia)</entry></row>
      <row><entry>20</entry><entry>VAR cubierta por local en llamada a procedimiento (advertencia)</entry></row>
      <row><entry>21</entry><entry><link linkend="command-throw">ATRAPA</link> "Error</entry></row>
      <row><entry>22</entry><entry>PROCEDIMIENTO es una primitiva</entry></row>
      <row><entry>23</entry><entry>No puedes usar <link linkend="command-to">PARA</link> (TO) dentro de un procedimiento</entry></row>
      <row><entry>24</entry><entry>no sé cómo realizar PROCEDIMIENTO (no recuperable)</entry></row>
      <row><entry>25</entry><entry><link linkend="command-iftrue">SICIERTO</link>/<link linkend="command-iffalse">SIFALSO</link> sin <link linkend="command-test">PRUEBA</link> (TEST)</entry></row>
      <row><entry>26</entry><entry>corchete ']' inesperado</entry></row>
      <row><entry>27</entry><entry>llave '}' inesperada</entry></row>
      <row><entry>28</entry><entry>no pude inicializar gráficas</entry></row>
      <row><entry>29</entry><entry>Macro devolvió VALOR en lugar de una lista</entry></row>
      <row><entry>30</entry><entry>No dices qué debo hacer con VALOR</entry></row>
      <row><entry>31</entry><entry>Solo puedes usar <link linkend="command-stop">ALTO</link>/<link linkend="command-output">DEVUELVE</link> dentro de un procedimiento</entry></row>
      <row><entry>32</entry><entry>a <link linkend="command-apply">APLICA</link> no le gustó recibir DATO</entry></row>
      <row><entry>33</entry><entry><link linkend="command-end">FIN</link> (END) dentro de una instrucción multi-línea</entry></row>
      <row><entry>34</entry><entry>Logo: Falta de Memoria (no puede ser atrapado)</entry></row>

      <row><entry>1001</entry><entry>VENTANA ya existe</entry></row>
      <row><entry>1002</entry><entry>VENTANA no existe</entry></row>

      <row><entry>1101</entry><entry>Falló la carga de la DLL</entry></row>
      <row><entry>1102</entry><entry>La DLL no está cargada</entry></row>
      <row><entry>1103</entry><entry>No coincide los tipos de datos</entry></row>
      <row><entry>1104</entry><entry>Tipo de dato de la entrada inválido</entry></row>
      <row><entry>1105</entry><entry>Tipo de dato de retorno inválido</entry></row>
      <row><entry>1106</entry><entry>Función no encontrada</entry></row>

      <row><entry>1201</entry><entry>Problema al leer GIF, revisa memoria o espacio en disco</entry></row>
      <row><entry>1202</entry><entry>Problema al generar GIF, revisa cantidad de memoria o espacio en disco</entry></row>

      <row><entry>1211</entry><entry>No puedo abrir .bmp</entry></row>
      <row><entry>1212</entry><entry>No puedo crear bitmap tipo Windows 3.0</entry></row>
      <row><entry>1213</entry><entry>No puedo guardar .bmp</entry></row>
      <row><entry>1214</entry><entry>No es un bitmap tipo Windows 3.0</entry></row>

      <row><entry>1300</entry><entry>Error de MIDI</entry></row>
      <row><entry>1301</entry><entry>Error de MIDI: Ya está abierto</entry></row>
      <row><entry>1302</entry><entry>Error de MIDI: Dispositivo Midi incorrecto</entry></row>
      <row><entry>1303</entry><entry>Error de MIDI: No está abierto</entry></row>

      <row><entry>1401</entry><entry>Temporizador no encontrado</entry></row>

      <row><entry>1500</entry><entry>El estado está invalido para la instrucción</entry></row>

      <row><entry>2001</entry><entry>a PROCEDIMIENTO no le gustó recibir PROCEDIMIENTO porque toma sus entradas de manera especial</entry></row>
    </tbody>
  </tgroup>
</informaltable>

</para>


   </section>


</chapter>
