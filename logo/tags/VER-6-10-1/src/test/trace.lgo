LOAD "testlib.lgo

TO TRACETEST.TRACEDPROCEDURE
END

TO TRACETEST.TRACEDFUNCTION :x
  OUTPUT :x
END

TO TRACETEST.PROCEDURE

   ; make sure the procedure is not already traced
   SIMPLEREPORTTEST [MEMBERP "TRACETEST.TRACEDPROCEDURE (ITEM 1 TRACED) ] "FALSE

   ; trace the procedure
   TRACEINSTRUCTION [TRACE "TRACETEST.TRACEDPROCEDURE]

   ; make sure the procedure is traced
   SIMPLEREPORTTEST [MEMBERP "TRACETEST.TRACEDPROCEDURE (ITEM 1 TRACED) ] "TRUE

   ; call it (it should trace the call)
   TRACEINSTRUCTION [TRACETEST.TRACEDPROCEDURE]

   ; untrace the procedure
   TRACEINSTRUCTION [UNTRACE "TRACETEST.TRACEDPROCEDURE]

   ; make sure the procedure is not traced anymore
   SIMPLEREPORTTEST [MEMBERP "TRACETEST.TRACEDPROCEDURE (ITEM 1 TRACED) ] "FALSE

   ; call it (it should no longer trace the output)
   TRACEINSTRUCTION [TRACETEST.TRACEDPROCEDURE]

END


TO TRACETEST.FUNCTION

   ; make sure the procedure is not already traced
   SIMPLEREPORTTEST [MEMBERP "TRACETEST.TRACEDFUNCTION (ITEM 1 TRACED) ] "FALSE

   ; trace the function
   TRACEINSTRUCTION [TRACE "TRACETEST.TRACEDFUNCTION]

   ; make sure the procedure is traced
   SIMPLEREPORTTEST [MEMBERP "TRACETEST.TRACEDFUNCTION (ITEM 1 TRACED) ] "TRUE

   ; call it on a variety of output types (they should all be traced)
   SIMPLEREPORTTEST [TRACETEST.TRACEDFUNCTION 123]         123
   SIMPLEREPORTTEST [TRACETEST.TRACEDFUNCTION "outputthis] "outputthis
   SIMPLEREPORTTEST [TRACETEST.TRACEDFUNCTION [1 2 3]]     [1 2 3]
   TRACEINSTRUCTION [TRACETEST.TRACEDFUNCTION {1 2 3}]

   ; untrace the procedure
   TRACEINSTRUCTION [UNTRACE "TRACETEST.TRACEDFUNCTION]

   ; make sure the procedure is not traced anymore
   SIMPLEREPORTTEST [MEMBERP "TRACETEST.TRACEDFUNCTION (ITEM 1 TRACED) ] "FALSE

   ; call it (it should no longer trace the output)
   SIMPLEREPORTTEST [TRACETEST.TRACEDFUNCTION 123] 123

END

TO TRACETEST.VARIABLE

   LOCALMAKE "TRACETEST.TRACEDVARIABLE 0

   ; make sure the variable is not already traced
   SIMPLEREPORTTEST [MEMBERP "TRACETEST.TRACEDVARIABLE (ITEM 2 TRACED) ] "FALSE

   ; trace the variable
   TRACEINSTRUCTION [TRACE NAMELIST "TRACETEST.TRACEDVARIABLE]

   ; make sure the variable is traced
   SIMPLEREPORTTEST [MEMBERP "TRACETEST.TRACEDVARIABLE (ITEM 2 TRACED) ] "TRUE

   ; assign to the variable (the assignment should be traced)
   TRACEINSTRUCTION [MAKE "TRACETEST.TRACEDVARIABLE 123     ]
   TRACEINSTRUCTION [MAKE "TRACETEST.TRACEDVARIABLE "123    ]
   TRACEINSTRUCTION [MAKE "TRACETEST.TRACEDVARIABLE "value  ]
   TRACEINSTRUCTION [MAKE "TRACETEST.TRACEDVARIABLE [1 2 3] ]
   TRACEINSTRUCTION [MAKE "TRACETEST.TRACEDVARIABLE {1 2 3} ]

   ; untrace the variable
   TRACEINSTRUCTION [UNTRACE NAMELIST "TRACETEST.TRACEDVARIABLE]

   ; make sure the variable is not traced anymore
   SIMPLEREPORTTEST [MEMBERP "TRACETEST.TRACEDVARIABLE (ITEM 2 TRACED) ] "FALSE

   ; assign to it (it should no longer trace the assignment)
   TRACEINSTRUCTION [MAKE "TRACETEST.TRACEDVARIABLE 321]

END

TO TRACETEST.PROPERTYLIST

   ; create the propery list
   TRACEINSTRUCTION [PPROP "TRACETEST.TRACEDPLIST "SOMEPROPERTY 0 ]

   ; make sure the propery list is not already traced
   SIMPLEREPORTTEST [MEMBERP "TRACETEST.TRACEDPLIST (ITEM 3 TRACED) ] "FALSE

   ; trace the propery list
   TRACEINSTRUCTION [TRACE PLLIST "TRACETEST.TRACEDPLIST]

   ; make sure the propery list is traced
   SIMPLEREPORTTEST [MEMBERP "TRACETEST.TRACEDPLIST (ITEM 3 TRACED) ] "TRUE

   ; put some properties in the propery list (this should be traced)
   TRACEINSTRUCTION [PPROP "TRACETEST.TRACEDPLIST "PROPERTY1 123     ]
   TRACEINSTRUCTION [PPROP "TRACETEST.TRACEDPLIST "PROPERTY2 "123    ]
   TRACEINSTRUCTION [PPROP "TRACETEST.TRACEDPLIST "PROPERTY3 "value  ]
   TRACEINSTRUCTION [PPROP "TRACETEST.TRACEDPLIST "PROPERTY4 [1 2 3] ]
   TRACEINSTRUCTION [PPROP "TRACETEST.TRACEDPLIST "PROPERTY5 {1 2 3} ]

   ; untrace the propery list
   TRACEINSTRUCTION [UNTRACE PLLIST "TRACETEST.TRACEDPLIST]

   ; make sure the propery list is not traced anymore
   SIMPLEREPORTTEST [MEMBERP "TRACETEST.TRACEDPLIST (ITEM 3 TRACED) ] "FALSE

   ; put some more properties (it should no longer trace this)
   TRACEINSTRUCTION [PPROP "TRACETEST.TRACEDPLIST "PROPERTY6 123     ]
   TRACEINSTRUCTION [PPROP "TRACETEST.TRACEDPLIST "PROPERTY7 "123    ]
   TRACEINSTRUCTION [PPROP "TRACETEST.TRACEDPLIST "PROPERTY8 "value  ]
   TRACEINSTRUCTION [PPROP "TRACETEST.TRACEDPLIST "PROPERTY9 [1 2 3] ]
   TRACEINSTRUCTION [PPROP "TRACETEST.TRACEDPLIST "PROPERTY0 {1 2 3} ]

   TRACEINSTRUCTION [MAKE "TRACETEST.TRACEDPLIST 4321]

END

TO TRACETEST.TRACEALL
 
   ; trace everything
   REPORTTESTINFO [Calling TRACE CONTENTS]
   TRACE CONTENTS
   SIMPLEREPORTTEST [TRACED] CONTENTS

   ; trace nothing
   TRACEINSTRUCTION [UNTRACE CONTENTS]
   SIMPLEREPORTTEST [TRACED] [[][][]]
END

TO TRACETEST.BADINPUT

   RUNTOOMANYINPUTSTEST [(TRACED "toomany)]

   TRACEINSTRUCTION       [(TRACE [[nonexistent] [nonexistent] [nonexistent]])]
   RUNNOTENOUGHINPUTSTEST [(TRACE)]
   RUNTOOMANYINPUTSTEST   [(TRACE "name "toomany)]
   RUNBADINPUTTEST        [(TRACE {name})]
   RUNBADINPUTTEST        [(TRACE [[a][b]{c}])]
   RUNBADINPUTTEST        [(TRACE [a b {c}])]
   RUNBADINPUTTEST        [(TRACE [[a b {c}]])]
   RUNBADINPUTTEST        [(TRACE [[a][b][c][d]])]
   RUNBADINPUTTEST        [(TRACE [[[a]]])]

   TRACEINSTRUCTION       [(UNTRACE [[nonexistent] [nonexistent] [nonexistent]])]
   RUNNOTENOUGHINPUTSTEST [(UNTRACE)]
   RUNTOOMANYINPUTSTEST   [(UNTRACE "name "toomany)]
   RUNBADINPUTTEST        [(UNTRACE {name})]
   RUNBADINPUTTEST        [(UNTRACE [[a][b]{c}])]
   RUNBADINPUTTEST        [(UNTRACE [a b {c}])]
   RUNBADINPUTTEST        [(UNTRACE [[a b {c}]])]
   RUNBADINPUTTEST        [(UNTRACE [[a][b][c][d]])]
   RUNBADINPUTTEST        [(UNTRACE [[[a]]])]
END

TO TRACETEST

   TRACETEST.PROCEDURE
   TRACETEST.FUNCTION
   TRACETEST.VARIABLE
   TRACETEST.PROPERTYLIST
   TRACETEST.TRACEALL
   TRACETEST.BADINPUT

END
