TO SAMPLEPROC  :a  :b
  PRINT :a ; print
  SHOW  :b ; show
END

; Creates a local variable named varname (which must be a string).
; It assigns a value to the variable,
; then outputs the value of the variable.
TO LOCALVARTEST :varname :value

  ; create the local variable
  LOCAL :varname

  ; assign it a value
  MAKE  :varname :value

  ; return the value of :varname (evaluated twice)
  OUTPUT RUN (WORD ": :varname)
END

TO PROCEDURETEST

  ; test TEXT
  SIMPLEREPORTTEST ~
    [TEXT "SAMPLEPROC] ~
    [[a b] [PRINT :a] [SHOW :b]]

  RUNBADINPUTTEST [(TEXT)]
  RUNBADINPUTTEST [(TEXT "nonexistent)]
  RUNBADINPUTTEST [(TEXT [sampleproc])]
  RUNBADINPUTTEST [(TEXT {sampleproc})]

  ; test FULLTEXT
  SIMPLEREPORTTEST ~
     [FULLTEXT "SAMPLEPROC] ~
     (LIST 
        "|TO SAMPLEPROC  :a  :b|
        "|  PRINT :a ; print| 
        "|  SHOW  :b ; show| 
        "END)

   RUNBADINPUTTEST [(FULLTEXT)]
   RUNBADINPUTTEST [(FULLTEXT "nonexistent)]
   RUNBADINPUTTEST [(FULLTEXT [sampleproc])]
   RUNBADINPUTTEST [(FULLTEXT {sampleproc})]

   ; test DEFINEDP
   SIMPLEREPORTTEST [DEFINEDP "nonexistent] "false
   SIMPLEREPORTTEST [DEFINED? "nonexistent] "false
   SIMPLEREPORTTEST [DEFINED? "FORWARD]     "false
   SIMPLEREPORTTEST [DEFINED? "SAMPLEPROC]  "true
   SIMPLEREPORTTEST [DEFINED? "sampleproc]  "true
   SIMPLEREPORTTEST [DEFINED? "||]          "false
   RUNBADINPUTTEST [(DEFINED?)]
   RUNBADINPUTTEST [(DEFINED? {a})]
   RUNBADINPUTTEST [(DEFINED? [])]
   RUNBADINPUTTEST [(DEFINED? "sampleproc "toomany)]

   ; test PROCEDUREP
   SIMPLEREPORTTEST [PROCEDUREP "nonexistent] "false
   SIMPLEREPORTTEST [PROCEDURE? "nonexistent] "false
   SIMPLEREPORTTEST [PROCEDURE? "FORWARD]     "true
   SIMPLEREPORTTEST [PROCEDURE? "SAMPLEPROC]  "true
   SIMPLEREPORTTEST [PROCEDURE? "sampleproc]  "true
   SIMPLEREPORTTEST [PROCEDURE? "||]          "false
   RUNBADINPUTTEST [(PROCEDURE?)]
   RUNBADINPUTTEST [(PROCEDURE? {a})]
   RUNBADINPUTTEST [(PROCEDURE? [])]
   RUNBADINPUTTEST [(PROCEDURE? "sampleproc "toomany)]

   ; test NAMEP
   LOCALMAKE "namepvariable 0
   SIMPLEREPORTTEST [NAMEP "nonexistent]   "false
   SIMPLEREPORTTEST [NAME? "nonexistent]   "false
   SIMPLEREPORTTEST [NAME? "FORWARD]       "false
   SIMPLEREPORTTEST [NAME? "||]            "false
   SIMPLEREPORTTEST [NAME? "namepvariable] "true
   SIMPLEREPORTTEST [NAME? "NAMEPVARIABLE] "true
   RUNBADINPUTTEST [(NAME?)]
   RUNBADINPUTTEST [(NAME? {a})]
   RUNBADINPUTTEST [(NAME? [])]
   RUNBADINPUTTEST [(NAME? "namepvariable "toomany)]

   ; test PRIMITIVEP
   SIMPLEREPORTTEST [PRIMITIVEP "nonexistent]   "false
   SIMPLEREPORTTEST [PRIMITIVE? "nonexistent]   "false
   SIMPLEREPORTTEST [PRIMITIVE? "FORWARD]       "true
   SIMPLEREPORTTEST [PRIMITIVE? "FD]            "true
   SIMPLEREPORTTEST [PRIMITIVE? "||]            "false
   SIMPLEREPORTTEST [PRIMITIVE? "namepvariable] "false
   SIMPLEREPORTTEST [PRIMITIVE? "sampleproc]    "false
   RUNBADINPUTTEST [(PRIMITIVE?)]
   RUNBADINPUTTEST [(PRIMITIVE? {a})]
   RUNBADINPUTTEST [(PRIMITIVE? [])]
   RUNBADINPUTTEST [(PRIMITIVE? "namepvariable "toomany)]

   ; test MACROP
   .DEFMACRO "mymacro [[a b] [print :a] [print :b]]
   SIMPLEREPORTTEST [MACROP "mymacro]       "true
   SIMPLEREPORTTEST [MACRO? "mymacro]       "true
   SIMPLEREPORTTEST [MACRO? "FORWARD]       "false
   SIMPLEREPORTTEST [MACRO? "FD]            "false
   SIMPLEREPORTTEST [MACRO? "||]            "false
   SIMPLEREPORTTEST [MACRO? "namepvariable] "false
   SIMPLEREPORTTEST [MACRO? "sampleproc]    "false
   RUNBADINPUTTEST [(MACRO?)]
   RUNBADINPUTTEST [(MACRO? {a})]
   RUNBADINPUTTEST [(MACRO? [])]
   RUNBADINPUTTEST [(MACRO? "mymacro "toomany)]

   ; test DEFINE
   DEFINE "ECHO [[a] [output :a] ]
   SIMPLEREPORTTEST [ECHO "input] "input
   SIMPLEREPORTTEST [DEFINEDP "ECHO] "true
   SIMPLEREPORTTEST [DEFINED? "ECHO] "true
   RUNBADINPUTTEST [(DEFINE)]
   RUNBADINPUTTEST [(DEFINE "function)]
   RUNBADINPUTTEST [(DEFINE "function [])]

   ; test LOCAL
   SIMPLEREPORTTEST [LOCALVARTEST "unknownlocalvar 42] 42
   SIMPLEREPORTTEST [NAME? "unknownlocalvar] "false

   ; silly, but legal
   LOCAL [10 11]
   MAKE "10 "ten
   MAKE "11 "eleven
   SIMPLEREPORTTEST [:10] "ten
   SIMPLEREPORTTEST [:11] "eleven

   (LOCAL "12 "13)
   MAKE "12 "twelve
   MAKE "13 "eleven
   SIMPLEREPORTTEST [:10] "ten
   SIMPLEREPORTTEST [:11] "eleven

   LOCAL []
   RUNBADINPUTTEST [(LOCAL)]
   RUNBADINPUTTEST [LOCAL {}]


   ; test LOCALMAKE
   LOCALMAKE "mylocalvarname 32
   SIMPLEREPORTTEST [LOCALVARTEST "mylocalvarname 42]  42
   SIMPLEREPORTTEST [:mylocalvarname]                  32
   RUNBADINPUTTEST [(LOCALMAKE)]

   ; Just exercise NAME for now.
   ; we'll figure out how to test its output later
   IGNORE NAMES

   ; Just exercise PO for now.
   ; we'll figure out how to test its output later
   OPENWRITE "po.dump.txt
   LOCALMAKE "previouswriter WRITER
   SETWRITE "po.dump.txt
   PO CONTENTS
   SETWRITE :previouswriter
   CLOSE "po.dump.txt
   ERASEFILE "po.dump.txt

   RUNBADINPUTTEST [(PO)]
END

