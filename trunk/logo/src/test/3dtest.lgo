
TO SETRANDOMORIENTATION
  PENUP
  RIGHT RANDOM 360
  UP    RANDOM 360
  LEFT  RANDOM 360

  SETXYZ RANDOM 100 RANDOM 100 RANDOM 100
  PENDOWN
END

TO ANGLEISCLOSEENOUGH :angle :expectedangle
   LOCALMAKE "tolerance 1e-8

   ; if the angle is within 1e-8 of the expected angle
   IF (ABS (:expectedangle - :angle)) < :tolerance [
      OUTPUT "true
   ]

   ; treat 360 the same as 0
   IF AND (:expectedangle = 0) (ABS (360 - :angle)) < :tolerance [
      OUTPUT "true
   ]
           
   OUTPUT "false
END

TO DOORIENTATIONTEST :neworientation :expectedroll :expectedpitch :expectedheading

  SETRANDOMORIENTATION
  REPORTTESTINFO (list "|Calling SETORIENTATION| :neworientation)
  SETORIENTATION  :neworientation

  ; ORIENTATION should always match (LIST ROLL PITCH HEADING)
  SIMPLEREPORTTEST [LIST? ORIENTATION] "true
  SIMPLEREPORTTEST [COUNT ORIENTATION] 3
  
  LOCALMAKE "currentroll     ITEM 1 ORIENTATION
  LOCALMAKE "currentpitch    ITEM 2 ORIENTATION
  LOCALMAKE "currentheading  ITEM 3 ORIENTATION
  SIMPLEREPORTTEST [ROLL    ]  :currentroll
  SIMPLEREPORTTEST [PITCH   ]  :currentpitch
  SIMPLEREPORTTEST [HEADING ]  :currentheading

  SIMPLEREPORTTEST (LIST "ANGLEISCLOSEENOUGH :currentroll    :expectedroll)    "true
  SIMPLEREPORTTEST (LIST "ANGLEISCLOSEENOUGH :currentpitch   :expectedpitch)   "true
  SIMPLEREPORTTEST (LIST "ANGLEISCLOSEENOUGH :currentheading :expectedheading) "true
END

TO ORIENTATIONTEST

  PERSPECTIVE

  DOORIENTATIONTEST [0    0   0]      0   0   0
  DOORIENTATIONTEST [1    2   3]      1   2   3
  DOORIENTATIONTEST [105  0   0]    105   0   0
  DOORIENTATIONTEST [0  105   0]    180  75 180
  DOORIENTATIONTEST [0    0 105]      0   0 105
  DOORIENTATIONTEST [0  -90   0]      0 270   0
  DOORIENTATIONTEST [0 -105   0]    180 285 180
  DOORIENTATIONTEST [0  465   0]    180  75 180
  DOORIENTATIONTEST [360 360 360]    0    0   0
  DOORIENTATIONTEST [-360 -360 -360] 0    0   0

  ; bad input
  RUNBADINPUTTEST [(SETORIENTATION)]
  RUNBADINPUTTEST [(SETORIENTATION 0)]
  RUNBADINPUTTEST [(SETORIENTATION 0 0)]
  RUNBADINPUTTEST [(SETORIENTATION 0 0 0)]
  RUNBADINPUTTEST [(SETORIENTATION [0])]
  RUNBADINPUTTEST [(SETORIENTATION [0 0])]
  RUNBADINPUTTEST [(SETORIENTATION [a b c])]
  RUNBADINPUTTEST [(SETORIENTATION [0 0 0 0])]
  RUNBADINPUTTEST [(SETORIENTATION {0 0 0})]
  RUNBADINPUTTEST [(SETORIENTATION [0 0 0] "toomany)]

  RUNBADINPUTTEST [(ORIENTATION "toomany)]

  WINDOW
END

