PASS: [-0] returned 0 , as expected.
PASS: [-0.0] returned 0 , as expected.
PASS: [.00] returned 0 , as expected.
PASS: [0e10] returned 0 , as expected.
PASS: [0e+10] returned 0 , as expected.
PASS: [0e-10] returned 0 , as expected.
PASS: [00012] returned 12 , as expected.
PASS: [1e3] returned 1000 , as expected.
PASS: [1.234e3] returned 1234 , as expected.
PASS: [1.234e+3] returned 1234 , as expected.
PASS: [1.23e-1] returned 0.123 , as expected.
PASS: [.5] returned 0.5 , as expected.
PASS: [-.5] returned -0.5 , as expected.
PASS: [0.50000] returned 0.5 , as expected.
PASS: [5000000000000000000000000000000000000000000000000] returned 5e+48 , as expected.
INFO: Executing invalid instruction: [1e1e]
PASS: Running [1e1e] set error code to 13 , as expected.
INFO: ITEM 2 ERROR output [I don't know how to 1e1e] .
INFO: Executing invalid instruction: [1e1.5]
PASS: Running [1e1.5] set error code to 13 , as expected.
INFO: ITEM 2 ERROR output [I don't know how to 1e1.5] .
INFO: Executing invalid instruction: [1.1.]
PASS: Running [1.1.] set error code to 13 , as expected.
INFO: ITEM 2 ERROR output [I don't know how to 1.1.] .
INFO: Executing invalid instruction: [1..]
PASS: Running [1..] set error code to 13 , as expected.
INFO: ITEM 2 ERROR output [I don't know how to 1..] .
INFO: Executing invalid instruction: [.1.]
PASS: Running [.1.] set error code to 13 , as expected.
INFO: ITEM 2 ERROR output [I don't know how to .1.] .
INFO: Executing invalid instruction: [50000000000000000000000000000000000000000000000000]
PASS: Running [50000000000000000000000000000000000000000000000000] set error code to 13 , as expected.
INFO: ITEM 2 ERROR output [I don't know how to 50000000000000000000000000000000000000000000000000] .
PASS: ["WORD] returned WORD , as expected.
PASS: ["A B] returned A B , as expected.
PASS: [DIFFICULTCOMMENTS] returned 1 , as expected.
FAIL: [~IGNOREMEWASCALLED] returned true . We expected false
INFO: Executing invalid instruction: [5**5]
PASS: Running [5**5] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to *] .
INFO: Executing invalid instruction: [*5]
PASS: Running [*5] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to *] .
INFO: Executing invalid instruction: [5*]
FAIL: ITEM 1 ERROR output 7 .  We expected 6 .
INFO: ITEM 2 ERROR output [* doesn't like [] as input] .
INFO: Executing invalid instruction: [-]
FAIL: ITEM 1 ERROR output 7 .  We expected 6 .
INFO: ITEM 2 ERROR output [-- doesn't like [] as input] .
INFO: Executing invalid instruction: [MODULO 100 * 100]
PASS: Running [MODULO 100 * 100] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to MODULO] .
PASS: [RUN :longsequence] returned 5000050000 , as expected.
INFO: Executing invalid instruction: [(LOAD)]
PASS: Running [(LOAD)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to LOAD] .
INFO: Executing invalid instruction: [(LOAD "testlib.lgo "toomany)]
PASS: Running [(LOAD "testlib.lgo "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Executing invalid instruction: [LOAD "doesnotexist.lgo]
PASS: Running [LOAD "doesnotexist.lgo] set error code to 18 , as expected.
INFO: ITEM 2 ERROR output [File system error: Could not open file] .
CALL: ERASE "procedureinworkingdirectory
PASS: [procedureinworkingdirectory] returned 123 , as expected.
INFO: Running invalid instruction
INFO: ITEM 1 ERROR output 13 .
INFO: ITEM 2 ERROR output [I don't know how to
INFO: Executing invalid instruction: [(RUN)]
PASS: Running [(RUN)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to RUN] .
INFO: Running invalid instruction: [RUN {"FD 100}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [RUN doesn't like {"FD 100} as input] .
INFO: Executing invalid instruction: [(RUN [FD 100] "toomany)]
PASS: Running [(RUN [FD 100] "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
PASS: [RUNRESULT [FIRST [1 2 3]]] returned [1] , as expected.
PASS: [RUNRESULT [PENDOWN]] returned [] , as expected.
PASS: [RUNRESULT []] returned [] , as expected.
PASS: [RUNRESULT 100] returned [100] , as expected.
PASS: [RUNRESULT [100]] returned [100] , as expected.
INFO: Executing invalid instruction: [(RUNRESULT)]
PASS: Running [(RUNRESULT)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to RUNRESULT] .
INFO: Executing invalid instruction: [(RUNRESULT "SUM "toomany)]
PASS: Running [(RUNRESULT "SUM "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [RUNRESULT {1 2 3}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [RUNRESULT doesn't like {1 2 3} as input] .
INFO: Executing invalid instruction: [RUNRESULT DOES.NOT.EXIST]
PASS: Running [RUNRESULT DOES.NOT.EXIST] set error code to 13 , as expected.
INFO: ITEM 2 ERROR output [I don't know how to DOES.NOT.EXIST] .
INFO: Executing invalid instruction: [RUNRESULT [1 2 3]]
PASS: Running [RUNRESULT [1 2 3]] set error code to 9 , as expected.
INFO: ITEM 2 ERROR output [You don't say what to do with 1] .
CALL: TOTEST.NOOUTPUT
PASS: [TOTEST.OUTPUT5] returned 5 , as expected.
PASS: [TOTEST.SINGLEINPUT 123] returned 123 , as expected.
INFO: Executing invalid instruction: [TOTEST.OUTPUTDEFAULTINPUT]
PASS: Running [TOTEST.OUTPUTDEFAULTINPUT] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to TOTEST.OUTPUTDEFAULTINPUT] .
PASS: [TOTEST.OUTPUTDEFAULTINPUT 1] returned 123 , as expected.
PASS: [(TOTEST.OUTPUTDEFAULTINPUT 1)] returned 123 , as expected.
INFO: Executing invalid instruction: [TOTEST.OUTPUTDEFAULTINPUT 1 321]
PASS: Running [TOTEST.OUTPUTDEFAULTINPUT 1 321] set error code to 9 , as expected.
INFO: ITEM 2 ERROR output [You don't say what to do with 123] .
PASS: [(TOTEST.OUTPUTDEFAULTINPUT 1 321)] returned 321 , as expected.
INFO: Executing invalid instruction: [(TOTEST.OUTPUTDEFAULTINPUT 1 321 "toomany)]
PASS: Running [(TOTEST.OUTPUTDEFAULTINPUT 1 321 "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Executing invalid instruction: [TOTEST.OUTPUTDEFAULTINPUT.TWOINPUTS 1]
PASS: Running [TOTEST.OUTPUTDEFAULTINPUT.TWOINPUTS 1] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to TOTEST.OUTPUTDEFAULTINPUT.TWOINPUTS] .
PASS: [(TOTEST.OUTPUTDEFAULTINPUT.TWOINPUTS 1)] returned 123 , as expected.
PASS: [TOTEST.OUTPUTDEFAULTINPUT.TWOINPUTS 1 321] returned 321 , as expected.
PASS: [(TOTEST.OUTPUTDEFAULTINPUT.TWOINPUTS 1 321)] returned 321 , as expected.
INFO: Executing invalid instruction: [TOTEST.OUTPUTDEFAULTINPUT.TWOINPUTS 1 321 "toomany]
PASS: Running [TOTEST.OUTPUTDEFAULTINPUT.TWOINPUTS 1 321 "toomany] set error code to 9 , as expected.
INFO: ITEM 2 ERROR output [You don't say what to do with 321] .
INFO: Executing invalid instruction: [(TOTEST.OUTPUTDEFAULTINPUT.TWOINPUTS 1 321 "toomany)]
PASS: Running [(TOTEST.OUTPUTDEFAULTINPUT.TWOINPUTS 1 321 "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
PASS: [TOTEST.OUTPUTREST] returned [] , as expected.
INFO: Executing invalid instruction: [TOTEST.OUTPUTREST 1]
PASS: Running [TOTEST.OUTPUTREST 1] set error code to 9 , as expected.
INFO: ITEM 2 ERROR output [You don't say what to do with []] .
PASS: [(TOTEST.OUTPUTREST 1)] returned [1] , as expected.
PASS: [(TOTEST.OUTPUTREST 1 2)] returned [1 2] , as expected.
PASS: [(TOTEST.OUTPUTREST 1 2 3)] returned [1 2 3] , as expected.
INFO: Executing invalid instruction: [TOTEST.OUTPUTREST.TWOINPUTS 1]
PASS: Running [TOTEST.OUTPUTREST.TWOINPUTS 1] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to TOTEST.OUTPUTREST.TWOINPUTS] .
PASS: [TOTEST.OUTPUTREST.TWOINPUTS 1 2] returned [1 2] , as expected.
INFO: Executing invalid instruction: [TOTEST.OUTPUTREST.TWOINPUTS 1 2 3]
PASS: Running [TOTEST.OUTPUTREST.TWOINPUTS 1 2 3] set error code to 9 , as expected.
INFO: ITEM 2 ERROR output [You don't say what to do with [1 2]] .
PASS: [(TOTEST.OUTPUTREST.TWOINPUTS 1)] returned [1] , as expected.
PASS: [(TOTEST.OUTPUTREST.TWOINPUTS 1 2)] returned [1 2] , as expected.
PASS: [(TOTEST.OUTPUTREST.TWOINPUTS 1 2 3)] returned [1 2 3] , as expected.
PASS: [TOTEST.REPEATEDINPUT 123 456] returned 456 , as expected.
PASS: [(TOTEST.CHAINEDDEFAULTS 1 2 3)] returned 3 , as expected.
PASS: [(TOTEST.CHAINEDDEFAULTS 1 2)] returned 8 , as expected.
PASS: [(TOTEST.CHAINEDDEFAULTS 1)] returned 12 , as expected.
PASS: [(TOTEST.CHAINEDDEFAULTS)] returned 408 , as expected.
FAIL: [DEFINED? TOTEST.BADDEFAULTINPUTS] threw error.  code= 6 . [not enough inputs to TOTEST.BADDEFAULTINPUTS]
INFO: Executing invalid instruction: [FORWARD 1e10]
PASS: Running [FORWARD 1e10] set error code to 3 , as expected.
INFO: ITEM 2 ERROR output [turtle out of bounds] .
INFO: Executing invalid instruction: [1 / 0]
PASS: Running [1 / 0] set error code to 4 , as expected.
INFO: ITEM 2 ERROR output [/ doesn't like 0 as input] .
INFO: Executing invalid instruction: [IGNORE NO.INPUT.NO.OUTPUT]
PASS: Running [IGNORE NO.INPUT.NO.OUTPUT] set error code to 5 , as expected.
INFO: ITEM 2 ERROR output [NO.INPUT.NO.OUTPUT didn't output to IGNORE] .
INFO: Executing invalid instruction: [(ONE.INPUT.NO.OUTPUT)]
PASS: Running [(ONE.INPUT.NO.OUTPUT)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to ONE.INPUT.NO.OUTPUT] .
INFO: Executing invalid instruction: [FORWARD "tensteps]
PASS: Running [FORWARD "tensteps] set error code to 7 , as expected.
INFO: ITEM 2 ERROR output [FORWARD doesn't like tensteps as input] .
INFO: Executing invalid instruction: [(NO.INPUT.NO.OUTPUT "toomany)]
PASS: Running [(NO.INPUT.NO.OUTPUT "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Executing invalid instruction: [I.DONT.KNOW.WHAT.TO.DO.WITH.VALUE]
PASS: Running [I.DONT.KNOW.WHAT.TO.DO.WITH.VALUE] set error code to 9 , as expected.
INFO: ITEM 2 ERROR output [You don't say what to do with 1] .
INFO: Executing invalid instruction: [(ONE.INPUT.NO.OUTPUT]
PASS: Running [(ONE.INPUT.NO.OUTPUT] set error code to 10 , as expected.
INFO: ITEM 2 ERROR output [too many ('s] .
INFO: Executing invalid instruction: [ONE.INPUT.NO.OUTPUT :novalue]
PASS: Running [ONE.INPUT.NO.OUTPUT :novalue] set error code to 11 , as expected.
INFO: ITEM 2 ERROR output [novalue has no value] .
INFO: Executing invalid instruction: [)]
PASS: Running [)] set error code to 12 , as expected.
INFO: ITEM 2 ERROR output [unexpected ')'] .
INFO: Executing invalid instruction: [UNKNOWN.PROC]
PASS: Running [UNKNOWN.PROC] set error code to 13 , as expected.
INFO: ITEM 2 ERROR output [I don't know how to UNKNOWN.PROC] .
INFO: Executing invalid instruction: [MY.PROC.TO.STEP]
PASS: Running [MY.PROC.TO.STEP] set error code to 16 , as expected.
INFO: ITEM 2 ERROR output [Stopping...] .
INFO: Executing invalid instruction: [DRIBBLE "DELETEME.TXT]
PASS: Running [DRIBBLE "DELETEME.TXT] set error code to 17 , as expected.
INFO: ITEM 2 ERROR output [Already dribbling] .
INFO: Executing invalid instruction: [OPENREAD "DELETEME.TXT]
PASS: Running [OPENREAD "DELETEME.TXT] set error code to 18 , as expected.
INFO: ITEM 2 ERROR output [File system error: I can't open that file] .
INFO: Executing invalid instruction: [THROW "ERROR]
PASS: Running [THROW "ERROR] set error code to 21 , as expected.
INFO: ITEM 2 ERROR output [Throw "Error] .
INFO: Executing invalid instruction: [DEFINE "forward [[]]]
PASS: Running [DEFINE "forward [[]]] set error code to 22 , as expected.
INFO: ITEM 2 ERROR output [forward is a primitive] .
INFO: Executing invalid instruction: [PROCEDURE.WITH.TO.INSIDE.IT]
PASS: Running [PROCEDURE.WITH.TO.INSIDE.IT] set error code to 23 , as expected.
INFO: ITEM 2 ERROR output [Can't use TO inside a procedure] .
INFO: Executing invalid instruction: [TEXT "NO.SUCH.PROCEDURE.IS.DEFINED]
PASS: Running [TEXT "NO.SUCH.PROCEDURE.IS.DEFINED] set error code to 24 , as expected.
INFO: ITEM 2 ERROR output [I don't know how to NO.SUCH.PROCEDURE.IS.DEFINED] .
INFO: Executing invalid instruction: [IFTRUE "x]
PASS: Running [IFTRUE "x] set error code to 25 , as expected.
INFO: ITEM 2 ERROR output [IFTRUE without TEST] .
INFO: Executing invalid instruction: [PARSE "]]
PASS: Running [PARSE "]] set error code to 26 , as expected.
INFO: ITEM 2 ERROR output [unexpected ']'] .
INFO: Executing invalid instruction: [RUN "}]
PASS: Running [RUN "}] set error code to 27 , as expected.
INFO: ITEM 2 ERROR output [unexpected '}'] .
INFO: Executing invalid instruction: [MACRO.RETURN.UNBOUND.INSTEAD.OF.LIST]
PASS: Running [MACRO.RETURN.UNBOUND.INSTEAD.OF.LIST] set error code to 29 , as expected.
INFO: ITEM 2 ERROR output [Macro returned Unbound instead of a list] .
INFO: Executing invalid instruction: [APPLY "ONE.INPUT.NO.OUTPUT 1]
PASS: Running [APPLY "ONE.INPUT.NO.OUTPUT 1] set error code to 32 , as expected.
INFO: ITEM 2 ERROR output [APPLY doesn't like 1 as input] .
INFO: Executing invalid instruction: [LOAD "endinmultilineinstruction.lgo]
PASS: Running [LOAD "endinmultilineinstruction.lgo] set error code to 33 , as expected.
INFO: ITEM 2 ERROR output [END inside multi-line instruction.] .
INFO: Setting ERRACT to a procedure that outputs 5
INFO: Calling "SUM 1 [1] ", which should run :erract to replace [1] with 5
PASS: [:thesum] returned 6 , as expected.
INFO: Calling "SUM 1 [1] " again. This used to crash (bug #1517326)
PASS: [:thesum] returned 6 , as expected.
INFO: Setting ERRACT to a value such that we can verify if it is called
INFO: Causing an unrecoverable error outside of a CATCH block
INFO: Executing invalid instruction: [FUNCTION.DOES.NOT.EXIST]
PASS: Running [FUNCTION.DOES.NOT.EXIST] set error code to 13 , as expected.
INFO: ITEM 2 ERROR output [I don't know how to FUNCTION.DOES.NOT.EXIST] .
PASS: [:erract.was.called] returned false , as expected.
PASS: [:erract] returned [MAKE "erract.was.called "true] , as expected.
INFO: Setting ERRACT to a procedure outputs the next value in :erractvalues
CALL: MAKE "erractvalues [[100] 5]
INFO: Calling "SUM 1 [1] " this should keep calling :ERRACT until it gets a good value
INFO: ERRACT handler outputs 100
INFO: ERRACT handler outputs 5
PASS: [:thesum] returned 6 , as expected.
INFO: Setting ERRACT to a procedure changes erract and outputs 6
INFO: Calling "SUM 1 [1] ", which should run :erract to replace [1] with 6
INFO: Entering ERRACTTEST.CHANGEERRACT.OUTPUT.6
PASS: [:erract] returned [ERRACTTEST.CHANGEERRACT.OUTPUT.6] , as expected.
INFO: Changing the value of :erract to [ERRACTTEST.OUTPUT.5]
PASS: [:erract] returned [ERRACTTEST.OUTPUT.5] , as expected.
INFO: Exiting ERRACTTEST.CHANGEERRACT.OUTPUT.6
PASS: [:thesum] returned 7 , as expected.
INFO: Calling "SUM 1 [1] " again. This should use the new erract value
PASS: [:thesum] returned 6 , as expected.
INFO: Setting ERRACT to a value that outputs 5
INFO: Causing a recoverable error just after a CATCH block
PASS: [:outputvalue] returned 6 , as expected.
INFO: Running test where CATCH instruction list doesn't output or throw
INFO: Running test where CATCH instruction list outputs a value
PASS: [:outputvalue] returned 3 , as expected.
INFO: Running test where CATCH instruction list throws
INFO: Running test where CATCH instruction list throws a value
INFO: Entering CATCHTEST.SMOKETEST.THROW
PASS: [:outputvalue] returned [1 2 3 4 5] , as expected.
INFO: Executing invalid instruction: [CATCHTEST.THROW.BUILTIN.ERROR]
PASS: Running [CATCHTEST.THROW.BUILTIN.ERROR] set error code to 13 , as expected.
INFO: ITEM 2 ERROR output [I don't know how to FUNCTION.DOES.NOT.EXIST] .
PASS: Running [THROW "ERROR] set error code to 21 , as expected.
PASS: Running [THROW "ERROR] set error text to [THROW "ERROR] , as expected.
PASS: Running [THROW "ERROR] set error procedure to CATCHTEST.CATCHUSERERROR , as expected.
PASS: Running [THROW "ERROR] set error line to [CATCH "ERROR [THROW "ERROR]] , as expected.
PASS: Running [throw "error] set error code to 21 , as expected.
PASS: Running [throw "error] set error text to [throw "error] , as expected.
PASS: Running [throw "error] set error procedure to CATCHTEST.CATCHUSERERROR , as expected.
PASS: Running [throw "error] set error line to [CATCH "ERROR [throw "error]] , as expected.
PASS: Running [(THROW "ERROR 1234)] set error code to 21 , as expected.
PASS: Running [(THROW "ERROR 1234)] set error text to [1234] , as expected.
PASS: Running [(THROW "ERROR 1234)] set error procedure to catchtest , as expected.
PASS: Running [(THROW "ERROR 1234)] set error line to [CATCHTEST.CATCHUSERERROR] , as expected.
INFO: Entering CATCHTEST.SKIPERRORTAG.CATCHERROR
INFO: Entering CATCHTEST.SKIPERRORTAG.THROW
PASS: [ERROR] returned [] , as expected.
INFO: Exiting CATCHTEST.SKIPERRORTEST
INFO: Entering CATCHTEST.SKIPTHROWTAG.CATCHTHROWTAG
INFO: Entering CATCHTEST.SKIPTHROWTAG.THROWERROR
PASS: Running [CATCHTEST.SKIPTHROWTAG.CATCHTHROWTAG] set error code to 21 , as expected.
PASS: Running [CATCHTEST.SKIPTHROWTAG.CATCHTHROWTAG] set error text to [Throw "Error] , as expected.
PASS: Running [CATCHTEST.SKIPTHROWTAG.CATCHTHROWTAG] set error procedure to CATCHTEST.SKIPTHROWTAG.THROWERROR , as expected.
PASS: Running [CATCHTEST.SKIPTHROWTAG.CATCHTHROWTAG] set error line to [Throw "Error] , as expected.
INFO: Exiting CATCHTEST.SKIPTHROWTAG
INFO: Entering CATCHTEST.SKIPTHROWTAG.CATCHINNERTAG
INFO: Entering CATCHTEST.SKIPTHROWTAGWTIHVALUE.THROWOUTERTAG
PASS: [:throwvalue] returned 12345 , as expected.
INFO: Exiting CATCHTEST.SKIPTHROWTAGWITHVALUE
INFO: Entering CATCHTEST.DOUBLECATCHERROR.INNERCATCHERROR
INFO: Entering CATCHTEST.DOUBLECATCHERROR.THROWERROR
PASS: Running [CATCHTEST.DOUBLECATCHERROR.THROWERROR] set error code to 21 , as expected.
PASS: Running [CATCHTEST.DOUBLECATCHERROR.THROWERROR] set error text to [Throw "Error] , as expected.
PASS: Running [CATCHTEST.DOUBLECATCHERROR.THROWERROR] set error procedure to CATCHTEST.DOUBLECATCHERROR.THROWERROR , as expected.
PASS: Running [CATCHTEST.DOUBLECATCHERROR.THROWERROR] set error line to [Throw "Error] , as expected.
INFO: Exiting CATCHTEST.DOUBLECATCHERROR.INNERCATCHERROR
PASS: [ERROR] returned [] , as expected.
INFO: Exiting CATCHTEST.DOUBLECATCHERROR
INFO: Executing invalid instruction: [(CATCH "error)]
PASS: Running [(CATCH "error)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to CATCH] .
INFO: Executing invalid instruction: [(CATCH "error [instructionlist] "toomany)]
PASS: Running [(CATCH "error [instructionlist] "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Executing invalid instruction: [(THROW)]
PASS: Running [(THROW)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to THROW] .
INFO: Executing invalid instruction: [(THROW "tag "value "toomany)]
PASS: Running [(THROW "tag "value "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
PASS: [(LIST)] returned [] , as expected.
PASS: [(LIST 1)] returned [1] , as expected.
PASS: [(LIST 1 2)] returned [1 2] , as expected.
PASS: [(LIST 1 2 3)] returned [1 2 3] , as expected.
PASS: [(LIST [1] )] returned [[1]] , as expected.
PASS: [(LIST [] )] returned [[]] , as expected.
PASS: [LPUT 3 [1 2]] returned [1 2 3] , as expected.
PASS: [LPUT 1 []] returned [1] , as expected.
PASS: [LPUT [3] [[1] [2]]] returned [[1] [2] [3]] , as expected.
INFO: Testing that LPUT can put an array into a list
PASS: [LPUT :array [1 2 3]] returned [1 2 3 {1 2 3}] , as expected.
INFO: Testing that LPUT isn't destructive
PASS: [LPUT 3 :originallist] returned [1 2 3] , as expected.
PASS: [:originallist] returned [1 2] , as expected.
INFO: Executing invalid instruction: [(LPUT 3)]
PASS: Running [(LPUT 3)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to LPUT] .
INFO: Executing invalid instruction: [(LPUT 3 [1 2] "toomany)]
PASS: Running [(LPUT 3 [1 2] "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [LPUT 3 12]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [LPUT doesn't like 12 as input] .
INFO: Running invalid instruction: [LPUT "c "ab]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [LPUT doesn't like ab as input] .
INFO: Running invalid instruction: [LPUT "3 {1 2}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [LPUT doesn't like {1 2} as input] .
PASS: [FPUT 1 [2 3]] returned [1 2 3] , as expected.
PASS: [FPUT 1 []] returned [1] , as expected.
PASS: [FPUT [1] [[2] [3]]] returned [[1] [2] [3]] , as expected.
INFO: Testing that FPUT can put an array into a list
PASS: [FPUT :array [1 2 3]] returned [{1 2 3} 1 2 3] , as expected.
INFO: Testing that FPUT isn't destructive
PASS: [FPUT 1 :originallist] returned [1 2 3] , as expected.
PASS: [:originallist] returned [2 3] , as expected.
INFO: Executing invalid instruction: [(FPUT 3)]
PASS: Running [(FPUT 3)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to FPUT] .
INFO: Executing invalid instruction: [(FPUT 3 [1 2] "toomany)]
PASS: Running [(FPUT 3 [1 2] "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [FPUT 3 12]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [FPUT doesn't like 12 as input] .
INFO: Running invalid instruction: [FPUT "c "ab]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [FPUT doesn't like ab as input] .
INFO: Running invalid instruction: [FPUT "3 {1 2}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [FPUT doesn't like {1 2} as input] .
PASS: [SE "abc "def] returned [abc def] , as expected.
PASS: [SENTENCE "abc "def] returned [abc def] , as expected.
PASS: [SENTENCE "abc [def]] returned [abc def] , as expected.
PASS: [SENTENCE [abc] "def] returned [abc def] , as expected.
PASS: [SENTENCE [abc def] "ghi] returned [abc def ghi] , as expected.
PASS: [SENTENCE [abc def] [ghi jlk]] returned [abc def ghi jlk] , as expected.
PASS: [SENTENCE [] [abc]] returned [abc] , as expected.
PASS: [SENTENCE [] []] returned [] , as expected.
PASS: [SENTENCE [[abc]] "def] returned [[abc] def] , as expected.
PASS: [(SE "A "sentence "is "simply "a "list "of "words)] returned [A sentence is simply a list of words] , as expected.
PASS: [(SENTENCE "A "sentence "is "simply "a "list "of "words)] returned [A sentence is simply a list of words] , as expected.
PASS: [(SENTENCE [] [abc] [] )] returned [abc] , as expected.
PASS: [(SE)] returned [] , as expected.
PASS: [(SENTENCE)] returned [] , as expected.
PASS: [(SE "abc)] returned [abc] , as expected.
PASS: [(SENTENCE "abc)] returned [abc] , as expected.
INFO: Running invalid instruction: [SENTENCE "abc {def}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SENTENCE doesn't like {def} as input] .
INFO: Running invalid instruction: [SENTENCE {abc} "def]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SENTENCE doesn't like {abc} as input] .
INFO: Running invalid instruction: [(SENTENCE "abc {def} "ghi)]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SENTENCE doesn't like {def} as input] .
CALL: MAKE "list1 [1 2 3]
CALL: MAKE "list2 [4 5 6]
CALL: MAKE "sentence (SENTENCE :list1 :list2)
PASS: [:sentence] returned [1 2 3 4 5 6] , as expected.
PASS: [:list1] returned [1 2 3] , as expected.
PASS: [:list2] returned [4 5 6] , as expected.
PASS: [.EQ 1000 1000] returned false , as expected.
PASS: [.EQ :x :y] returned false , as expected.
PASS: [.EQ :x :x] returned true , as expected.
PASS: [.EQ " "] returned true , as expected.
PASS: [.EQ "false "false] returned true , as expected.
PASS: [.EQ "true "true] returned true , as expected.
PASS: [.EQ [] []] returned true , as expected.
INFO: Executing invalid instruction: [(.EQ)]
PASS: Running [(.EQ)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to .EQ] .
INFO: Executing invalid instruction: [(.EQ 1)]
PASS: Running [(.EQ 1)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to .EQ] .
INFO: Executing invalid instruction: [(.EQ 1 1 "toomany)]
PASS: Running [(.EQ 1 1 "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
PASS: [EQUALP 1 1] returned true , as expected.
PASS: [EQUALP 0 0] returned true , as expected.
PASS: [EQUALP 3.14 3.14] returned true , as expected.
PASS: [EQUALP "hi "hi] returned true , as expected.
PASS: [EQUAL? ["a 1 "ab] ["a 1 "ab]] returned true , as expected.
PASS: [EQUAL? [[1 2 3] [1]] [[1 2 3] [1]]] returned true , as expected.
PASS: [EQUAL? 0 0] returned true , as expected.
PASS: [EQUALP " "] returned true , as expected.
PASS: [EQUALP "true "TRUE] returned true , as expected.
PASS: [EQUALP "false "FALSE] returned true , as expected.
PASS: [EQUAL? :myarray :myarray] returned true , as expected.
PASS: [EQUAL? :myarray :myarray] returned true , as expected.
PASS: [EQUAL? {} {}] returned false , as expected.
PASS: [EQUAL? {1 2 3} {1 2 3}] returned false , as expected.
PASS: [EQUALP 1 1.1] returned false , as expected.
PASS: [EQUALP 0 1] returned false , as expected.
PASS: [EQUALP "hi "hil] returned false , as expected.
PASS: [EQUALP "hil "hi] returned false , as expected.
PASS: [EQUALP "true "false] returned false , as expected.
INFO: Executing invalid instruction: [(EQUAL?)]
PASS: Running [(EQUAL?)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to EQUAL?] .
INFO: Executing invalid instruction: [(EQUAL? 1)]
PASS: Running [(EQUAL? 1)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to EQUAL?] .
INFO: Executing invalid instruction: [(EQUAL? 1 1 "toomany)]
PASS: Running [(EQUAL? 1 1 "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
PASS: [EMPTYP []] returned true , as expected.
PASS: [EMPTY? []] returned true , as expected.
PASS: [EMPTY? [1]] returned false , as expected.
PASS: [EMPTY? [0]] returned false , as expected.
PASS: [EMPTY? 0] returned false , as expected.
PASS: [EMPTY? "] returned true , as expected.
PASS: [EMPTY? " ] returned false , as expected.
PASS: [EMPTY? {}] returned false , as expected.
INFO: Executing invalid instruction: [(EMPTY?)]
PASS: Running [(EMPTY?)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to EMPTY?] .
INFO: Executing invalid instruction: [(EMPTY? [] "toomany)]
PASS: Running [(EMPTY? [] "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
PASS: [NUMBERP 1] returned true , as expected.
PASS: [NUMBER? 1] returned true , as expected.
PASS: [NUMBER? 0] returned true , as expected.
PASS: [NUMBER? -1] returned true , as expected.
PASS: [NUMBER? 3.14] returned true , as expected.
PASS: [NUMBER? "1] returned true , as expected.
PASS: [NUMBER? "-1] returned true , as expected.
PASS: [NUMBER? "3.14] returned true , as expected.
PASS: [NUMBER? {}] returned false , as expected.
PASS: [NUMBER? {2}] returned false , as expected.
PASS: [NUMBER? []] returned false , as expected.
PASS: [NUMBER? [1]] returned false , as expected.
PASS: [NUMBER? "one] returned false , as expected.
PASS: [NUMBER? "1A] returned false , as expected.
PASS: [NUMBER? "] returned false , as expected.
INFO: Executing invalid instruction: [(NUMBER?)]
PASS: Running [(NUMBER?)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to NUMBER?] .
INFO: Executing invalid instruction: [(NUMBER? 1 "toomany)]
PASS: Running [(NUMBER? 1 "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
PASS: [LISTP [1 2 3]] returned true , as expected.
PASS: [LIST? [1 2 3]] returned true , as expected.
PASS: [LIST? []] returned true , as expected.
PASS: [LIST? "list] returned false , as expected.
PASS: [LIST? "[1]] returned false , as expected.
PASS: [LIST? 1] returned false , as expected.
PASS: [LIST? 3.14] returned false , as expected.
PASS: [LIST? {1}] returned false , as expected.
PASS: [LIST? {}] returned false , as expected.
PASS: [LIST? "] returned false , as expected.
INFO: Executing invalid instruction: [(LIST?)]
PASS: Running [(LIST?)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to LIST?] .
INFO: Executing invalid instruction: [(LIST? [] "toomany)]
PASS: Running [(LIST? [] "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
PASS: [WORDP "hello] returned true , as expected.
PASS: [WORD? "hello] returned true , as expected.
PASS: [WORD? 123] returned true , as expected.
PASS: [WORD? 3.14] returned true , as expected.
PASS: [WORD? "] returned true , as expected.
PASS: [WORD? "[1]] returned true , as expected.
PASS: [WORD? []] returned false , as expected.
PASS: [WORD? ["hello]] returned false , as expected.
PASS: [WORD? {}] returned false , as expected.
PASS: [WORD? {"hello}] returned false , as expected.
INFO: Executing invalid instruction: [(WORD?)]
PASS: Running [(WORD?)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to WORD?] .
INFO: Executing invalid instruction: [(WORD? [] "toomany)]
PASS: Running [(WORD? [] "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
PASS: [ARRAYP {1 2 3}] returned true , as expected.
PASS: [ARRAY? {1 2 3}] returned true , as expected.
PASS: [ARRAY? {}] returned true , as expected.
PASS: [ARRAY? "word] returned false , as expected.
PASS: [ARRAY? "{}] returned false , as expected.
PASS: [ARRAY? 1] returned false , as expected.
PASS: [ARRAY? 3.14] returned false , as expected.
PASS: [ARRAY? [1]] returned false , as expected.
PASS: [ARRAY? []] returned false , as expected.
PASS: [ARRAY? "] returned false , as expected.
INFO: Executing invalid instruction: [(ARRAY?)]
PASS: Running [(ARRAY?)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to ARRAY?] .
INFO: Executing invalid instruction: [(ARRAY? {1} "toomany)]
PASS: Running [(ARRAY? {1} "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
PASS: [MEMBERP 2 [1 2 3]] returned true , as expected.
PASS: [MEMBER? 2 [1 2 3]] returned true , as expected.
PASS: [MEMBER? 1 [1]] returned true , as expected.
PASS: [MEMBER? 1 [1 1 1]] returned true , as expected.
PASS: [MEMBER? 0 [1 2 3]] returned false , as expected.
PASS: [MEMBER? [2] [[1] [2] [3]]] returned true , as expected.
PASS: [MEMBER? 2 [[1] [2] [3]]] returned false , as expected.
PASS: [MEMBER? [2] [1 2 3]] returned false , as expected.
PASS: [MEMBER? 1 []] returned false , as expected.
PASS: [MEMBER? 1 {1}] returned true , as expected.
PASS: [MEMBER? 1 {1 1 1}] returned true , as expected.
PASS: [MEMBER? 12 {11 12 13}] returned true , as expected.
PASS: [MEMBER? 12 {}] returned false , as expected.
PASS: [MEMBER? 1 123] returned true , as expected.
PASS: [MEMBER? 4 123] returned false , as expected.
PASS: [MEMBER? 23 123] returned false , as expected.
PASS: [MEMBER? 1 "] returned false , as expected.
PASS: [MEMBER? [1] "123] returned false , as expected.
PASS: [MEMBER? " "hello] returned false , as expected.
PASS: [MEMBER? " (LIST ")] returned true , as expected.
PASS: [MEMBER? " :arrayofemptystring] returned true , as expected.
INFO: Executing invalid instruction: [(MEMBER?)]
PASS: Running [(MEMBER?)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to MEMBER?] .
INFO: Executing invalid instruction: [(MEMBER? 1)]
PASS: Running [(MEMBER? 1)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to MEMBER?] .
INFO: Executing invalid instruction: [(MEMBER? 2 [1 2 3] "toomany)]
PASS: Running [(MEMBER? 2 [1 2 3] "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
PASS: [BEFOREP "ABC "ABD] returned true , as expected.
PASS: [BEFORE? "ABC "ABD] returned true , as expected.
PASS: [BEFORE? "ABD "ABC] returned false , as expected.
PASS: [BEFORE? "ABC "ABC] returned false , as expected.
PASS: [BEFORE? "ABC "ABCD] returned true , as expected.
PASS: [BEFORE? "ABCD "ABC] returned false , as expected.
PASS: [BEFORE? " "A] returned true , as expected.
PASS: [BEFORE? "Z "] returned false , as expected.
INFO: Executing invalid instruction: [(BEFORE?)]
PASS: Running [(BEFORE?)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to BEFORE?] .
INFO: Executing invalid instruction: [(BEFORE? "ABC)]
PASS: Running [(BEFORE? "ABC)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to BEFORE?] .
INFO: Running invalid instruction: [(BEFORE? "ABC [] )]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [BEFORE? doesn't like [] as input] .
INFO: Running invalid instruction: [(BEFORE? [] "ABC)]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [BEFORE? doesn't like [] as input] .
INFO: Executing invalid instruction: [(BEFORE? "ABC "ABC "toomany)]
PASS: Running [(BEFORE? "ABC "ABC "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
PASS: [WORD "o "k] returned ok , as expected.
PASS: [WORD "4 "2] returned 42 , as expected.
PASS: [(WORD)] returned  , as expected.
PASS: [(WORD "o)] returned o , as expected.
PASS: [(WORD "o "k "ay)] returned okay , as expected.
PASS: [(WORD " ")] returned  , as expected.
PASS: [(WORD " "a ")] returned a , as expected.
INFO: Running invalid instruction: [WORD [] "a]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [WORD doesn't like [] as input] .
INFO: Running invalid instruction: [WORD "a []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [WORD doesn't like [] as input] .
INFO: Running invalid instruction: [WORD "a {}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [WORD doesn't like {} as input] .
INFO: Running invalid instruction: [WORD {} "a]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [WORD doesn't like {} as input] .
PASS: [ASCII "a] returned 97 , as expected.
PASS: [ASCII "A] returned 65 , as expected.
PASS: [ASCII 1] returned 49 , as expected.
PASS: [ASCII "(] returned 40 , as expected.
INFO: Executing invalid instruction: [(ASCII)]
PASS: Running [(ASCII)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to ASCII] .
INFO: Executing invalid instruction: [(ASCII "a "b)]
PASS: Running [(ASCII "a "b)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [ASCII [a]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [ASCII doesn't like [a] as input] .
INFO: Running invalid instruction: [ASCII {a}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [ASCII doesn't like {a} as input] .
INFO: Running invalid instruction: [ASCII "ab]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [ASCII doesn't like ab as input] .
INFO: Running invalid instruction: [ASCII 1.2]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [ASCII doesn't like 1.2 as input] .
PASS: [RAWASCII "a] returned 97 , as expected.
PASS: [RAWASCII "A] returned 65 , as expected.
PASS: [RAWASCII 1] returned 49 , as expected.
PASS: [RAWASCII CHAR 0] returned 0 , as expected.
PASS: [RAWASCII CHAR 5] returned 5 , as expected.
PASS: [RAWASCII CHAR 192] returned 192 , as expected.
INFO: Executing invalid instruction: [(RAWASCII)]
PASS: Running [(RAWASCII)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to RAWASCII] .
INFO: Executing invalid instruction: [(RAWASCII "a "b)]
PASS: Running [(RAWASCII "a "b)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [RAWASCII [a]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [RAWASCII doesn't like [a] as input] .
INFO: Running invalid instruction: [RAWASCII {a}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [RAWASCII doesn't like {a} as input] .
INFO: Running invalid instruction: [RAWASCII "ab]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [RAWASCII doesn't like ab as input] .
INFO: Running invalid instruction: [RAWASCII 1.2]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [RAWASCII doesn't like 1.2 as input] .
PASS: [THING "myvariable] returned 1234 , as expected.
PASS: [THING "myvariable] returned [1 2 3] , as expected.
INFO: Executing invalid instruction: [(THING)]
PASS: Running [(THING)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to THING] .
INFO: Executing invalid instruction: [(THING "myvariable "toomany)]
PASS: Running [(THING "myvariable "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [THING "unboundvariable]
INFO: ITEM 1 ERROR output 11 .
INFO: ITEM 2 ERROR output [unboundvariable has no value] .
INFO: Running invalid instruction: [THING [1]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [THING doesn't like [1] as input] .
INFO: Running invalid instruction: [THING {1}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [THING doesn't like {1} as input] .
PASS: [FIRST [1 2 3]] returned 1 , as expected.
PASS: [FIRST [1]] returned 1 , as expected.
PASS: [FIRST {a b c}] returned 1 , as expected.
PASS: [FIRST {a b c}] returned 2 , as expected.
PASS: [FIRST "hello] returned h , as expected.
PASS: [FIRST "h] returned h , as expected.
INFO: Executing invalid instruction: [(FIRST)]
PASS: Running [(FIRST)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to FIRST] .
INFO: Executing invalid instruction: [(FIRST "word "toomany)]
PASS: Running [(FIRST "word "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [FIRST []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [FIRST doesn't like [] as input] .
INFO: Running invalid instruction: [FIRST "]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [FIRST doesn't like  as input] .
INFO: Running invalid instruction: [FIRST {}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [FIRST doesn't like {} as input] .
PASS: [FIRSTS [[1 2 3]]] returned [1] , as expected.
PASS: [FIRSTS [[1 2 3] [a b c]]] returned [1 a] , as expected.
PASS: [FIRSTS [[1 2 3] hello [1] h]] returned [1 h 1 h] , as expected.
PASS: [FIRSTS []] returned [] , as expected.
INFO: Executing invalid instruction: [(FIRSTS)]
PASS: Running [(FIRSTS)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to FIRSTS] .
INFO: Executing invalid instruction: [(FIRSTS [[1 2 3]] "toomany)]
PASS: Running [(FIRSTS [[1 2 3]] "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [FIRSTS (LIST [1 2 3] [] [1 2 3] )]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [FIRSTS doesn't like [] as input] .
INFO: Running invalid instruction: [FIRSTS (LIST [1 2 3] " [1 2 3] )]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [FIRSTS doesn't like  as input] .
INFO: Running invalid instruction: [FIRSTS (LIST [1 2 3] {} [1 2 3] )]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [FIRSTS doesn't like {} as input] .
PASS: [BF [1 2 3]] returned [2 3] , as expected.
PASS: [BUTFIRST [1 2 3]] returned [2 3] , as expected.
PASS: [BUTFIRST [1]] returned [] , as expected.
PASS: [BUTFIRST "hello] returned ello , as expected.
PASS: [BUTFIRST "h] returned  , as expected.
INFO: Executing invalid instruction: [(BUTFIRST)]
PASS: Running [(BUTFIRST)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to BUTFIRST] .
INFO: Executing invalid instruction: [(BUTFIRST "word "toomany)]
PASS: Running [(BUTFIRST "word "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [BUTFIRST []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [BUTFIRST doesn't like [] as input] .
INFO: Running invalid instruction: [BUTFIRST "]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [BUTFIRST doesn't like  as input] .
INFO: Running invalid instruction: [BUTFIRST {1}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [BUTFIRST doesn't like {1} as input] .
PASS: [BFS [[1 2 3]]] returned [[2 3]] , as expected.
PASS: [BUTFIRSTS [[1 2 3]]] returned [[2 3]] , as expected.
PASS: [BUTFIRSTS [[1 2 3] [a b c]]] returned [[2 3] [b c]] , as expected.
PASS: [BUTFIRSTS [[1 2 3] hello [1] h]] returned [[2 3] ello [] ] , as expected.
PASS: [BUTFIRSTS []] returned [] , as expected.
INFO: Executing invalid instruction: [(BUTFIRSTS)]
PASS: Running [(BUTFIRSTS)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to BUTFIRSTS] .
INFO: Executing invalid instruction: [(BUTFIRSTS [[1 2 3]] "toomany)]
PASS: Running [(BUTFIRSTS [[1 2 3]] "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [BUTFIRSTS (LIST [1 2 3] [] [1 2 3] )]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [BUTFIRSTS doesn't like [] as input] .
INFO: Running invalid instruction: [BUTFIRSTS (LIST [1 2 3] " [1 2 3] )]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [BUTFIRSTS doesn't like  as input] .
INFO: Running invalid instruction: [BUTFIRSTS (LIST [1 2 3] {1} [1 2 3] )]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [BUTFIRSTS doesn't like {1} as input] .
PASS: [BL [1 2 3]] returned [1 2] , as expected.
PASS: [BUTLAST [1 2 3]] returned [1 2] , as expected.
PASS: [BUTLAST [1]] returned [] , as expected.
PASS: [BUTLAST "hello] returned hell , as expected.
PASS: [BUTLAST "h] returned  , as expected.
INFO: Executing invalid instruction: [(BUTLAST)]
PASS: Running [(BUTLAST)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to BUTLAST] .
INFO: Executing invalid instruction: [(BUTLAST "word "toomany)]
PASS: Running [(BUTLAST "word "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [BUTLAST []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [BUTLAST doesn't like [] as input] .
INFO: Running invalid instruction: [BUTLAST "]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [BUTLAST doesn't like  as input] .
INFO: Running invalid instruction: [BUTLAST {1}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [BUTLAST doesn't like {1} as input] .
PASS: [LAST [1 2 3]] returned 3 , as expected.
PASS: [LAST [1 2]] returned 2 , as expected.
PASS: [LAST [1]] returned 1 , as expected.
PASS: [LAST "hello] returned o , as expected.
PASS: [LAST "h] returned h , as expected.
INFO: Executing invalid instruction: [(LAST)]
PASS: Running [(LAST)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to LAST] .
INFO: Executing invalid instruction: [(LAST "word "toomany)]
PASS: Running [(LAST "word "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [LAST []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [LAST doesn't like [] as input] .
INFO: Running invalid instruction: [LAST "]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [LAST doesn't like  as input] .
INFO: Running invalid instruction: [LAST {1}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [LAST doesn't like {1} as input] .
PASS: [COUNT :myarray] returned 4 , as expected.
PASS: [ITEM 1 :myarray] returned [] , as expected.
PASS: [ITEM 2 :myarray] returned [] , as expected.
PASS: [ITEM 3 :myarray] returned [] , as expected.
PASS: [ITEM 4 :myarray] returned [] , as expected.
PASS: [ITEM 1 :myarray] returned 42 , as expected.
PASS: [ITEM 2 :myarray] returned hi , as expected.
PASS: [ITEM 3 :myarray] returned [list] , as expected.
PASS: [ITEM 1 :myarray] returned 1 , as expected.
PASS: [ITEM 2 :myarray] returned 2 , as expected.
PASS: [ITEM 3 :myarray] returned 3 , as expected.
PASS: [ITEM 4 :myarray] returned 4 , as expected.
PASS: [COUNT :newarray] returned 4 , as expected.
PASS: [ITEM 1 :newarray] returned 1 , as expected.
PASS: [ITEM 2 :newarray] returned 2 , as expected.
PASS: [ITEM 3 :newarray] returned 3 , as expected.
PASS: [ITEM 4 :newarray] returned 4 , as expected.
PASS: [COUNT :myarray] returned 3 , as expected.
PASS: [ITEM 0 :myarray] returned [] , as expected.
PASS: [ITEM 1 :myarray] returned [] , as expected.
PASS: [ITEM 2 :myarray] returned [] , as expected.
PASS: [ITEM 0 :myarray] returned 0 , as expected.
PASS: [ITEM 1 :myarray] returned 1 , as expected.
PASS: [ITEM 2 :myarray] returned 2 , as expected.
PASS: [ITEM 0 :myarray] returned [0] , as expected.
PASS: [ITEM 1 :myarray] returned [1] , as expected.
PASS: [ITEM 2 :myarray] returned [2] , as expected.
PASS: [COUNT :myarray] returned 3 , as expected.
PASS: [ITEM -100 :myarray] returned 0 , as expected.
PASS: [ITEM -99 :myarray] returned 1 , as expected.
PASS: [ITEM -98 :myarray] returned 2 , as expected.
PASS: [COUNT :myarray] returned 4 , as expected.
PASS: [ITEM 2 :myarray] returned 1 , as expected.
PASS: [ITEM 3 :myarray] returned 2 , as expected.
PASS: [ITEM 4 :myarray] returned 3 , as expected.
PASS: [ITEM 5 :myarray] returned 4 , as expected.
PASS: [COUNT :myarray] returned 4 , as expected.
PASS: [ITEM -2 :myarray] returned 1 , as expected.
PASS: [ITEM -1 :myarray] returned 2 , as expected.
PASS: [ITEM 0 :myarray] returned 3 , as expected.
PASS: [ITEM 1 :myarray] returned 4 , as expected.
INFO: Running invalid instruction: [ARRAY -1]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [ARRAY doesn't like -1 as input] .
INFO: Running invalid instruction: [ARRAY 1.23]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [ARRAY doesn't like 1.23 as input] .
INFO: Running invalid instruction: [ARRAY "two]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [ARRAY doesn't like two as input] .
INFO: Running invalid instruction: [ARRAY {}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [ARRAY doesn't like {} as input] .
INFO: Running invalid instruction: [ARRAY []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [ARRAY doesn't like [] as input] .
INFO: Running invalid instruction: [(ARRAY 5 "origin)]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [ARRAY doesn't like origin as input] .
INFO: Running invalid instruction: [(ARRAY 5 1.23)]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [ARRAY doesn't like 1.23 as input] .
INFO: Running invalid instruction: [(ARRAY 5 {5} )]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [ARRAY doesn't like {5} as input] .
INFO: Running invalid instruction: [(ARRAY 5 [5] )]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [ARRAY doesn't like [5] as input] .
INFO: Creating an empty array (regression test for bug #1349374)
INFO: Executing invalid instruction: [(SETITEM)]
PASS: Running [(SETITEM)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to SETITEM] .
INFO: Executing invalid instruction: [(SETITEM 1)]
PASS: Running [(SETITEM 1)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to SETITEM] .
INFO: Executing invalid instruction: [(SETITEM 1 {1 2 3} )]
PASS: Running [(SETITEM 1 {1 2 3} )] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to SETITEM] .
INFO: Executing invalid instruction: [(SETITEM 1 {1 2 3} "value "toomany)]
PASS: Running [(SETITEM 1 {1 2 3} "value "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [SETITEM "one {1 2 3} "value]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETITEM doesn't like one as input] .
INFO: Running invalid instruction: [SETITEM 1 [1 2 3] "value]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETITEM doesn't like [1 2 3] as input] .
INFO: Running invalid instruction: [SETITEM 1 "string "value]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETITEM doesn't like string as input] .
INFO: Running invalid instruction: [SETITEM 5 {1} "value]
INFO: ITEM 1 ERROR output 4 .
INFO: ITEM 2 ERROR output [SETITEM doesn't like 5 as input] .
INFO: Running invalid instruction: [SETITEM 1 :myarray :myarray]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETITEM doesn't like {1 2 3} as input] .
CALL: MAKE "testqueue []
CALL: QUEUE "testqueue 1
PASS: [:testqueue] returned [1] , as expected.
CALL: QUEUE "testqueue 2
PASS: [:testqueue] returned [1 2] , as expected.
PASS: [DEQUEUE "testqueue] returned 1 , as expected.
PASS: [:testqueue] returned [2] , as expected.
PASS: [DEQUEUE "testqueue] returned 2 , as expected.
PASS: [:testqueue] returned [] , as expected.
CALL: QUEUE "testqueue :testqueue
PASS: [:testqueue] returned [[]] , as expected.
PASS: [DEQUEUE "testqueue] returned [] , as expected.
PASS: [:testqueue] returned [] , as expected.
INFO: Executing invalid instruction: [(DEQUEUE)]
PASS: Running [(DEQUEUE)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to DEQUEUE] .
INFO: Executing invalid instruction: [(DEQUEUE "samplequeue "toomany)]
PASS: Running [(DEQUEUE "samplequeue "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [(DEQUEUE {1 2 3} )]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [thing doesn't like {1 2 3} as input] .
INFO: Running invalid instruction: [(DEQUEUE [1 2 3] )]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [thing doesn't like [1 2 3] as input] .
INFO: Executing invalid instruction: [(DEQUEUE "queuetest.doesnotexist)]
PASS: Running [(DEQUEUE "queuetest.doesnotexist)] set error code to 11 , as expected.
INFO: ITEM 2 ERROR output [queuetest.doesnotexist has no value] .
INFO: Running invalid instruction: [(DEQUEUE "samplequeue)]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [first doesn't like [] as input] .
INFO: Executing invalid instruction: [(QUEUE "samplequeue)]
PASS: Running [(QUEUE "samplequeue)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to QUEUE] .
INFO: Executing invalid instruction: [(QUEUE "samplequeue 1 "toomany)]
PASS: Running [(QUEUE "samplequeue 1 "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [(QUEUE {1 2 3} 1)]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [thing doesn't like {1 2 3} as input] .
INFO: Running invalid instruction: [(QUEUE [1 2 3] 1)]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [thing doesn't like [1 2 3] as input] .
INFO: Executing invalid instruction: [(QUEUE "queuetest.doesnotexist 1)]
PASS: Running [(QUEUE "queuetest.doesnotexist 1)] set error code to 11 , as expected.
INFO: ITEM 2 ERROR output [queuetest.doesnotexist has no value] .
CALL: MAKE "teststack []
CALL: PUSH "teststack 1
PASS: [:teststack] returned [1] , as expected.
CALL: PUSH "teststack 2
PASS: [:teststack] returned [2 1] , as expected.
PASS: [POP "teststack] returned 2 , as expected.
PASS: [:teststack] returned [1] , as expected.
PASS: [POP "teststack] returned 1 , as expected.
PASS: [:teststack] returned [] , as expected.
CALL: PUSH "teststack :teststack
PASS: [:teststack] returned [[]] , as expected.
PASS: [POP "teststack] returned [] , as expected.
PASS: [:teststack] returned [] , as expected.
INFO: Executing invalid instruction: [(POP)]
PASS: Running [(POP)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to POP] .
INFO: Executing invalid instruction: [(POP "samplestack "toomany)]
PASS: Running [(POP "samplestack "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [(POP {1 2 3} )]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [thing doesn't like {1 2 3} as input] .
INFO: Running invalid instruction: [(POP [1 2 3] )]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [thing doesn't like [1 2 3] as input] .
INFO: Executing invalid instruction: [(POP "stacktest.doesnotexist)]
PASS: Running [(POP "stacktest.doesnotexist)] set error code to 11 , as expected.
INFO: ITEM 2 ERROR output [stacktest.doesnotexist has no value] .
INFO: Running invalid instruction: [(POP "samplestack)]
INFO: ITEM 1 ERROR output 11 .
INFO: ITEM 2 ERROR output [samplestack has no value] .
INFO: Executing invalid instruction: [(PUSH "samplestack)]
PASS: Running [(PUSH "samplestack)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to PUSH] .
INFO: Executing invalid instruction: [(PUSH "samplestack 1 "toomany)]
PASS: Running [(PUSH "samplestack 1 "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [(PUSH {1 2 3} 1)]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [thing doesn't like {1 2 3} as input] .
INFO: Running invalid instruction: [(PUSH [1 2 3] 1)]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [thing doesn't like [1 2 3] as input] .
INFO: Executing invalid instruction: [(PUSH "stacktest.doesnotexist 1)]
PASS: Running [(PUSH "stacktest.doesnotexist 1)] set error code to 11 , as expected.
INFO: ITEM 2 ERROR output [stacktest.doesnotexist has no value] .
PASS: [COMBINE "o "k] returned ok , as expected.
PASS: [COMBINE "4 "2] returned 42 , as expected.
PASS: [COMBINE "o []] returned [o] , as expected.
PASS: [COMBINE "1 [2 3]] returned [1 2 3] , as expected.
PASS: [COMBINE [] []] returned [[]] , as expected.
INFO: Executing invalid instruction: [(COMBINE "a)]
PASS: Running [(COMBINE "a)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to COMBINE] .
INFO: Executing invalid instruction: [(COMBINE "a "b "toomany)]
PASS: Running [(COMBINE "a "b "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [COMBINE [] "a]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [word doesn't like [] as input] .
INFO: Running invalid instruction: [COMBINE {} "a]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [word doesn't like {} as input] .
INFO: Running invalid instruction: [COMBINE "a {}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [fput doesn't like {} as input] .
PASS: [REVERSE "abc] returned cba , as expected.
PASS: [REVERSE "a] returned a , as expected.
PASS: [REVERSE "] returned  , as expected.
PASS: [REVERSE 123] returned 321 , as expected.
PASS: [REVERSE 12.34] returned 43.21 , as expected.
PASS: [REVERSE 1e5] returned 000001 , as expected.
PASS: [REVERSE [1 2 3]] returned [3 2 1] , as expected.
PASS: [REVERSE [1]] returned [1] , as expected.
PASS: [REVERSE []] returned [] , as expected.
INFO: Executing invalid instruction: [(REVERSE)]
PASS: Running [(REVERSE)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to REVERSE] .
INFO: Executing invalid instruction: [(REVERSE [1 2 3] [4 5 6] )]
PASS: Running [(REVERSE [1 2 3] [4 5 6] )] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [REVERSE {1 2 3}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [bf doesn't like {1 2 3} as input] .
INFO: Running invalid instruction: [REVERSE {}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [bf doesn't like {} as input] .
PASS: [(OR)] returned false , as expected.
PASS: [(OR "true)] returned true , as expected.
PASS: [(OR "false)] returned false , as expected.
PASS: [(OR "false "false)] returned false , as expected.
PASS: [(OR "true "false)] returned true , as expected.
PASS: [(OR "false "true)] returned true , as expected.
PASS: [(OR "true "true)] returned true , as expected.
PASS: [(OR "false "FALSE "false "FALSE)] returned false , as expected.
PASS: [(OR "false "FALSE "false "TRUE)] returned true , as expected.
INFO: Running invalid instruction: [(OR 1)]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [OR doesn't like 1 as input] .
INFO: Running invalid instruction: [(OR 0)]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [OR doesn't like 0 as input] .
INFO: Running invalid instruction: [(OR "truex)]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [OR doesn't like truex as input] .
INFO: Running invalid instruction: [(OR "falsex)]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [OR doesn't like falsex as input] .
INFO: Running invalid instruction: [(OR "true 1)]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [OR doesn't like 1 as input] .
INFO: Running invalid instruction: [(OR 1 "true)]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [OR doesn't like 1 as input] .
INFO: Running invalid instruction: [(OR "false 0)]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [OR doesn't like 0 as input] .
INFO: Running invalid instruction: [(OR 0 "false)]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [OR doesn't like 0 as input] .
PASS: [(AND)] returned true , as expected.
PASS: [(AND "true)] returned true , as expected.
PASS: [(AND "false)] returned false , as expected.
PASS: [(AND "false "false)] returned false , as expected.
PASS: [(AND "true "false)] returned false , as expected.
PASS: [(AND "false "true)] returned false , as expected.
PASS: [(AND "true "true)] returned true , as expected.
PASS: [(AND "TRUE "true "TRUE "false)] returned false , as expected.
PASS: [(AND "TRUE "true "TRUE "true)] returned true , as expected.
INFO: Running invalid instruction: [(AND 1)]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [AND doesn't like 1 as input] .
INFO: Running invalid instruction: [(AND 0)]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [AND doesn't like 0 as input] .
INFO: Running invalid instruction: [(AND "truex)]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [AND doesn't like truex as input] .
INFO: Running invalid instruction: [(AND "falsex)]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [AND doesn't like falsex as input] .
INFO: Running invalid instruction: [(AND "true 1)]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [AND doesn't like 1 as input] .
INFO: Running invalid instruction: [(AND 1 "true)]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [AND doesn't like 1 as input] .
INFO: Running invalid instruction: [(AND "false 0)]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [AND doesn't like 0 as input] .
INFO: Running invalid instruction: [(AND 0 "false)]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [AND doesn't like 0 as input] .
PASS: [(NOT "true)] returned false , as expected.
PASS: [(NOT "false)] returned true , as expected.
INFO: Executing invalid instruction: [(NOT)]
PASS: Running [(NOT)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to NOT] .
INFO: Running invalid instruction: [(NOT 0)]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [NOT doesn't like 0 as input] .
INFO: Running invalid instruction: [(NOT "truex)]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [NOT doesn't like truex as input] .
INFO: Executing invalid instruction: [(NOT "true "true)]
PASS: Running [(NOT "true "true)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
PASS: [APPLY "SUM [123]] returned 123 , as expected.
PASS: [APPLY "SUM [100 20 3]] returned 123 , as expected.
PASS: [APPLY "APPLYTEST.NONPRIMITIVE [120 3]] returned 123 , as expected.
CALL: ERASE "ARRAYTOLIST
PASS: [APPLY "ARRAYTOLIST [{1 2 3}]] returned [1 2 3] , as expected.
CALL: ERASE "procedureinworkingdirectory
PASS: [APPLY "procedureinworkingdirectory []] returned 123 , as expected.
CALL: APPLY "APPLYTEST.NOOUTPUT []
PASS: [APPLY [1] []] returned 1 , as expected.
PASS: [APPLY "APPLY [SUM [100 20 3]]] returned 123 , as expected.
INFO: Executing invalid instruction: [(APPLY "SUM)]
PASS: Running [(APPLY "SUM)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to APPLY] .
INFO: Executing invalid instruction: [(APPLY "SUM [1 2 3] "toomany)]
PASS: Running [(APPLY "SUM [1 2 3] "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Executing invalid instruction: [APPLY "NONEXISTENT [1 2 3]]
PASS: Running [APPLY "NONEXISTENT [1 2 3]] set error code to 24 , as expected.
INFO: ITEM 2 ERROR output [I don't know how to NONEXISTENT] .
INFO: Executing invalid instruction: [APPLY "TO []]
PASS: Running [APPLY "TO []] set error code to 24 , as expected.
INFO: ITEM 2 ERROR output [I don't know how to TO] .
INFO: Executing invalid instruction: [APPLY 1 []]
PASS: Running [APPLY 1 []] set error code to 24 , as expected.
INFO: ITEM 2 ERROR output [I don't know how to 1] .
INFO: Running invalid instruction: [APPLY {1 2 3} [1 2 3]]
INFO: ITEM 1 ERROR output 32 .
INFO: ITEM 2 ERROR output [APPLY doesn't like {1 2 3} as input] .
INFO: Running invalid instruction: [APPLY [1 2 3] [1 2 3]]
INFO: ITEM 1 ERROR output 9 .
INFO: ITEM 2 ERROR output [You don't say what to do with 1] .
INFO: Running invalid instruction: [APPLY "SUM {1 2 3}]
INFO: ITEM 1 ERROR output 32 .
INFO: ITEM 2 ERROR output [APPLY doesn't like {1 2 3} as input] .
INFO: Executing invalid instruction: [APPLY "APPLYTEST.NONPRIMITIVE [1]]
PASS: Running [APPLY "APPLYTEST.NONPRIMITIVE [1]] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to APPLYTEST.NONPRIMITIVE] .
INFO: Executing invalid instruction: [APPLY "APPLYTEST.NONPRIMITIVE [1 2 3]]
PASS: Running [APPLY "APPLYTEST.NONPRIMITIVE [1 2 3]] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Executing invalid instruction: [APPLY [[A] IGNORE :A] []]
PASS: Running [APPLY [[A] IGNORE :A] []] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to [[A] IGNORE :A]] .
INFO: Executing invalid instruction: [APPLY [[A] IGNORE :A] [1 2]]
PASS: Running [APPLY [[A] IGNORE :A] [1 2]] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Executing invalid instruction: [APPLY [[A] [IGNORE :A]] []]
PASS: Running [APPLY [[A] [IGNORE :A]] []] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to [[A] [IGNORE :A]]] .
INFO: Executing invalid instruction: [APPLY [[A] [IGNORE :A]] [1 2]]
PASS: Running [APPLY [[A] [IGNORE :A]] [1 2]] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [APPLY [IGNORE ?2] [1]]
INFO: ITEM 1 ERROR output 4 .
INFO: ITEM 2 ERROR output [? doesn't like 2 as input] .
CALL: APPLY [] [1 2 3 4 5]
INFO: Running invalid instruction: [SHOW ?]
FAIL: Executing [SHOW ?] did not throw an error
PASS: [APPLYTEST.APPLYOUTPUT] returned 3 , as expected.
CALL: MAKE "lambda.function.ran "false
CALL: APPLY [[] MAKE "lambda.function.ran "true] []
PASS: [:lambda.function.ran] returned true , as expected.
CALL: MAKE "lambda.function.ran "false
CALL: APPLY [[A] MAKE "lambda.function.ran :A] [true]
PASS: [:lambda.function.ran] returned true , as expected.
PASS: [APPLY [[A] SUM 1 :A] [2]] returned 3 , as expected.
PASS: [NAME? "ignored] returned true , as expected.
PASS: [:input] returned 6 , as expected.
PASS: [:input.before] returned 5 , as expected.
PASS: [NAME? "ignored] returned false , as expected.
CALL: APPLY [[] []] []
CALL: MAKE "lambda.function.ran "false
CALL: APPLY [[] [MAKE "lambda.function.ran "true]] []
PASS: [:lambda.function.ran] returned true , as expected.
CALL: MAKE "lambda.function.ran "false
CALL: APPLY [[A] [MAKE "lambda.function.ran :A]] [true]
PASS: [:lambda.function.ran] returned true , as expected.
CALL: MAKE "lambda.function.ran "false
CALL: APPLY [[A] [] [MAKE "lambda.function.ran :A] []] [true]
PASS: [:lambda.function.ran] returned true , as expected.
PASS: [APPLY [[A] [OUTPUT SUM 1 :A]] [2]] returned 3 , as expected.
PASS: [NAME? "ignored] returned true , as expected.
PASS: [:input] returned 6 , as expected.
PASS: [:input.before] returned 5 , as expected.
PASS: [NAME? "ignored] returned false , as expected.
CALL: MAKE "lambda.function.ran "false
CALL: APPLY [MAKE "lambda.function.ran "true] []
PASS: [:lambda.function.ran] returned true , as expected.
CALL: MAKE "lambda.function.ran "false
CALL: APPLY [MAKE "lambda.function.ran ?] [true]
PASS: [:lambda.function.ran] returned true , as expected.
CALL: MAKE "lambda.function.ran "false
CALL: APPLY [APPLY [MAKE "lambda.function.ran ?] ?] [[true]]
PASS: [:lambda.function.ran] returned true , as expected.
PASS: [APPLY [SUM 1 ?] [2]] returned 3 , as expected.
PASS: [APPLY [IGNORE APPLY [1] [BAD] ?] [GOOD]] returned GOOD , as expected.
CALL: MAKE "list []
CALL: REPEAT 5 [MAKE "list LPUT REPCOUNT :list]
PASS: [:list] returned [1 2 3 4 5] , as expected.
CALL: REPEAT 0 [REPORTTESTFAILED [REPEAT 0 executed the body]]
CALL: MAKE "list []
CALL: REPEAT 2 [MAKE "list LPUT "X :list REPEAT 3 [MAKE "list LPUT "Y :list]]
PASS: [:list] returned [X Y Y Y X Y Y Y] , as expected.
CALL: REPEATTEST.OUTPUTINREPEAT
PASS: [REPEATTEST.OUTPUTINREPEAT] returned 50 , as expected.
INFO: Executing invalid instruction: [(REPEAT 100)]
PASS: Running [(REPEAT 100)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to REPEAT] .
INFO: Executing invalid instruction: [(REPEAT 100 [] "toomany)]
PASS: Running [(REPEAT 100 [] "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [REPEAT "word []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [REPEAT doesn't like word as input] .
INFO: Running invalid instruction: [REPEAT [1] []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [REPEAT doesn't like [1] as input] .
INFO: Running invalid instruction: [REPEAT {1} []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [REPEAT doesn't like {1} as input] .
INFO: Running invalid instruction: [REPEAT 12.3 []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [REPEAT doesn't like 12.3 as input] .
INFO: Running invalid instruction: [REPEAT -1 []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [REPEAT doesn't like -1 as input] .
INFO: Running invalid instruction: [REPEAT 0 {}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [REPEAT doesn't like {} as input] .
PASS: [REPCOUNT] returned -1 , as expected.
PASS: [REPCOUNT] returned -1 , as expected.
CALL: MAKE "list []
CALL: REPEAT 2 [MAKE "list LPUT REPCOUNT :list REPEAT 3 [MAKE "list LPUT REPCOUNT :list]]
PASS: [:list] returned [1 1 2 3 2 1 2 3] , as expected.
PASS: [COUNT :word] returned 1000 , as expected.
PASS: REPEAT in main loop did not change REPCOUNT in timer event
PASS: REPEAT in main loop did not change REPCOUNT in timer event
INFO: Executing invalid instruction: [(REPCOUNT "toomany)]
PASS: Running [(REPCOUNT "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
PASS: [0 + 0] returned 0 , as expected.
PASS: [0 + 1] returned 1 , as expected.
PASS: [0 + -1] returned -1 , as expected.
PASS: [5 + 0] returned 5 , as expected.
PASS: [5 + 1] returned 6 , as expected.
PASS: [5 + -1] returned 4 , as expected.
PASS: [-5 + 0] returned -5 , as expected.
PASS: [-5 + 1] returned -4 , as expected.
PASS: [-5 + -1] returned -6 , as expected.
PASS: [SUM 0 0] returned 0 , as expected.
PASS: [SUM 0 1] returned 1 , as expected.
PASS: [SUM 0 -1] returned -1 , as expected.
PASS: [SUM 5 0] returned 5 , as expected.
PASS: [SUM 5 1] returned 6 , as expected.
PASS: [SUM 5 -1] returned 4 , as expected.
PASS: [SUM "1 "2] returned 3 , as expected.
PASS: [SUM 1e40 2e39] returned 1.2e+40 , as expected.
PASS: [(SUM)] returned 0 , as expected.
PASS: [(SUM 5)] returned 5 , as expected.
PASS: [(SUM 1 2 3 4 5)] returned 15 , as expected.
PASS: [(SUM 1 2.5 3 4.5 5)] returned 16 , as expected.
INFO: Running invalid instruction: [[] + 2]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [+ doesn't like [] as input] .
INFO: Running invalid instruction: [[1] + 2]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [+ doesn't like [1] as input] .
INFO: Running invalid instruction: [{} + 2]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [+ doesn't like {} as input] .
INFO: Running invalid instruction: [{1} + 2]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [+ doesn't like {1} as input] .
INFO: Running invalid instruction: ["one + 2]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [+ doesn't like one as input] .
INFO: Running invalid instruction: ["1a + 2]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [+ doesn't like 1a as input] .
INFO: Running invalid instruction: [1 + []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [+ doesn't like [] as input] .
INFO: Running invalid instruction: [1 + [2]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [+ doesn't like [2] as input] .
INFO: Running invalid instruction: [1 + {}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [+ doesn't like {} as input] .
INFO: Running invalid instruction: [1 + {2}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [+ doesn't like {2} as input] .
INFO: Running invalid instruction: [1 + "two]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [+ doesn't like two as input] .
INFO: Running invalid instruction: [1 + "2a]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [+ doesn't like 2a as input] .
INFO: Running invalid instruction: [SUM [] 2]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SUM doesn't like [] as input] .
INFO: Running invalid instruction: [SUM [1] 2]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SUM doesn't like [1] as input] .
INFO: Running invalid instruction: [SUM {} 2]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SUM doesn't like {} as input] .
INFO: Running invalid instruction: [SUM {1} 2]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SUM doesn't like {1} as input] .
INFO: Running invalid instruction: [SUM "one 2]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SUM doesn't like one as input] .
INFO: Running invalid instruction: [SUM "1a 2]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SUM doesn't like 1a as input] .
INFO: Running invalid instruction: [SUM 1 []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SUM doesn't like [] as input] .
INFO: Running invalid instruction: [SUM 1 [2]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SUM doesn't like [2] as input] .
INFO: Running invalid instruction: [SUM 1 {}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SUM doesn't like {} as input] .
INFO: Running invalid instruction: [SUM 1 {2}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SUM doesn't like {2} as input] .
INFO: Running invalid instruction: [SUM 1 "two]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SUM doesn't like two as input] .
INFO: Running invalid instruction: [SUM 1 "2a]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SUM doesn't like 2a as input] .
INFO: Running invalid instruction: [(SUM 1 2 [] )]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SUM doesn't like [] as input] .
INFO: Running invalid instruction: [(SUM 1 2 [3] )]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SUM doesn't like [3] as input] .
INFO: Running invalid instruction: [(SUM 1 2 {} )]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SUM doesn't like {} as input] .
INFO: Running invalid instruction: [(SUM 1 2 {3} )]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SUM doesn't like {3} as input] .
INFO: Running invalid instruction: [(SUM 1 2 "three)]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SUM doesn't like three as input] .
INFO: Running invalid instruction: [(SUM 1 2 "3a)]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SUM doesn't like 3a as input] .
PASS: [0 - 0] returned 0 , as expected.
PASS: [0 - 1] returned -1 , as expected.
PASS: [0 - -1] returned 1 , as expected.
PASS: [5 - 0] returned 5 , as expected.
PASS: [5 - 1] returned 4 , as expected.
PASS: [5 - -1] returned 6 , as expected.
PASS: [-5 - 0] returned -5 , as expected.
PASS: [-5 - 1] returned -6 , as expected.
PASS: [-5 - -1] returned -4 , as expected.
PASS: [DIFFERENCE 0 0] returned 0 , as expected.
PASS: [DIFFERENCE 0 1] returned -1 , as expected.
PASS: [DIFFERENCE 0 -1] returned 1 , as expected.
PASS: [DIFFERENCE 5 0] returned 5 , as expected.
PASS: [DIFFERENCE 5 1] returned 4 , as expected.
PASS: [DIFFERENCE 5 -1] returned 6 , as expected.
PASS: [DIFFERENCE "3 "2] returned 1 , as expected.
PASS: [DIFFERENCE 1.2e40 2e39] returned 1e+40 , as expected.
INFO: Executing invalid instruction: [(DIFFERENCE)]
PASS: Running [(DIFFERENCE)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to DIFFERENCE] .
INFO: Executing invalid instruction: [(DIFFERENCE 5)]
PASS: Running [(DIFFERENCE 5)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to DIFFERENCE] .
INFO: Executing invalid instruction: [(DIFFERENCE 5 6 7)]
PASS: Running [(DIFFERENCE 5 6 7)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [[] - 2]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [- doesn't like [] as input] .
INFO: Running invalid instruction: [[1] - 2]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [- doesn't like [1] as input] .
INFO: Running invalid instruction: [{} - 2]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [- doesn't like {} as input] .
INFO: Running invalid instruction: [{1} - 2]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [- doesn't like {1} as input] .
INFO: Running invalid instruction: ["one - 2]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [- doesn't like one as input] .
INFO: Running invalid instruction: ["1a - 2]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [- doesn't like 1a as input] .
INFO: Running invalid instruction: [1 - []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [- doesn't like [] as input] .
INFO: Running invalid instruction: [1 - [2]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [- doesn't like [2] as input] .
INFO: Running invalid instruction: [1 - {}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [- doesn't like {} as input] .
INFO: Running invalid instruction: [1 - {2}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [- doesn't like {2} as input] .
INFO: Running invalid instruction: [1 - "two]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [- doesn't like two as input] .
INFO: Running invalid instruction: [1 - "2a]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [- doesn't like 2a as input] .
INFO: Running invalid instruction: [DIFFERENCE [] 2]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [DIFFERENCE doesn't like [] as input] .
INFO: Running invalid instruction: [DIFFERENCE [1] 2]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [DIFFERENCE doesn't like [1] as input] .
INFO: Running invalid instruction: [DIFFERENCE {} 2]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [DIFFERENCE doesn't like {} as input] .
INFO: Running invalid instruction: [DIFFERENCE {1} 2]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [DIFFERENCE doesn't like {1} as input] .
INFO: Running invalid instruction: [DIFFERENCE "one 2]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [DIFFERENCE doesn't like one as input] .
INFO: Running invalid instruction: [DIFFERENCE "1a 2]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [DIFFERENCE doesn't like 1a as input] .
INFO: Running invalid instruction: [DIFFERENCE 1 []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [DIFFERENCE doesn't like [] as input] .
INFO: Running invalid instruction: [DIFFERENCE 1 [2]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [DIFFERENCE doesn't like [2] as input] .
INFO: Running invalid instruction: [DIFFERENCE 1 {}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [DIFFERENCE doesn't like {} as input] .
INFO: Running invalid instruction: [DIFFERENCE 1 {2}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [DIFFERENCE doesn't like {2} as input] .
INFO: Running invalid instruction: [DIFFERENCE 1 "two]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [DIFFERENCE doesn't like two as input] .
INFO: Running invalid instruction: [DIFFERENCE 1 "2a]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [DIFFERENCE doesn't like 2a as input] .
PASS: [-0] returned 0 , as expected.
PASS: [MINUS 0] returned 0 , as expected.
PASS: [MINUS 0] returned 0 , as expected.
PASS: [MINUS 2] returned -2 , as expected.
PASS: [MINUS -2] returned 2 , as expected.
PASS: [MINUS -2e20] returned 2e+20 , as expected.
INFO: Running invalid instruction: [MINUS []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [MINUS doesn't like [] as input] .
INFO: Running invalid instruction: [MINUS [1]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [MINUS doesn't like [1] as input] .
INFO: Running invalid instruction: [MINUS {}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [MINUS doesn't like {} as input] .
INFO: Running invalid instruction: [MINUS {1}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [MINUS doesn't like {1} as input] .
INFO: Running invalid instruction: [MINUS "one]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [MINUS doesn't like one as input] .
INFO: Running invalid instruction: [MINUS "1a]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [MINUS doesn't like 1a as input] .
INFO: Executing invalid instruction: [(MINUS)]
PASS: Running [(MINUS)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to MINUS] .
INFO: Executing invalid instruction: [(MINUS 1 1)]
PASS: Running [(MINUS 1 1)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
PASS: [0 * 0] returned 0 , as expected.
PASS: [0 * 1] returned 0 , as expected.
PASS: [1 * 0] returned 0 , as expected.
PASS: [2 * 4] returned 8 , as expected.
PASS: [4 * 2] returned 8 , as expected.
PASS: [-2 * 4] returned -8 , as expected.
PASS: [2 * -4] returned -8 , as expected.
PASS: [-2 * -4] returned 8 , as expected.
PASS: ["2 * "4] returned 8 , as expected.
PASS: [1e10 * 2e20] returned 2e+30 , as expected.
PASS: [1e200 * 1e200] returned +INF , as expected.
PASS: [1e200 * -1e200] returned -INF , as expected.
PASS: [-1e200 * -1e200] returned +INF , as expected.
PASS: [1e200 * 1e-200] returned 1 , as expected.
PASS: [PRODUCT 0 0] returned 0 , as expected.
PASS: [PRODUCT 0 1] returned 0 , as expected.
PASS: [PRODUCT 1 0] returned 0 , as expected.
PASS: [PRODUCT 2 4] returned 8 , as expected.
PASS: [PRODUCT 4 2] returned 8 , as expected.
PASS: [PRODUCT -2 4] returned -8 , as expected.
PASS: [PRODUCT 2 -4] returned -8 , as expected.
PASS: [PRODUCT -2 -4] returned 8 , as expected.
PASS: [PRODUCT "2 "4] returned 8 , as expected.
PASS: [PRODUCT 1e10 2e20] returned 2e+30 , as expected.
PASS: [PRODUCT 1e200 1e200] returned +INF , as expected.
PASS: [PRODUCT 1e200 -1e200] returned -INF , as expected.
PASS: [PRODUCT -1e200 -1e200] returned +INF , as expected.
PASS: [PRODUCT 1e200 1e-200] returned 1 , as expected.
PASS: [(PRODUCT)] returned 1 , as expected.
PASS: [(PRODUCT 5)] returned 5 , as expected.
PASS: [(PRODUCT 1 2 3 4 5)] returned 120 , as expected.
PASS: [(PRODUCT 1 2 3 4 5 0.5)] returned 60 , as expected.
PASS: [(PRODUCT 1.10 1 2 3 4 5)] returned 132 , as expected.
FAIL: [(PRODUCT 1.01 1 2 3 4 5)] returned 121.2 . We expected 121.2
INFO: Running invalid instruction: [[] * 2]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [* doesn't like [] as input] .
INFO: Running invalid instruction: [[1] * 2]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [* doesn't like [1] as input] .
INFO: Running invalid instruction: [{} * 2]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [* doesn't like {} as input] .
INFO: Running invalid instruction: [{1} * 2]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [* doesn't like {1} as input] .
INFO: Running invalid instruction: ["one * 2]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [* doesn't like one as input] .
INFO: Running invalid instruction: ["1a * 2]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [* doesn't like 1a as input] .
INFO: Running invalid instruction: [1 * []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [* doesn't like [] as input] .
INFO: Running invalid instruction: [1 * [2]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [* doesn't like [2] as input] .
INFO: Running invalid instruction: [1 * {}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [* doesn't like {} as input] .
INFO: Running invalid instruction: [1 * {2}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [* doesn't like {2} as input] .
INFO: Running invalid instruction: [1 * "two]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [* doesn't like two as input] .
INFO: Running invalid instruction: [1 * "2a]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [* doesn't like 2a as input] .
INFO: Running invalid instruction: [PRODUCT [] 2]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [PRODUCT doesn't like [] as input] .
INFO: Running invalid instruction: [PRODUCT [1] 2]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [PRODUCT doesn't like [1] as input] .
INFO: Running invalid instruction: [PRODUCT {} 2]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [PRODUCT doesn't like {} as input] .
INFO: Running invalid instruction: [PRODUCT {1} 2]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [PRODUCT doesn't like {1} as input] .
INFO: Running invalid instruction: [PRODUCT "one 2]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [PRODUCT doesn't like one as input] .
INFO: Running invalid instruction: [PRODUCT "1a 2]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [PRODUCT doesn't like 1a as input] .
INFO: Running invalid instruction: [PRODUCT 1 []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [PRODUCT doesn't like [] as input] .
INFO: Running invalid instruction: [PRODUCT 1 [2]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [PRODUCT doesn't like [2] as input] .
INFO: Running invalid instruction: [PRODUCT 1 {}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [PRODUCT doesn't like {} as input] .
INFO: Running invalid instruction: [PRODUCT 1 {2}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [PRODUCT doesn't like {2} as input] .
INFO: Running invalid instruction: [PRODUCT 1 "two]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [PRODUCT doesn't like two as input] .
INFO: Running invalid instruction: [PRODUCT 1 "2a]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [PRODUCT doesn't like 2a as input] .
INFO: Running invalid instruction: [(PRODUCT 1 2 [] )]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [PRODUCT doesn't like [] as input] .
INFO: Running invalid instruction: [(PRODUCT 1 2 [3] )]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [PRODUCT doesn't like [3] as input] .
INFO: Running invalid instruction: [(PRODUCT 1 2 {} )]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [PRODUCT doesn't like {} as input] .
INFO: Running invalid instruction: [(PRODUCT 1 2 {3} )]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [PRODUCT doesn't like {3} as input] .
INFO: Running invalid instruction: [(PRODUCT 1 2 "three)]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [PRODUCT doesn't like three as input] .
INFO: Running invalid instruction: [(PRODUCT 1 2 "3a)]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [PRODUCT doesn't like 3a as input] .
PASS: [5 / 2] returned 2.5 , as expected.
PASS: [5 / -2] returned -2.5 , as expected.
PASS: [-5 / 2] returned -2.5 , as expected.
PASS: [-5 / -2] returned 2.5 , as expected.
PASS: [4 / 2] returned 2 , as expected.
PASS: [0 / 2] returned 0 , as expected.
PASS: [2.2 / 2] returned 1.1 , as expected.
FAIL: [6.6 / 2.2] returned 3 . We expected 3
PASS: [2e40 / 2e20] returned 1e+20 , as expected.
PASS: [QUOTIENT 5 2] returned 2.5 , as expected.
PASS: [QUOTIENT 5 -2] returned -2.5 , as expected.
PASS: [QUOTIENT -5 2] returned -2.5 , as expected.
PASS: [QUOTIENT -5 -2] returned 2.5 , as expected.
PASS: [QUOTIENT 4 2] returned 2 , as expected.
PASS: [QUOTIENT 0 2] returned 0 , as expected.
PASS: [QUOTIENT 2.2 2] returned 1.1 , as expected.
FAIL: [QUOTIENT 6.6 2.2] returned 3 . We expected 3
PASS: [QUOTIENT "5 "2] returned 2.5 , as expected.
PASS: [QUOTIENT 2e40 2e20] returned 1e+20 , as expected.
PASS: [(QUOTIENT 1)] returned 1 , as expected.
PASS: [(QUOTIENT 10)] returned 0.1 , as expected.
PASS: [(QUOTIENT 0.5)] returned 2 , as expected.
PASS: [(QUOTIENT 1e40)] returned 1e-40 , as expected.
INFO: Executing invalid instruction: [(QUOTIENT)]
PASS: Running [(QUOTIENT)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to QUOTIENT] .
INFO: Executing invalid instruction: [(QUOTIENT 5 6 7)]
PASS: Running [(QUOTIENT 5 6 7)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [[] / 2]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [/ doesn't like [] as input] .
INFO: Running invalid instruction: [[1] / 2]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [/ doesn't like [1] as input] .
INFO: Running invalid instruction: [{} / 2]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [/ doesn't like {} as input] .
INFO: Running invalid instruction: [{1} / 2]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [/ doesn't like {1} as input] .
INFO: Running invalid instruction: ["one / 2]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [/ doesn't like one as input] .
INFO: Running invalid instruction: ["1a / 2]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [/ doesn't like 1a as input] .
INFO: Running invalid instruction: [1 / 0]
INFO: ITEM 1 ERROR output 4 .
INFO: ITEM 2 ERROR output [/ doesn't like 0 as input] .
INFO: Running invalid instruction: [1 / []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [/ doesn't like [] as input] .
INFO: Running invalid instruction: [1 / [2]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [/ doesn't like [2] as input] .
INFO: Running invalid instruction: [1 / {}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [/ doesn't like {} as input] .
INFO: Running invalid instruction: [1 / {2}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [/ doesn't like {2} as input] .
INFO: Running invalid instruction: [1 / "two]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [/ doesn't like two as input] .
INFO: Running invalid instruction: [1 / "2a]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [/ doesn't like 2a as input] .
INFO: Running invalid instruction: [(QUOTIENT 0 )]
INFO: ITEM 1 ERROR output 4 .
INFO: ITEM 2 ERROR output [QUOTIENT doesn't like 0 as input] .
INFO: Running invalid instruction: [(QUOTIENT [] )]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [QUOTIENT doesn't like [] as input] .
INFO: Running invalid instruction: [(QUOTIENT [1] )]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [QUOTIENT doesn't like [1] as input] .
INFO: Running invalid instruction: [(QUOTIENT {} )]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [QUOTIENT doesn't like {} as input] .
INFO: Running invalid instruction: [(QUOTIENT {1} )]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [QUOTIENT doesn't like {1} as input] .
INFO: Running invalid instruction: [(QUOTIENT "one )]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [QUOTIENT doesn't like one as input] .
INFO: Running invalid instruction: [(QUOTIENT "1a )]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [QUOTIENT doesn't like 1a as input] .
INFO: Running invalid instruction: [QUOTIENT [] 2]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [QUOTIENT doesn't like [] as input] .
INFO: Running invalid instruction: [QUOTIENT [1] 2]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [QUOTIENT doesn't like [1] as input] .
INFO: Running invalid instruction: [QUOTIENT {} 2]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [QUOTIENT doesn't like {} as input] .
INFO: Running invalid instruction: [QUOTIENT {1} 2]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [QUOTIENT doesn't like {1} as input] .
INFO: Running invalid instruction: [QUOTIENT "one 2]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [QUOTIENT doesn't like one as input] .
INFO: Running invalid instruction: [QUOTIENT "1a 2]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [QUOTIENT doesn't like 1a as input] .
INFO: Running invalid instruction: [QUOTIENT 1 0]
INFO: ITEM 1 ERROR output 4 .
INFO: ITEM 2 ERROR output [QUOTIENT doesn't like 0 as input] .
INFO: Running invalid instruction: [QUOTIENT 1 []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [QUOTIENT doesn't like [] as input] .
INFO: Running invalid instruction: [QUOTIENT 1 [2]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [QUOTIENT doesn't like [2] as input] .
INFO: Running invalid instruction: [QUOTIENT 1 {}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [QUOTIENT doesn't like {} as input] .
INFO: Running invalid instruction: [QUOTIENT 1 {2}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [QUOTIENT doesn't like {2} as input] .
INFO: Running invalid instruction: [QUOTIENT 1 "two]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [QUOTIENT doesn't like two as input] .
INFO: Running invalid instruction: [QUOTIENT 1 "2a]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [QUOTIENT doesn't like 2a as input] .
INFO: Running invalid instruction: [QUOTIENT 0 "2a]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [QUOTIENT doesn't like 2a as input] .
PASS: [REMAINDER 5 6] returned 5 , as expected.
PASS: [REMAINDER 6 2] returned 0 , as expected.
PASS: [REMAINDER 0 2] returned 0 , as expected.
PASS: [REMAINDER 5 5] returned 0 , as expected.
PASS: [REMAINDER 6 4] returned 2 , as expected.
PASS: [REMAINDER -6 4] returned -2 , as expected.
PASS: [REMAINDER 6 -4] returned 2 , as expected.
PASS: [REMAINDER -6 -4] returned -2 , as expected.
PASS: [REMAINDER "5 "2] returned 1 , as expected.
INFO: Executing invalid instruction: [(REMAINDER)]
PASS: Running [(REMAINDER)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to REMAINDER] .
INFO: Executing invalid instruction: [(REMAINDER 1)]
PASS: Running [(REMAINDER 1)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to REMAINDER] .
INFO: Executing invalid instruction: [(REMAINDER 5 6 7)]
PASS: Running [(REMAINDER 5 6 7)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [REMAINDER [] 2]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [REMAINDER doesn't like [] as input] .
INFO: Running invalid instruction: [REMAINDER [1] 2]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [REMAINDER doesn't like [1] as input] .
INFO: Running invalid instruction: [REMAINDER {} 2]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [REMAINDER doesn't like {} as input] .
INFO: Running invalid instruction: [REMAINDER {1} 2]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [REMAINDER doesn't like {1} as input] .
INFO: Running invalid instruction: [REMAINDER "one 2]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [REMAINDER doesn't like one as input] .
INFO: Running invalid instruction: [REMAINDER "1a 2]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [REMAINDER doesn't like 1a as input] .
INFO: Running invalid instruction: [REMAINDER 1 0]
INFO: ITEM 1 ERROR output 4 .
INFO: ITEM 2 ERROR output [REMAINDER doesn't like 0 as input] .
INFO: Running invalid instruction: [REMAINDER 1 []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [REMAINDER doesn't like [] as input] .
INFO: Running invalid instruction: [REMAINDER 1 [2]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [REMAINDER doesn't like [2] as input] .
INFO: Running invalid instruction: [REMAINDER 1 {}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [REMAINDER doesn't like {} as input] .
INFO: Running invalid instruction: [REMAINDER 1 {2}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [REMAINDER doesn't like {2} as input] .
INFO: Running invalid instruction: [REMAINDER 1 "two]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [REMAINDER doesn't like two as input] .
INFO: Running invalid instruction: [REMAINDER 1 "2a]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [REMAINDER doesn't like 2a as input] .
INFO: Running invalid instruction: [REMAINDER 0 "2a]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [REMAINDER doesn't like 2a as input] .
PASS: [MODULO 5 6] returned 5 , as expected.
PASS: [MODULO 6 2] returned 0 , as expected.
PASS: [MODULO 0 2] returned 0 , as expected.
PASS: [MODULO 5 5] returned 0 , as expected.
PASS: [MODULO 6 4] returned 2 , as expected.
PASS: [MODULO 6 -4] returned -2 , as expected.
PASS: [MODULO -6 4] returned 2 , as expected.
PASS: [MODULO -6 -4] returned -2 , as expected.
PASS: [MODULO "5 "2] returned 1 , as expected.
INFO: Executing invalid instruction: [(MODULO)]
PASS: Running [(MODULO)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to MODULO] .
INFO: Executing invalid instruction: [(MODULO 1)]
PASS: Running [(MODULO 1)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to MODULO] .
INFO: Executing invalid instruction: [(MODULO 5 6 7)]
PASS: Running [(MODULO 5 6 7)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [MODULO [] 2]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [MODULO doesn't like [] as input] .
INFO: Running invalid instruction: [MODULO [1] 2]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [MODULO doesn't like [1] as input] .
INFO: Running invalid instruction: [MODULO {} 2]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [MODULO doesn't like {} as input] .
INFO: Running invalid instruction: [MODULO {1} 2]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [MODULO doesn't like {1} as input] .
INFO: Running invalid instruction: [MODULO "one 2]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [MODULO doesn't like one as input] .
INFO: Running invalid instruction: [MODULO "1a 2]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [MODULO doesn't like 1a as input] .
INFO: Running invalid instruction: [MODULO 1 0]
INFO: ITEM 1 ERROR output 4 .
INFO: ITEM 2 ERROR output [MODULO doesn't like 0 as input] .
INFO: Running invalid instruction: [MODULO 1 []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [MODULO doesn't like [] as input] .
INFO: Running invalid instruction: [MODULO 1 [2]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [MODULO doesn't like [2] as input] .
INFO: Running invalid instruction: [MODULO 1 {}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [MODULO doesn't like {} as input] .
INFO: Running invalid instruction: [MODULO 1 {2}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [MODULO doesn't like {2} as input] .
INFO: Running invalid instruction: [MODULO 1 "two]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [MODULO doesn't like two as input] .
INFO: Running invalid instruction: [MODULO 1 "2a]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [MODULO doesn't like 2a as input] .
INFO: Running invalid instruction: [MODULO 0 "2a]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [MODULO doesn't like 2a as input] .
PASS: [INT 0] returned 0 , as expected.
PASS: [INT 8] returned 8 , as expected.
PASS: [INT -8] returned -8 , as expected.
PASS: [INT 8.9] returned 8 , as expected.
PASS: [INT 8.1] returned 8 , as expected.
PASS: [INT 8.9999999] returned 8 , as expected.
PASS: [INT -8.9999999] returned -8 , as expected.
PASS: [INT 2.3e40] returned 2.3e+40 , as expected.
INFO: Executing invalid instruction: [(INT)]
PASS: Running [(INT)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to INT] .
INFO: Executing invalid instruction: [(INT 1 2)]
PASS: Running [(INT 1 2)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [INT []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [INT doesn't like [] as input] .
INFO: Running invalid instruction: [INT [1]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [INT doesn't like [1] as input] .
INFO: Running invalid instruction: [INT {}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [INT doesn't like {} as input] .
INFO: Running invalid instruction: [INT {1}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [INT doesn't like {1} as input] .
INFO: Running invalid instruction: [INT "one]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [INT doesn't like one as input] .
INFO: Running invalid instruction: [INT "1a]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [INT doesn't like 1a as input] .
PASS: [ROUND 0] returned 0 , as expected.
PASS: [ROUND 8] returned 8 , as expected.
PASS: [ROUND -8] returned -8 , as expected.
PASS: [ROUND 8.1] returned 8 , as expected.
PASS: [ROUND 8.9] returned 9 , as expected.
PASS: [ROUND 8.5] returned 9 , as expected.
PASS: [ROUND 8.49] returned 8 , as expected.
PASS: [ROUND -8.9] returned -9 , as expected.
PASS: [ROUND -8.1] returned -8 , as expected.
PASS: [ROUND 2.3e40] returned 2.3e+40 , as expected.
INFO: Executing invalid instruction: [(ROUND)]
PASS: Running [(ROUND)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to ROUND] .
INFO: Executing invalid instruction: [(ROUND 1 2)]
PASS: Running [(ROUND 1 2)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [ROUND []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [ROUND doesn't like [] as input] .
INFO: Running invalid instruction: [ROUND [1]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [ROUND doesn't like [1] as input] .
INFO: Running invalid instruction: [ROUND {}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [ROUND doesn't like {} as input] .
INFO: Running invalid instruction: [ROUND {1}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [ROUND doesn't like {1} as input] .
INFO: Running invalid instruction: [ROUND "one]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [ROUND doesn't like one as input] .
INFO: Running invalid instruction: [ROUND "1a]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [ROUND doesn't like 1a as input] .
PASS: [ABS 0] returned 0 , as expected.
PASS: [ABS 8] returned 8 , as expected.
PASS: [ABS -8] returned 8 , as expected.
PASS: [ABS 8.1] returned 8.1 , as expected.
PASS: [ABS -8.1] returned 8.1 , as expected.
PASS: [ABS 2.3e40] returned 2.3e+40 , as expected.
INFO: Executing invalid instruction: [(ABS)]
PASS: Running [(ABS)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to ABS] .
INFO: Executing invalid instruction: [(ABS 1 2)]
PASS: Running [(ABS 1 2)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [ABS []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [> doesn't like [] as input] .
INFO: Running invalid instruction: [ABS [1]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [> doesn't like [1] as input] .
INFO: Running invalid instruction: [ABS {}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [> doesn't like {} as input] .
INFO: Running invalid instruction: [ABS {1}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [> doesn't like {1} as input] .
INFO: Running invalid instruction: [ABS "one]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [> doesn't like one as input] .
INFO: Running invalid instruction: [ABS "1a]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [> doesn't like 1a as input] .
PASS: [SIGN 0] returned 0 , as expected.
PASS: [SIGN 8] returned 1 , as expected.
PASS: [SIGN -8] returned -1 , as expected.
PASS: [SIGN 0.01] returned 1 , as expected.
PASS: [SIGN -0.01] returned -1 , as expected.
PASS: [SIGN 98.6] returned 1 , as expected.
PASS: [SIGN -98.6] returned -1 , as expected.
PASS: [SIGN 2.3e40] returned 1 , as expected.
INFO: Executing invalid instruction: [(SIGN)]
PASS: Running [(SIGN)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to SIGN] .
INFO: Executing invalid instruction: [(SIGN 1 2)]
PASS: Running [(SIGN 1 2)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [SIGN []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [> doesn't like [] as input] .
INFO: Running invalid instruction: [SIGN [1]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [> doesn't like [1] as input] .
INFO: Running invalid instruction: [SIGN {}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [> doesn't like {} as input] .
INFO: Running invalid instruction: [SIGN {1}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [> doesn't like {1} as input] .
INFO: Running invalid instruction: [SIGN "one]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [> doesn't like one as input] .
INFO: Running invalid instruction: [SIGN "1a]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [> doesn't like 1a as input] .
PASS: [SQRT 0] returned 0 , as expected.
PASS: [SQRT 4] returned 2 , as expected.
PASS: [SQRT 9] returned 3 , as expected.
PASS: [SQRT 1.44] returned 1.2 , as expected.
FAIL: [SQRT 2] returned 1.4142135623731 . We expected 1.4142135623731
PASS: [SQRT 1e40] returned 1e+20 , as expected.
INFO: Executing invalid instruction: [(SQRT)]
PASS: Running [(SQRT)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to SQRT] .
INFO: Executing invalid instruction: [(SQRT 1 2)]
PASS: Running [(SQRT 1 2)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [SQRT -1]
INFO: ITEM 1 ERROR output 4 .
INFO: ITEM 2 ERROR output [SQRT doesn't like -1 as input] .
INFO: Running invalid instruction: [SQRT []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SQRT doesn't like [] as input] .
INFO: Running invalid instruction: [SQRT [1]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SQRT doesn't like [1] as input] .
INFO: Running invalid instruction: [SQRT {}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SQRT doesn't like {} as input] .
INFO: Running invalid instruction: [SQRT {1}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SQRT doesn't like {1} as input] .
INFO: Running invalid instruction: [SQRT "one]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SQRT doesn't like one as input] .
INFO: Running invalid instruction: [SQRT "1a]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SQRT doesn't like 1a as input] .
PASS: [POWER 1 0] returned 1 , as expected.
PASS: [POWER -1 0] returned 1 , as expected.
PASS: [POWER 2 0] returned 1 , as expected.
PASS: [POWER 1.23 0] returned 1 , as expected.
PASS: [POWER 1e40 0] returned 1 , as expected.
PASS: [POWER 0 1] returned 0 , as expected.
PASS: [POWER 1 1] returned 1 , as expected.
PASS: [POWER -1 1] returned -1 , as expected.
PASS: [POWER 2 1] returned 2 , as expected.
PASS: [POWER 1.23 1] returned 1.23 , as expected.
PASS: [POWER 1e40 1] returned 1e+40 , as expected.
PASS: [POWER 0 2] returned 0 , as expected.
PASS: [POWER 1 2] returned 1 , as expected.
PASS: [POWER -1 2] returned 1 , as expected.
PASS: [POWER 2 2] returned 4 , as expected.
PASS: [POWER 1.23 2] returned 1.5129 , as expected.
PASS: [POWER 1e40 2] returned 1e+80 , as expected.
PASS: [POWER 0 5] returned 0 , as expected.
PASS: [POWER 1 5] returned 1 , as expected.
PASS: [POWER -1 5] returned -1 , as expected.
PASS: [POWER 2 5] returned 32 , as expected.
FAIL: [POWER 1.1 5] returned 1.61051 . We expected 1.61051
FAIL: [POWER -1.1 5] returned -1.61051 . We expected -1.61051
PASS: [POWER 1e2 5] returned 10000000000 , as expected.
PASS: [POWER 1e-2 5] returned 1e-10 , as expected.
PASS: [POWER 1 -1] returned 1 , as expected.
PASS: [POWER 2 -1] returned 0.5 , as expected.
PASS: [POWER 0.5 -1] returned 2 , as expected.
PASS: [POWER 1e40 -1] returned 1e-40 , as expected.
PASS: [POWER -1 -1] returned -1 , as expected.
PASS: [POWER 1 2] returned 1 , as expected.
PASS: [POWER 2 2] returned 4 , as expected.
PASS: [POWER 1.23 2] returned 1.5129 , as expected.
PASS: [POWER 1e40 -1] returned 1e-40 , as expected.
PASS: [POWER -1 -1] returned -1 , as expected.
PASS: [POWER 0 0.5] returned 0 , as expected.
PASS: [POWER 4 0.5] returned 2 , as expected.
PASS: [POWER 9 0.5] returned 3 , as expected.
PASS: [POWER 1.44 0.5] returned 1.2 , as expected.
FAIL: [POWER 2 0.5] returned 1.4142135623731 . We expected 1.4142135623731
PASS: [POWER 1e40 0.5] returned 1e+20 , as expected.
INFO: Running invalid instruction: [POWER 1e100 5]
INFO: ITEM 1 ERROR output 4 .
INFO: ITEM 2 ERROR output [POWER doesn't like 5 as input] .
INFO: Running invalid instruction: [POWER -1e100 5]
INFO: ITEM 1 ERROR output 4 .
INFO: ITEM 2 ERROR output [POWER doesn't like 5 as input] .
INFO: Running invalid instruction: [POWER 0 0]
INFO: ITEM 1 ERROR output 4 .
INFO: ITEM 2 ERROR output [POWER doesn't like 0 as input] .
INFO: Running invalid instruction: [POWER 0 -1]
INFO: ITEM 1 ERROR output 4 .
INFO: ITEM 2 ERROR output [POWER doesn't like -1 as input] .
INFO: Running invalid instruction: [POWER -1 0.5]
INFO: ITEM 1 ERROR output 4 .
INFO: ITEM 2 ERROR output [POWER doesn't like 0.5 as input] .
INFO: Executing invalid instruction: [(POWER)]
PASS: Running [(POWER)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to POWER] .
INFO: Executing invalid instruction: [(POWER 1)]
PASS: Running [(POWER 1)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to POWER] .
INFO: Executing invalid instruction: [(POWER 1 2 3)]
PASS: Running [(POWER 1 2 3)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [POWER [] 2]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [POWER doesn't like [] as input] .
INFO: Running invalid instruction: [POWER [1] 2]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [POWER doesn't like [1] as input] .
INFO: Running invalid instruction: [POWER {} 2]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [POWER doesn't like {} as input] .
INFO: Running invalid instruction: [POWER {1} 2]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [POWER doesn't like {1} as input] .
INFO: Running invalid instruction: [POWER "one 2]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [POWER doesn't like one as input] .
INFO: Running invalid instruction: [POWER "1a 2]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [POWER doesn't like 1a as input] .
INFO: Running invalid instruction: [POWER 1 []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [POWER doesn't like [] as input] .
INFO: Running invalid instruction: [POWER 1 [2]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [POWER doesn't like [2] as input] .
INFO: Running invalid instruction: [POWER 1 {}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [POWER doesn't like {} as input] .
INFO: Running invalid instruction: [POWER 1 {2}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [POWER doesn't like {2} as input] .
INFO: Running invalid instruction: [POWER 1 "two]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [POWER doesn't like two as input] .
INFO: Running invalid instruction: [POWER 1 "2a]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [POWER doesn't like 2a as input] .
PASS: [EXP 0] returned 1 , as expected.
FAIL: [EXP 1] returned 2.71828182845905 . We expected 2.71828182845905
PASS: [EXP 2] returned 7.38905609893065 , as expected.
FAIL: [EXP -1] returned 0.367879441171442 . We expected 0.367879441171442
INFO: Running invalid instruction: [EXP 1e40]
INFO: ITEM 1 ERROR output 4 .
INFO: ITEM 2 ERROR output [EXP doesn't like 1e+40 as input] .
INFO: Executing invalid instruction: [(EXP)]
PASS: Running [(EXP)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to EXP] .
INFO: Executing invalid instruction: [(EXP 1 2)]
PASS: Running [(EXP 1 2)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [EXP []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [EXP doesn't like [] as input] .
INFO: Running invalid instruction: [EXP [1]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [EXP doesn't like [1] as input] .
INFO: Running invalid instruction: [EXP {}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [EXP doesn't like {} as input] .
INFO: Running invalid instruction: [EXP {1}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [EXP doesn't like {1} as input] .
INFO: Running invalid instruction: [EXP "one]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [EXP doesn't like one as input] .
INFO: Running invalid instruction: [EXP "1a]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [EXP doesn't like 1a as input] .
PASS: [LOG10 1] returned 0 , as expected.
PASS: [LOG10 1e1] returned 1 , as expected.
PASS: [LOG10 1e2] returned 2 , as expected.
PASS: [LOG10 1e-2] returned -2 , as expected.
PASS: [LOG10 1e100] returned 100 , as expected.
FAIL: [LOG10 50] returned 1.69897000433602 . We expected 1.69897000433602
INFO: Executing invalid instruction: [(LOG10)]
PASS: Running [(LOG10)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to LOG10] .
INFO: Executing invalid instruction: [(LOG10 1 2)]
PASS: Running [(LOG10 1 2)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [LOG10 0]
INFO: ITEM 1 ERROR output 4 .
INFO: ITEM 2 ERROR output [LOG10 doesn't like 0 as input] .
INFO: Running invalid instruction: [LOG10 -1]
INFO: ITEM 1 ERROR output 4 .
INFO: ITEM 2 ERROR output [LOG10 doesn't like -1 as input] .
INFO: Running invalid instruction: [LOG10 []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [LOG10 doesn't like [] as input] .
INFO: Running invalid instruction: [LOG10 [1]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [LOG10 doesn't like [1] as input] .
INFO: Running invalid instruction: [LOG10 {}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [LOG10 doesn't like {} as input] .
INFO: Running invalid instruction: [LOG10 {1}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [LOG10 doesn't like {1} as input] .
INFO: Running invalid instruction: [LOG10 "one]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [LOG10 doesn't like one as input] .
INFO: Running invalid instruction: [LOG10 "1a]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [LOG10 doesn't like 1a as input] .
PASS: [LN 1] returned 0 , as expected.
FAIL: [LN 2.71828182845905] returned 1 . We expected 1
FAIL: [LN 500] returned 6.21460809842219 . We expected 6.21460809842219
INFO: Executing invalid instruction: [(LN)]
PASS: Running [(LN)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to LN] .
INFO: Executing invalid instruction: [(LN 1 2)]
PASS: Running [(LN 1 2)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [LN 0]
INFO: ITEM 1 ERROR output 4 .
INFO: ITEM 2 ERROR output [LN doesn't like 0 as input] .
INFO: Running invalid instruction: [LN -1]
INFO: ITEM 1 ERROR output 4 .
INFO: ITEM 2 ERROR output [LN doesn't like -1 as input] .
INFO: Running invalid instruction: [LN []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [LN doesn't like [] as input] .
INFO: Running invalid instruction: [LN [1]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [LN doesn't like [1] as input] .
INFO: Running invalid instruction: [LN {}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [LN doesn't like {} as input] .
INFO: Running invalid instruction: [LN {1}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [LN doesn't like {1} as input] .
INFO: Running invalid instruction: [LN "one]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [LN doesn't like one as input] .
INFO: Running invalid instruction: [LN "1a]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [LN doesn't like 1a as input] .
PASS: [PI] returned 3.14159265358979 , as expected.
INFO: Executing invalid instruction: [(PI 1)]
PASS: Running [(PI 1)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
PASS: [TAN 0] returned 0 , as expected.
PASS: [TAN 45] returned 1 , as expected.
PASS: [TAN -45] returned -1 , as expected.
FAIL: [TAN 135] returned -1 . We expected -1
FAIL: [TAN 225] returned 1 . We expected 1
PASS: [TAN 180] returned -1.22514845490862e-16 , as expected.
FAIL: [TAN 360] returned -2.45029690981724e-16 . We expected 0
FAIL: [TAN 3600] returned -2.45029690981724e-15 . We expected 0
PASS: [TAN 14.5] returned 0.25861758435589 , as expected.
INFO: Executing invalid instruction: [(TAN)]
PASS: Running [(TAN)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to TAN] .
INFO: Executing invalid instruction: [(TAN 1 2)]
PASS: Running [(TAN 1 2)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [TAN 90]
FAIL: Executing [TAN 90] did not throw an error
INFO: Running invalid instruction: [TAN -90]
FAIL: Executing [TAN -90] did not throw an error
INFO: Running invalid instruction: [TAN 270]
FAIL: Executing [TAN 270] did not throw an error
INFO: Running invalid instruction: [TAN 3690]
FAIL: Executing [TAN 3690] did not throw an error
INFO: Running invalid instruction: [TAN []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [TAN doesn't like [] as input] .
INFO: Running invalid instruction: [TAN [1]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [TAN doesn't like [1] as input] .
INFO: Running invalid instruction: [TAN {}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [TAN doesn't like {} as input] .
INFO: Running invalid instruction: [TAN {1}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [TAN doesn't like {1} as input] .
INFO: Running invalid instruction: [TAN "one]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [TAN doesn't like one as input] .
INFO: Running invalid instruction: [TAN "1a]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [TAN doesn't like 1a as input] .
PASS: [RADTAN ( 0 )] returned 0 , as expected.
PASS: [RADTAN ( 0.25 * PI)] returned 1 , as expected.
PASS: [RADTAN (-0.25 * PI)] returned -1 , as expected.
FAIL: [RADTAN ( 0.75 * PI)] returned -1 . We expected -1
FAIL: [RADTAN ( 1.25 * PI)] returned 1 . We expected 1
PASS: [RADTAN ( PI )] returned -1.22514845490862e-16 , as expected.
FAIL: [RADTAN ( 2 * PI )] returned -2.45029690981724e-16 . We expected 0
FAIL: [RADTAN ( 10 * PI )] returned -1.22514845490862e-15 . We expected 0
PASS: [RADTAN ( 14.5 )] returned -2.63406913250383 , as expected.
INFO: Executing invalid instruction: [(RADTAN)]
PASS: Running [(RADTAN)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to RADTAN] .
INFO: Executing invalid instruction: [(RADTAN 1 2)]
PASS: Running [(RADTAN 1 2)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [RADTAN ( 0.5 * PI)]
FAIL: Executing [RADTAN ( 0.5 * PI)] did not throw an error
INFO: Running invalid instruction: [RADTAN (-0.5 * PI)]
FAIL: Executing [RADTAN (-0.5 * PI)] did not throw an error
INFO: Running invalid instruction: [RADTAN ( 1.5 * PI)]
FAIL: Executing [RADTAN ( 1.5 * PI)] did not throw an error
INFO: Running invalid instruction: [RADTAN ( 100 * PI)]
FAIL: Executing [RADTAN ( 100 * PI)] did not throw an error
INFO: Running invalid instruction: [RADTAN []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [RADTAN doesn't like [] as input] .
INFO: Running invalid instruction: [RADTAN [1]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [RADTAN doesn't like [1] as input] .
INFO: Running invalid instruction: [RADTAN {}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [RADTAN doesn't like {} as input] .
INFO: Running invalid instruction: [RADTAN {1}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [RADTAN doesn't like {1} as input] .
INFO: Running invalid instruction: [RADTAN "one]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [RADTAN doesn't like one as input] .
INFO: Running invalid instruction: [RADTAN "1a]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [RADTAN doesn't like 1a as input] .
PASS: [ARCTAN 0] returned 0 , as expected.
PASS: [ARCTAN 1] returned 45 , as expected.
PASS: [ARCTAN -1] returned -45 , as expected.
PASS: [ARCTAN 14.5] returned 86.0548137709624 , as expected.
PASS: [(ARCTAN 1 0 )] returned 0 , as expected.
PASS: [(ARCTAN 1 1 )] returned 45 , as expected.
PASS: [(ARCTAN 1 -1 )] returned -45 , as expected.
PASS: [(ARCTAN -1 1 )] returned 135 , as expected.
PASS: [(ARCTAN -1 -1 )] returned -135 , as expected.
PASS: [(ARCTAN 1 14.5)] returned 86.0548137709624 , as expected.
PASS: [(ARCTAN 2 0)] returned 0 , as expected.
PASS: [(ARCTAN 2 2)] returned 45 , as expected.
PASS: [(ARCTAN 2 -2)] returned -45 , as expected.
PASS: [(ARCTAN 2 29)] returned 86.0548137709624 , as expected.
PASS: [(ARCTAN 0 1)] returned 90 , as expected.
PASS: [(ARCTAN 1 100)] returned 89.4270613023165 , as expected.
INFO: Executing invalid instruction: [(ARCTAN)]
PASS: Running [(ARCTAN)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to ARCTAN] .
INFO: Executing invalid instruction: [(ARCTAN 1 2 3)]
PASS: Running [(ARCTAN 1 2 3)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [ARCTAN []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [ARCTAN doesn't like [] as input] .
INFO: Running invalid instruction: [ARCTAN [1]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [ARCTAN doesn't like [1] as input] .
INFO: Running invalid instruction: [ARCTAN {}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [ARCTAN doesn't like {} as input] .
INFO: Running invalid instruction: [ARCTAN {1}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [ARCTAN doesn't like {1} as input] .
INFO: Running invalid instruction: [ARCTAN "one]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [ARCTAN doesn't like one as input] .
INFO: Running invalid instruction: [ARCTAN "1a]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [ARCTAN doesn't like 1a as input] .
INFO: Running invalid instruction: [(ARCTAN [] 1)]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [ARCTAN doesn't like [] as input] .
INFO: Running invalid instruction: [(ARCTAN [1] 1)]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [ARCTAN doesn't like [1] as input] .
INFO: Running invalid instruction: [(ARCTAN {} 1)]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [ARCTAN doesn't like {} as input] .
INFO: Running invalid instruction: [(ARCTAN {1} 1)]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [ARCTAN doesn't like {1} as input] .
INFO: Running invalid instruction: [(ARCTAN "one 1)]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [ARCTAN doesn't like one as input] .
INFO: Running invalid instruction: [(ARCTAN "1a 1)]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [ARCTAN doesn't like 1a as input] .
INFO: Running invalid instruction: [(ARCTAN 1 [] )]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [ARCTAN doesn't like [] as input] .
INFO: Running invalid instruction: [(ARCTAN 1 [1] )]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [ARCTAN doesn't like [1] as input] .
INFO: Running invalid instruction: [(ARCTAN 1 {} )]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [ARCTAN doesn't like {} as input] .
INFO: Running invalid instruction: [(ARCTAN 1 {1} )]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [ARCTAN doesn't like {1} as input] .
INFO: Running invalid instruction: [(ARCTAN 1 "one )]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [ARCTAN doesn't like one as input] .
INFO: Running invalid instruction: [(ARCTAN 1 "1a )]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [ARCTAN doesn't like 1a as input] .
PASS: [RADARCTAN 0] returned 0 , as expected.
PASS: [RADARCTAN 1] returned 0.785398163397448 , as expected.
PASS: [RADARCTAN -1] returned -0.785398163397448 , as expected.
PASS: [RADARCTAN 14.5] returned 1.50193983749385 , as expected.
PASS: [(RADARCTAN 1 0 )] returned 0 , as expected.
PASS: [(RADARCTAN 1 1 )] returned 0.785398163397448 , as expected.
PASS: [(RADARCTAN 1 -1 )] returned -0.785398163397448 , as expected.
PASS: [(RADARCTAN -1 1 )] returned 2.35619449019234 , as expected.
PASS: [(RADARCTAN -1 -1 )] returned -2.35619449019234 , as expected.
PASS: [(RADARCTAN 1 14.5 )] returned 1.50193983749385 , as expected.
PASS: [(RADARCTAN 2 0 )] returned 0 , as expected.
PASS: [(RADARCTAN 2 2 )] returned 0.785398163397448 , as expected.
PASS: [(RADARCTAN 2 -2 )] returned -0.785398163397448 , as expected.
PASS: [(RADARCTAN 2 29 )] returned 1.50193983749385 , as expected.
PASS: [(RADARCTAN 0 1 )] returned 1.5707963267949 , as expected.
PASS: [(RADARCTAN 1 100)] returned 1.56079666010823 , as expected.
INFO: Executing invalid instruction: [(RADARCTAN)]
PASS: Running [(RADARCTAN)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to RADARCTAN] .
INFO: Executing invalid instruction: [(RADARCTAN 1 2 3)]
PASS: Running [(RADARCTAN 1 2 3)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [RADARCTAN []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [RADARCTAN doesn't like [] as input] .
INFO: Running invalid instruction: [RADARCTAN [1]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [RADARCTAN doesn't like [1] as input] .
INFO: Running invalid instruction: [RADARCTAN {}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [RADARCTAN doesn't like {} as input] .
INFO: Running invalid instruction: [RADARCTAN {1}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [RADARCTAN doesn't like {1} as input] .
INFO: Running invalid instruction: [RADARCTAN "one]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [RADARCTAN doesn't like one as input] .
INFO: Running invalid instruction: [RADARCTAN "1a]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [RADARCTAN doesn't like 1a as input] .
INFO: Running invalid instruction: [(RADARCTAN [] 1)]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [RADARCTAN doesn't like [] as input] .
INFO: Running invalid instruction: [(RADARCTAN [1] 1)]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [RADARCTAN doesn't like [1] as input] .
INFO: Running invalid instruction: [(RADARCTAN {} 1)]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [RADARCTAN doesn't like {} as input] .
INFO: Running invalid instruction: [(RADARCTAN {1} 1)]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [RADARCTAN doesn't like {1} as input] .
INFO: Running invalid instruction: [(RADARCTAN "one 1)]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [RADARCTAN doesn't like one as input] .
INFO: Running invalid instruction: [(RADARCTAN "1a 1)]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [RADARCTAN doesn't like 1a as input] .
INFO: Running invalid instruction: [(RADARCTAN 1 [] )]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [RADARCTAN doesn't like [] as input] .
INFO: Running invalid instruction: [(RADARCTAN 1 [1] )]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [RADARCTAN doesn't like [1] as input] .
INFO: Running invalid instruction: [(RADARCTAN 1 {} )]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [RADARCTAN doesn't like {} as input] .
INFO: Running invalid instruction: [(RADARCTAN 1 {1} )]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [RADARCTAN doesn't like {1} as input] .
INFO: Running invalid instruction: [(RADARCTAN 1 "one )]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [RADARCTAN doesn't like one as input] .
INFO: Running invalid instruction: [(RADARCTAN 1 "1a )]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [RADARCTAN doesn't like 1a as input] .
PASS: [SIN 0] returned 0 , as expected.
PASS: [SIN 30] returned 0.5 , as expected.
PASS: [SIN 45] returned 0.707106781186547 , as expected.
PASS: [SIN -45] returned -0.707106781186547 , as expected.
PASS: [SIN 90] returned 1 , as expected.
PASS: [SIN 180] returned 1.22514845490862e-16 , as expected.
PASS: [SIN 270] returned -1 , as expected.
FAIL: [SIN 360] returned -2.45029690981724e-16 . We expected 0
FAIL: [SIN 3600] returned -2.45029690981724e-15 . We expected 0
PASS: [SIN 3690] returned 1 , as expected.
PASS: [SIN 14.5] returned 0.250380004054441 , as expected.
INFO: Executing invalid instruction: [(SIN)]
PASS: Running [(SIN)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to SIN] .
INFO: Executing invalid instruction: [(SIN 1 2)]
PASS: Running [(SIN 1 2)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [SIN []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SIN doesn't like [] as input] .
INFO: Running invalid instruction: [SIN [1]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SIN doesn't like [1] as input] .
INFO: Running invalid instruction: [SIN {}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SIN doesn't like {} as input] .
INFO: Running invalid instruction: [SIN {1}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SIN doesn't like {1} as input] .
INFO: Running invalid instruction: [SIN "one]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SIN doesn't like one as input] .
INFO: Running invalid instruction: [SIN "1a]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SIN doesn't like 1a as input] .
PASS: [RADSIN 0] returned 0 , as expected.
PASS: [RADSIN ( 0.25 * PI)] returned 0.707106781186547 , as expected.
PASS: [RADSIN (-0.25 * PI)] returned -0.707106781186547 , as expected.
PASS: [RADSIN (1/6 * PI)] returned 0.5 , as expected.
PASS: [RADSIN ( 0.5 * PI)] returned 1 , as expected.
PASS: [RADSIN PI] returned 1.22514845490862e-16 , as expected.
PASS: [RADSIN (1.5 * PI)] returned -1 , as expected.
FAIL: [RADSIN ( 2 * PI)] returned -2.45029690981724e-16 . We expected 0
FAIL: [RADSIN ( 10 * PI)] returned -1.22514845490862e-15 . We expected 0
PASS: [RADSIN ( 10.50 * PI)] returned 1 , as expected.
PASS: [RADSIN 14.5] returned 0.934895055524683 , as expected.
INFO: Executing invalid instruction: [(RADSIN)]
PASS: Running [(RADSIN)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to RADSIN] .
INFO: Executing invalid instruction: [(RADSIN 1 2)]
PASS: Running [(RADSIN 1 2)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [RADSIN []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [RADSIN doesn't like [] as input] .
INFO: Running invalid instruction: [RADSIN [1]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [RADSIN doesn't like [1] as input] .
INFO: Running invalid instruction: [RADSIN {}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [RADSIN doesn't like {} as input] .
INFO: Running invalid instruction: [RADSIN {1}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [RADSIN doesn't like {1} as input] .
INFO: Running invalid instruction: [RADSIN "one]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [RADSIN doesn't like one as input] .
INFO: Running invalid instruction: [RADSIN "1a]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [RADSIN doesn't like 1a as input] .
PASS: [ARCSIN 0] returned 0 , as expected.
FAIL: [ARCSIN ( 0.5 * SQRT 2)] returned 45 . We expected 45
FAIL: [ARCSIN (-0.5 * SQRT 2)] returned -45 . We expected -45
PASS: [ARCSIN 1] returned 90 , as expected.
PASS: [ARCSIN -1] returned -90 , as expected.
PASS: [ARCSIN 0.5] returned 30 , as expected.
PASS: [ARCSIN -0.5] returned -30 , as expected.
INFO: Executing invalid instruction: [(ARCSIN)]
PASS: Running [(ARCSIN)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to ARCSIN] .
INFO: Executing invalid instruction: [(ARCSIN 1 2)]
PASS: Running [(ARCSIN 1 2)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [ARCSIN 1.1]
INFO: ITEM 1 ERROR output 4 .
INFO: ITEM 2 ERROR output [ARCSIN doesn't like 1.1 as input] .
INFO: Running invalid instruction: [ARCSIN -1.1]
INFO: ITEM 1 ERROR output 4 .
INFO: ITEM 2 ERROR output [ARCSIN doesn't like -1.1 as input] .
INFO: Running invalid instruction: [ARCSIN []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [ARCSIN doesn't like [] as input] .
INFO: Running invalid instruction: [ARCSIN [1]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [ARCSIN doesn't like [1] as input] .
INFO: Running invalid instruction: [ARCSIN {}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [ARCSIN doesn't like {} as input] .
INFO: Running invalid instruction: [ARCSIN {1}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [ARCSIN doesn't like {1} as input] .
INFO: Running invalid instruction: [ARCSIN "one]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [ARCSIN doesn't like one as input] .
INFO: Running invalid instruction: [ARCSIN "1a]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [ARCSIN doesn't like 1a as input] .
PASS: [RADARCSIN 0] returned 0 , as expected.
PASS: [RADARCSIN ( 0.5 * SQRT 2)] returned 0.785398163397448 , as expected.
PASS: [RADARCSIN (-0.5 * SQRT 2)] returned -0.785398163397448 , as expected.
PASS: [RADARCSIN 1] returned 1.5707963267949 , as expected.
PASS: [RADARCSIN -1] returned -1.5707963267949 , as expected.
PASS: [RADARCSIN 0.5] returned 0.523598775598299 , as expected.
PASS: [RADARCSIN -0.5] returned -0.523598775598299 , as expected.
INFO: Executing invalid instruction: [(RADARCSIN)]
PASS: Running [(RADARCSIN)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to RADARCSIN] .
INFO: Executing invalid instruction: [(RADARCSIN 1 2)]
PASS: Running [(RADARCSIN 1 2)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [RADARCSIN 1.1]
INFO: ITEM 1 ERROR output 4 .
INFO: ITEM 2 ERROR output [RADARCSIN doesn't like 1.1 as input] .
INFO: Running invalid instruction: [RADARCSIN -1.1]
INFO: ITEM 1 ERROR output 4 .
INFO: ITEM 2 ERROR output [RADARCSIN doesn't like -1.1 as input] .
INFO: Running invalid instruction: [RADARCSIN []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [RADARCSIN doesn't like [] as input] .
INFO: Running invalid instruction: [RADARCSIN [1]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [RADARCSIN doesn't like [1] as input] .
INFO: Running invalid instruction: [RADARCSIN {}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [RADARCSIN doesn't like {} as input] .
INFO: Running invalid instruction: [RADARCSIN {1}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [RADARCSIN doesn't like {1} as input] .
INFO: Running invalid instruction: [RADARCSIN "one]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [RADARCSIN doesn't like one as input] .
INFO: Running invalid instruction: [RADARCSIN "1a]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [RADARCSIN doesn't like 1a as input] .
PASS: [COS 0] returned 1 , as expected.
PASS: [COS 45] returned 0.707106781186548 , as expected.
PASS: [COS -45] returned 0.707106781186548 , as expected.
PASS: [COS 225] returned -0.707106781186548 , as expected.
PASS: [COS 60] returned 0.5 , as expected.
PASS: [COS 90] returned 6.1257422745431e-17 , as expected.
PASS: [COS 180] returned -1 , as expected.
PASS: [COS 270] returned -1.83772268236293e-16 , as expected.
PASS: [COS 360] returned 1 , as expected.
PASS: [COS 3600] returned 1 , as expected.
FAIL: [COS 3690] returned 7.84062485076342e-15 . We expected 0
PASS: [COS 14.5] returned 0.968147640378108 , as expected.
INFO: Executing invalid instruction: [(COS)]
PASS: Running [(COS)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to COS] .
INFO: Executing invalid instruction: [(COS 1 2)]
PASS: Running [(COS 1 2)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [COS []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [COS doesn't like [] as input] .
INFO: Running invalid instruction: [COS [1]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [COS doesn't like [1] as input] .
INFO: Running invalid instruction: [COS {}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [COS doesn't like {} as input] .
INFO: Running invalid instruction: [COS {1}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [COS doesn't like {1} as input] .
INFO: Running invalid instruction: [COS "one]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [COS doesn't like one as input] .
INFO: Running invalid instruction: [COS "1a]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [COS doesn't like 1a as input] .
PASS: [RADCOS 0] returned 1 , as expected.
PASS: [RADCOS ( 0.25 * PI)] returned 0.707106781186548 , as expected.
PASS: [RADCOS (-0.25 * PI)] returned 0.707106781186548 , as expected.
PASS: [RADCOS ( 1.25 * PI)] returned -0.707106781186548 , as expected.
PASS: [RADCOS ( 1/3 * PI)] returned 0.5 , as expected.
PASS: [RADCOS ( 0.5 * PI)] returned 6.1257422745431e-17 , as expected.
PASS: [RADCOS PI] returned -1 , as expected.
PASS: [RADCOS 1.5 * PI] returned -1.83772268236293e-16 , as expected.
PASS: [RADCOS 2 * PI] returned 1 , as expected.
PASS: [RADCOS 10 * PI] returned 1 , as expected.
FAIL: [RADCOS 10.50 * PI] returned -4.89950961746199e-16 . We expected 0
PASS: [RADCOS 14.5] returned -0.354924266788705 , as expected.
INFO: Executing invalid instruction: [(RADCOS)]
PASS: Running [(RADCOS)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to RADCOS] .
INFO: Executing invalid instruction: [(RADCOS 1 2)]
PASS: Running [(RADCOS 1 2)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [RADCOS []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [RADCOS doesn't like [] as input] .
INFO: Running invalid instruction: [RADCOS [1]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [RADCOS doesn't like [1] as input] .
INFO: Running invalid instruction: [RADCOS {}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [RADCOS doesn't like {} as input] .
INFO: Running invalid instruction: [RADCOS {1}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [RADCOS doesn't like {1} as input] .
INFO: Running invalid instruction: [RADCOS "one]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [RADCOS doesn't like one as input] .
INFO: Running invalid instruction: [RADCOS "1a]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [RADCOS doesn't like 1a as input] .
PASS: [ARCCOS 1] returned 0 , as expected.
PASS: [ARCCOS ( 0.5 * SQRT 2)] returned 45 , as expected.
PASS: [ARCCOS (-0.5 * SQRT 2)] returned 135 , as expected.
PASS: [ARCCOS 0.5] returned 60 , as expected.
PASS: [ARCCOS 0] returned 90 , as expected.
PASS: [ARCCOS -0.5] returned 120 , as expected.
PASS: [ARCCOS -1] returned 180 , as expected.
INFO: Executing invalid instruction: [(ARCCOS)]
PASS: Running [(ARCCOS)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to ARCCOS] .
INFO: Executing invalid instruction: [(ARCCOS 1 2)]
PASS: Running [(ARCCOS 1 2)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [ARCCOS 1.1]
INFO: ITEM 1 ERROR output 4 .
INFO: ITEM 2 ERROR output [ARCCOS doesn't like 1.1 as input] .
INFO: Running invalid instruction: [ARCCOS -1.1]
INFO: ITEM 1 ERROR output 4 .
INFO: ITEM 2 ERROR output [ARCCOS doesn't like -1.1 as input] .
INFO: Running invalid instruction: [ARCCOS []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [ARCCOS doesn't like [] as input] .
INFO: Running invalid instruction: [ARCCOS [1]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [ARCCOS doesn't like [1] as input] .
INFO: Running invalid instruction: [ARCCOS {}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [ARCCOS doesn't like {} as input] .
INFO: Running invalid instruction: [ARCCOS {1}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [ARCCOS doesn't like {1} as input] .
INFO: Running invalid instruction: [ARCCOS "one]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [ARCCOS doesn't like one as input] .
INFO: Running invalid instruction: [ARCCOS "1a]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [ARCCOS doesn't like 1a as input] .
PASS: [RADARCCOS 1] returned 0 , as expected.
PASS: [RADARCCOS ( 0.5 * SQRT 2)] returned 0.785398163397448 , as expected.
PASS: [RADARCCOS (-0.5 * SQRT 2)] returned 2.35619449019234 , as expected.
FAIL: [RADARCCOS 0.5] returned 1.0471975511966 . We expected 1.0471975511966
PASS: [RADARCCOS 0] returned 1.5707963267949 , as expected.
FAIL: [RADARCCOS -0.5] returned 2.0943951023932 . We expected 2.0943951023932
PASS: [RADARCCOS -1] returned 3.14159265358979 , as expected.
INFO: Executing invalid instruction: [(RADCOS)]
PASS: Running [(RADCOS)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to RADCOS] .
INFO: Executing invalid instruction: [(RADCOS 1 2)]
PASS: Running [(RADCOS 1 2)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [RADARCCOS 1.1]
INFO: ITEM 1 ERROR output 4 .
INFO: ITEM 2 ERROR output [RADARCCOS doesn't like 1.1 as input] .
INFO: Running invalid instruction: [RADARCCOS -1.1]
INFO: ITEM 1 ERROR output 4 .
INFO: ITEM 2 ERROR output [RADARCCOS doesn't like -1.1 as input] .
INFO: Running invalid instruction: [RADARCCOS []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [RADARCCOS doesn't like [] as input] .
INFO: Running invalid instruction: [RADARCCOS [1]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [RADARCCOS doesn't like [1] as input] .
INFO: Running invalid instruction: [RADARCCOS {}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [RADARCCOS doesn't like {} as input] .
INFO: Running invalid instruction: [RADARCCOS {1}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [RADARCCOS doesn't like {1} as input] .
INFO: Running invalid instruction: [RADARCCOS "one]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [RADARCCOS doesn't like one as input] .
INFO: Running invalid instruction: [RADARCCOS "1a]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [RADARCCOS doesn't like 1a as input] .
PASS: [PRODUCT 1e200 2e200] returned +INF , as expected.
PASS: [ROUND 2.3e40] returned 2.3e+40 , as expected.
PASS: [PRODUCT 1e200 2e200] returned +INF , as expected.
PASS: Bug #1397560 is fixed. Multiple floating point exceptions do not crash.
PASS: [(BITAND)] returned -1 , as expected.
PASS: [(BITAND 123)] returned 123 , as expected.
PASS: [(BITAND -123)] returned -123 , as expected.
PASS: [(BITAND 5 2 )] returned 0 , as expected.
PASS: [(BITAND 5 1 )] returned 1 , as expected.
PASS: [(BITAND 0 -1 )] returned 0 , as expected.
PASS: [(BITAND 5 -1 )] returned 5 , as expected.
PASS: [(BITAND 5.0 1.0 )] returned 1 , as expected.
PASS: [(BITAND 6 2 10)] returned 2 , as expected.
INFO: Running invalid instruction: [(BITAND "word)]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [BITAND doesn't like word as input] .
INFO: Running invalid instruction: [(BITAND [123] )]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [BITAND doesn't like [123] as input] .
INFO: Running invalid instruction: [(BITAND {123} )]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [BITAND doesn't like {123} as input] .
INFO: Running invalid instruction: [(BITAND 12.30)]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [BITAND doesn't like 12.3 as input] .
INFO: Running invalid instruction: [(BITAND 1 "word)]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [BITAND doesn't like word as input] .
INFO: Running invalid instruction: [(BITAND 1 [123] )]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [BITAND doesn't like [123] as input] .
INFO: Running invalid instruction: [(BITAND 1 {123} )]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [BITAND doesn't like {123} as input] .
INFO: Running invalid instruction: [(BITAND 1 12.30)]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [BITAND doesn't like 12.3 as input] .
PASS: [(BITOR)] returned 0 , as expected.
PASS: [(BITOR 123 )] returned 123 , as expected.
PASS: [(BITOR -123 )] returned -123 , as expected.
PASS: [(BITOR 5 2 )] returned 7 , as expected.
PASS: [(BITOR 5 1 )] returned 5 , as expected.
PASS: [(BITOR 0 0 )] returned 0 , as expected.
PASS: [(BITOR 5 -1 )] returned -1 , as expected.
PASS: [(BITOR 5.0 2.0 )] returned 7 , as expected.
PASS: [(BITOR 6 2 10)] returned 14 , as expected.
INFO: Running invalid instruction: [(BITOR "word)]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [BITOR doesn't like word as input] .
INFO: Running invalid instruction: [(BITOR [123] )]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [BITOR doesn't like [123] as input] .
INFO: Running invalid instruction: [(BITOR {123} )]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [BITOR doesn't like {123} as input] .
INFO: Running invalid instruction: [(BITOR 12.30)]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [BITOR doesn't like 12.3 as input] .
INFO: Running invalid instruction: [(BITOR 1 "word)]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [BITOR doesn't like word as input] .
INFO: Running invalid instruction: [(BITOR 1 [123] )]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [BITOR doesn't like [123] as input] .
INFO: Running invalid instruction: [(BITOR 1 {123} )]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [BITOR doesn't like {123} as input] .
INFO: Running invalid instruction: [(BITOR 1 12.30)]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [BITOR doesn't like 12.3 as input] .
PASS: [(BITXOR)] returned 0 , as expected.
PASS: [(BITXOR 123 )] returned 123 , as expected.
PASS: [(BITXOR -123 )] returned -123 , as expected.
PASS: [(BITXOR 5 2 )] returned 7 , as expected.
PASS: [(BITXOR 5 1 )] returned 4 , as expected.
PASS: [(BITXOR 0 0 )] returned 0 , as expected.
PASS: [(BITXOR 5 -1 )] returned -6 , as expected.
PASS: [(BITXOR 5 5 )] returned 0 , as expected.
PASS: [(BITXOR 5.0 1.0 )] returned 4 , as expected.
PASS: [(BITXOR 6 2 10)] returned 14 , as expected.
INFO: Running invalid instruction: [(BITXOR "word)]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [BITXOR doesn't like word as input] .
INFO: Running invalid instruction: [(BITXOR [123] )]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [BITXOR doesn't like [123] as input] .
INFO: Running invalid instruction: [(BITXOR {123} )]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [BITXOR doesn't like {123} as input] .
INFO: Running invalid instruction: [(BITXOR 12.30)]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [BITXOR doesn't like 12.3 as input] .
INFO: Running invalid instruction: [(BITXOR 1 "word)]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [BITXOR doesn't like word as input] .
INFO: Running invalid instruction: [(BITXOR 1 [123] )]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [BITXOR doesn't like [123] as input] .
INFO: Running invalid instruction: [(BITXOR 1 {123} )]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [BITXOR doesn't like {123} as input] .
INFO: Running invalid instruction: [(BITXOR 1 12.30)]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [BITXOR doesn't like 12.3 as input] .
PASS: [BITNOT 123] returned -124 , as expected.
PASS: [BITNOT -124] returned 123 , as expected.
PASS: [BITNOT 0] returned -1 , as expected.
FAIL: [BITNOT 12.00] threw error.  code= 4 . [BITNOT doesn't like 12 as input]
INFO: Executing invalid instruction: [(BITNOT)]
PASS: Running [(BITNOT)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to BITNOT] .
INFO: Executing invalid instruction: [(BITNOT 123 456)]
PASS: Running [(BITNOT 123 456)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [BITNOT "word]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [BITNOT doesn't like word as input] .
INFO: Running invalid instruction: [BITNOT [123]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [BITNOT doesn't like [123] as input] .
INFO: Running invalid instruction: [BITNOT {123}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [BITNOT doesn't like {123} as input] .
INFO: Running invalid instruction: [BITNOT 12.30]
INFO: ITEM 1 ERROR output 4 .
INFO: ITEM 2 ERROR output [BITNOT doesn't like 12.3 as input] .
PASS: [LSHIFT 5 2] returned 20 , as expected.
PASS: [LSHIFT 20 -2] returned 5 , as expected.
PASS: [LSHIFT -20 -1] returned 2147483638 , as expected.
PASS: [LSHIFT 5 0] returned 5 , as expected.
PASS: [LSHIFT 0 5] returned 0 , as expected.
PASS: [ASHIFT 5.0 2.00] returned 20 , as expected.
INFO: Executing invalid instruction: [(LSHIFT 5)]
PASS: Running [(LSHIFT 5)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to LSHIFT] .
INFO: Executing invalid instruction: [(LSHIFT 5 0 "toomany)]
PASS: Running [(LSHIFT 5 0 "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [LSHIFT "word 0]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [LSHIFT doesn't like word as input] .
INFO: Running invalid instruction: [LSHIFT [123] 0]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [LSHIFT doesn't like [123] as input] .
INFO: Running invalid instruction: [LSHIFT {123} 0]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [LSHIFT doesn't like {123} as input] .
INFO: Running invalid instruction: [LSHIFT 12.30 0]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [LSHIFT doesn't like 12.3 as input] .
INFO: Running invalid instruction: [LSHIFT 5 "word]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [LSHIFT doesn't like word as input] .
INFO: Running invalid instruction: [LSHIFT 5 [123]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [LSHIFT doesn't like [123] as input] .
INFO: Running invalid instruction: [LSHIFT 5 {123}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [LSHIFT doesn't like {123} as input] .
INFO: Running invalid instruction: [LSHIFT 5 12.30]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [LSHIFT doesn't like 12.3 as input] .
PASS: [ASHIFT 5 2] returned 20 , as expected.
PASS: [ASHIFT 20 -2] returned 5 , as expected.
PASS: [ASHIFT -20 -1] returned -10 , as expected.
PASS: [ASHIFT 5 0] returned 5 , as expected.
PASS: [ASHIFT 0 5] returned 0 , as expected.
PASS: [ASHIFT 5.0 2.00] returned 20 , as expected.
INFO: Executing invalid instruction: [(ASHIFT 5)]
PASS: Running [(ASHIFT 5)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to ASHIFT] .
INFO: Executing invalid instruction: [(ASHIFT 5 0 "toomany)]
PASS: Running [(ASHIFT 5 0 "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [ASHIFT "word 0]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [ASHIFT doesn't like word as input] .
INFO: Running invalid instruction: [ASHIFT [123] 0]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [ASHIFT doesn't like [123] as input] .
INFO: Running invalid instruction: [ASHIFT {123} 0]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [ASHIFT doesn't like {123} as input] .
INFO: Running invalid instruction: [ASHIFT 12.30 0]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [ASHIFT doesn't like 12.3 as input] .
INFO: Running invalid instruction: [ASHIFT 5 "word]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [ASHIFT doesn't like word as input] .
INFO: Running invalid instruction: [ASHIFT 5 [123]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [ASHIFT doesn't like [123] as input] .
INFO: Running invalid instruction: [ASHIFT 5 {123}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [ASHIFT doesn't like {123} as input] .
INFO: Running invalid instruction: [ASHIFT 5 12.30]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [ASHIFT doesn't like 12.3 as input] .
PASS: [TEXT "SAMPLEPROC] returned [[a b] [PRINT :a] [SHOW :b]] , as expected.
PASS: [TEXT "PROCEDURETEST.COMPLEXPROC] returned [[a b [c 1] [d SUM 1 2] [e] 2] [PRINT :a] [SHOW :b] [OUTPUT SUM :c :d]] , as expected.
INFO: Executing invalid instruction: [(TEXT)]
PASS: Running [(TEXT)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to TEXT] .
INFO: Executing invalid instruction: [(TEXT "nonexistent)]
PASS: Running [(TEXT "nonexistent)] set error code to 24 , as expected.
INFO: ITEM 2 ERROR output [I don't know how to nonexistent] .
INFO: Running invalid instruction: [(TEXT [sampleproc] )]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [TEXT doesn't like [sampleproc] as input] .
INFO: Running invalid instruction: [(TEXT {sampleproc} )]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [TEXT doesn't like {sampleproc} as input] .
INFO: Executing invalid instruction: [(TEXT "sampleproc "toomany)]
PASS: Running [(TEXT "sampleproc "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
CALL: MAKE "fulltext FULLTEXT "SAMPLEPROC
PASS: [LIST? :fulltext] returned true , as expected.
PASS: [ITEM 1 :fulltext] returned TO SAMPLEPROC  :a  :b , as expected.
PASS: [ITEM 2 :fulltext] returned   PRINT :a ; print , as expected.
PASS: [ITEM 3 :fulltext] returned   SHOW  :b ; show , as expected.
PASS: [ITEM 4 :fulltext] returned END , as expected.
PASS: [COUNT :fulltext] returned 4 , as expected.
CALL: MAKE "fulltext FULLTEXT "PROCEDURETEST.COMPLEXPROC
PASS: [LIST? :fulltext] returned true , as expected.
PASS: [ITEM 1 :fulltext] returned TO PROCEDURETEST.COMPLEXPROC :a :b [:c 1] [:d SUM 1 2] [:e] 2 , as expected.
PASS: [ITEM 2 :fulltext] returned   PRINT :a ; print , as expected.
PASS: [ITEM 3 :fulltext] returned   SHOW  :b ; show , as expected.
PASS: [ITEM 4 :fulltext] returned  , as expected.
PASS: [ITEM 5 :fulltext] returned   OUTPUT SUM :c :d ; output , as expected.
PASS: [ITEM 6 :fulltext] returned END , as expected.
PASS: [COUNT :fulltext] returned 6 , as expected.
INFO: Executing invalid instruction: [(FULLTEXT)]
PASS: Running [(FULLTEXT)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to FULLTEXT] .
INFO: Executing invalid instruction: [(FULLTEXT "nonexistent)]
PASS: Running [(FULLTEXT "nonexistent)] set error code to 24 , as expected.
INFO: ITEM 2 ERROR output [I don't know how to nonexistent] .
INFO: Running invalid instruction: [(FULLTEXT [sampleproc] )]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [FULLTEXT doesn't like [sampleproc] as input] .
INFO: Running invalid instruction: [(FULLTEXT {sampleproc} )]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [FULLTEXT doesn't like {sampleproc} as input] .
INFO: Executing invalid instruction: [(FULLTEXT "sampleproc "toomany)]
PASS: Running [(FULLTEXT "sampleproc "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
PASS: [DEFINEDP "nonexistent] returned false , as expected.
PASS: [DEFINED? "nonexistent] returned false , as expected.
PASS: [DEFINED? "FORWARD] returned false , as expected.
PASS: [DEFINED? "SAMPLEPROC] returned true , as expected.
PASS: [DEFINED? "sampleproc] returned true , as expected.
PASS: [DEFINED? "] returned false , as expected.
INFO: Executing invalid instruction: [(DEFINED?)]
PASS: Running [(DEFINED?)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to DEFINED?] .
INFO: Running invalid instruction: [(DEFINED? {a} )]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [DEFINED? doesn't like {a} as input] .
INFO: Running invalid instruction: [(DEFINED? [] )]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [DEFINED? doesn't like [] as input] .
INFO: Executing invalid instruction: [(DEFINED? "sampleproc "toomany)]
PASS: Running [(DEFINED? "sampleproc "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
PASS: [PROCEDUREP "nonexistent] returned false , as expected.
PASS: [PROCEDURE? "nonexistent] returned false , as expected.
PASS: [PROCEDURE? "FORWARD] returned true , as expected.
PASS: [PROCEDURE? "SAMPLEPROC] returned true , as expected.
PASS: [PROCEDURE? "sampleproc] returned true , as expected.
PASS: [PROCEDURE? "] returned false , as expected.
INFO: Executing invalid instruction: [(PROCEDURE?)]
PASS: Running [(PROCEDURE?)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to PROCEDURE?] .
INFO: Running invalid instruction: [(PROCEDURE? {a} )]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [PROCEDURE? doesn't like {a} as input] .
INFO: Running invalid instruction: [(PROCEDURE? [] )]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [PROCEDURE? doesn't like [] as input] .
INFO: Executing invalid instruction: [(PROCEDURE? "sampleproc "toomany)]
PASS: Running [(PROCEDURE? "sampleproc "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
PASS: [NAMEP "nonexistent] returned false , as expected.
PASS: [NAME? "nonexistent] returned false , as expected.
PASS: [NAME? "FORWARD] returned false , as expected.
PASS: [NAME? "] returned false , as expected.
PASS: [NAME? "namepvariable] returned true , as expected.
PASS: [NAME? "NAMEPVARIABLE] returned true , as expected.
INFO: Executing invalid instruction: [(NAME?)]
PASS: Running [(NAME?)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to NAME?] .
INFO: Running invalid instruction: [(NAME? {a} )]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [NAME? doesn't like {a} as input] .
INFO: Running invalid instruction: [(NAME? [] )]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [NAME? doesn't like [] as input] .
INFO: Executing invalid instruction: [(NAME? "namepvariable "toomany)]
PASS: Running [(NAME? "namepvariable "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
PASS: [PRIMITIVEP "nonexistent] returned false , as expected.
PASS: [PRIMITIVE? "nonexistent] returned false , as expected.
PASS: [PRIMITIVE? "FORWARD] returned true , as expected.
PASS: [PRIMITIVE? "FD] returned true , as expected.
PASS: [PRIMITIVE? "] returned false , as expected.
PASS: [PRIMITIVE? "namepvariable] returned false , as expected.
PASS: [PRIMITIVE? "sampleproc] returned false , as expected.
INFO: Executing invalid instruction: [(PRIMITIVE?)]
PASS: Running [(PRIMITIVE?)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to PRIMITIVE?] .
INFO: Running invalid instruction: [(PRIMITIVE? {a} )]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [PRIMITIVE? doesn't like {a} as input] .
INFO: Running invalid instruction: [(PRIMITIVE? [] )]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [PRIMITIVE? doesn't like [] as input] .
INFO: Executing invalid instruction: [(PRIMITIVE? "namepvariable "toomany)]
PASS: Running [(PRIMITIVE? "namepvariable "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
PASS: [MACROP "mymacro] returned true , as expected.
PASS: [MACRO? "mymacro] returned true , as expected.
PASS: [MACRO? "FORWARD] returned false , as expected.
PASS: [MACRO? "FD] returned false , as expected.
PASS: [MACRO? "] returned false , as expected.
PASS: [MACRO? "namepvariable] returned false , as expected.
PASS: [MACRO? "sampleproc] returned false , as expected.
INFO: Executing invalid instruction: [(MACRO?)]
PASS: Running [(MACRO?)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to MACRO?] .
INFO: Running invalid instruction: [(MACRO? {a} )]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [MACRO? doesn't like {a} as input] .
INFO: Running invalid instruction: [(MACRO? [] )]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [MACRO? doesn't like [] as input] .
INFO: Executing invalid instruction: [(MACRO? "mymacro "toomany)]
PASS: Running [(MACRO? "mymacro "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
PASS: [ECHO "input] returned input , as expected.
PASS: [DEFINEDP "ECHO] returned true , as expected.
PASS: [DEFINED? "ECHO] returned true , as expected.
CALL: DEFINE "DONOTHING [[]]
PASS: [DEFINED? "DONOTHING] returned true , as expected.
CALL: DONOTHING
CALL: MAKE "linewascalled "false
CALL: DEFINE "BODYHASEMPTYLINES [[] [] [MAKE "linewascalled "true] []]
CALL: BODYHASEMPTYLINES
PASS: [:linewascalled] returned true , as expected.
INFO: Executing invalid instruction: [(DEFINE "BADPROCEDURE)]
PASS: Running [(DEFINE "BADPROCEDURE)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to DEFINE] .
INFO: Executing invalid instruction: [(DEFINE "BADPROCEDURE [[a] [output :a]] "toomany)]
PASS: Running [(DEFINE "BADPROCEDURE [[a] [output :a]] "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [DEFINE [BADPROCEDURE] [[a] [output :a]]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [DEFINE doesn't like [BADPROCEDURE] as input] .
INFO: Running invalid instruction: [DEFINE {BADPROCEDURE} [[a] [output :a]]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [DEFINE doesn't like {BADPROCEDURE} as input] .
INFO: Running invalid instruction: [DEFINE "BADPROCEDURE "badtext]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [DEFINE doesn't like badtext as input] .
INFO: Running invalid instruction: [DEFINE "BADPROCEDURE []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [DEFINE doesn't like [] as input] .
INFO: Running invalid instruction: [DEFINE "BADPROCEDURE {[a] [output :a]}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [DEFINE doesn't like {[a] [output :a]} as input] .
INFO: Running invalid instruction: [DEFINE "BADPROCEDURE ["a [output :a]]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [DEFINE doesn't like ["a [output :a]] as input] .
INFO: Running invalid instruction: [DEFINE "BADPROCEDURE [[a] {output :a}]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [DEFINE doesn't like [[a] {output :a}] as input] .
INFO: Running invalid instruction: [DEFINE "BADPROCEDURE [[a] output :a]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [DEFINE doesn't like [[a] output :a] as input] .
INFO: Running invalid instruction: [DEFINE "BADPROCEDURE [{a b} [FORWARD 10]]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [DEFINE doesn't like [{a b} [FORWARD 10]] as input] .
INFO: Running invalid instruction: [DEFINE "BADPROCEDURE [[a b] [FORWARD 10] BADINPUT [FORWARD 10]]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [DEFINE doesn't like [[a b] [FORWARD 10] BADINPUT [FORWARD 10]] as input] .
PASS: [DEFINED? "BADPROCEDURE] returned false , as expected.
INFO: Running invalid instruction: [DEFINE "BUG1520950 [[] APPLY [OUTPUT ?] [3]] BUG1520950]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [DEFINE doesn't like [[] APPLY [OUTPUT ?] [3]] as input] .
PASS: [DEFINED? "BUG1520950] returned false , as expected.
PASS: [LOCALVARTEST "unknownlocalvar 42] returned 42 , as expected.
PASS: [NAME? "unknownlocalvar] returned false , as expected.
PASS: [:10] returned ten , as expected.
PASS: [:11] returned eleven , as expected.
PASS: [:10] returned ten , as expected.
PASS: [:11] returned eleven , as expected.
INFO: Executing invalid instruction: [(LOCAL)]
PASS: Running [(LOCAL)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to LOCAL] .
INFO: Running invalid instruction: [LOCAL {a}]
FAIL: Executing [LOCAL {a}] did not throw an error
PASS: [LOCALVARTEST "mylocalvarname 42] returned 42 , as expected.
PASS: [:mylocalvarname] returned 32 , as expected.
INFO: Executing invalid instruction: [(LOCALMAKE)]
PASS: Running [(LOCALMAKE)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to LOCALMAKE] .
INFO: Executing invalid instruction: [(CONTENTS "toomany)]
PASS: Running [(CONTENTS "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
PASS: [PROCEDURES] returned [#test .eqtest abstest activeareatest andtest angleiscloseenough applytest applytest.applyoutput applytest.badinput applytest.bug1519088 applytest.lambdatemplate applytest.lambdatemplate.newscopetest applytest.nonprimitive applytest.nooutput applytest.proceduretexttemplate applytest.proceduretexttemplate.newscopetest applytest.questionmarktemplate applytest.smoketest arcbadinputtest arccostest arcsintest arcsmoketest arctantest arctest arraybadinputtest arrayorigintest arrayptest arraysmoketest arraytest asciitest ashifttest.badinput ashifttest.smoketest beforeptest bitandtest.badinput bitandtest.smoketest bitcopytest bitloadsizetest bitmaptest bitnottest.badinput bitnottest.smoketest bitortest.badinput bitortest.smoketest bitpastetoindextest.badinput bitpastetoindextest.smoketest bitwisetest bitxortest.badinput bitxortest.smoketest bodyhasemptylines bug1349374test bug1377856test bug1383281test bug1384267test bug1388325test bug1397560test bug1429960test bug1438863test bug1448155test bug1458661test burytest burytest.badinput burytest.buriedprocedure burytest.buryall burytest.procedure burytest.propertylist burytest.variable butfirststest butfirststest.badinput butfirststest.smoketest butfirsttest butlasttest buttonptest catchtest catchtest.badinput catchtest.catchbuiltinerror catchtest.catchusererror catchtest.doublecatcherror catchtest.doublecatcherror.innercatcherror catchtest.doublecatcherror.throwerror catchtest.skiperrortag catchtest.skiperrortag.catcherror catchtest.skiperrortag.throw catchtest.skipthrowtag catchtest.skipthrowtag.catchthrowtag catchtest.skipthrowtag.throwerror catchtest.skipthrowtagwithvalue catchtest.skipthrowtagwithvalue.catchinnertag catchtest.skipthrowtagwithvalue.throwoutertag catchtest.smoketest catchtest.smoketest.throw catchtest.throw.builtin.error chdirtest client.onreadytosend colorindextest colorsetgettest colortest combinetest combinetest.badinput combinetest.smoketest controlflowtest copydefmaybeoutputtest copydefoptest copydefoutputtest copydefstoptest copydeftest copydeftotest costest definetest definetest.badinput definetest.bodyhasemptylines definetest.smoketest differencetest difficultcomments directorysmoketest directorytest dllcalltest dllfreetest dllloadtest dllsmoketest dlltest donothing doorientationtest echo edalltest editortest emptyptest equalptest erasetest erasetest.badinput erasetest.eraseall erasetest.eraseprocedure erasetest.erasepropertylist erasetest.erasevariable erasetest.ern erasetest.erpl erracttest erracttest.bug1517326 erracttest.bug1517326.continue5 erracttest.catchblockserract erracttest.changeerract.output.6 erracttest.changeerractinerract erracttest.erractaftercatch erracttest.errorinerract erracttest.output.5 erracttest.output.nexterractvalue erracttest.outputwrongvalue erracttest.recoverableerror.outputnothing erracttest.smoketest erracttest.unrecoverableerror.outputnothing erracttest.unrecoverableerror.outputvalue error.30.test errortest exptest filetest filetest.allopen filetest.badinput filetest.closeall filetest.dribble filetest.erasefile filetest.openappend filetest.opendirectoryasfile filetest.openopenfile filetest.openupdate filetest.setreadpos filetest.setwritepos filetest.smoketest filltest filltimerevent firststest firststest.badinput firststest.smoketest firsttest floodcolortest fontfacenamestest fontfacenamestest.badinput fontfacenamestest.manualtest fontfacenamestest.smoketest formtest fputtest fputtest.badinput fputtest.smoketest fulltexttest fulltexttest.badinput fulltexttest.smoketest helptest i.dont.know.what.to.do.with.value iftest inporttest inttest iseqtest labelbadinputtest labelcircletest labeltest largeedittest lasttest listptest listtest listtest.smoketest lntest loadtest localvartest log10test logictest logoversiontest logoversiontest.badinput logoversiontest.smoketest lputtest lputtest.badinput lputtest.smoketest lshifttest.badinput lshifttest.smoketest macro.return.unbound.instead.of.list macrotest macrotest.outputnothing mathtest memberptest messageboxtest messageboxtest.badinput messageboxtest.smoketest miditest miditest.badinput miditest.devicezero miditest.longformat miditest.playtune miditest.smoketest minustest misctest mkdirtest modulotest mousetest mousetest.badinput mousetest.simpletest my.proc.to.step myadd mymacro networktest networktest.client.echo networktest.client.receivelargepacket networktest.client.receiveunframedpacket networktest.client.shutdownrace networktest.client.smoketest networktest.hostname networktest.netshutdowncrash networktest.server.receiveunframedpacket networktest.server.shutdownrace networktest.server.twoconnections networktest.servercommand networktest.smoketest no.input.no.output nodestest nottest numberptest one.input.no.output orientationtest ortest outporttest output.373 parsetest parsetest.expression parsetest.func parsetest.manyinputs parsetest.number parsetest.word pasteincircle pencolortest penmodetest pensizetest pensizetest.badinput pensizetest.setgettest pensizetest.smoketest pentest penupdowntest perspectivetest pitest pixeltest pixeltest.badinput pixeltest.smoketest plisttest porttest powertest predicatetest printtest printtest.performance printtest.smoketest procedure.shadows.myshadowedvar procedure.with.to.inside.it procedureinworkingdirectory proceduretest proceduretest.complexproc producttest questionboxtest questionboxtest.badinput questionboxtest.smoketest queuetest queuetest.badinput queuetest.circulartest queuetest.smoketest quotedtest quotedtest.badinput quotedtest.smoketest quotienttest radarccostest radarcsintest radarctantest radcostest radsintest radtantest rawasciitest reducetest reducetest.badinput reducetest.max reducetest.max.rest reducetest.smoketest refreshtest remaindertest repcounttest repcounttest.badinput repcounttest.smoketest repcounttest.timercallback repcounttest.timertest repeattest repeattest.badinput repeattest.outputinrepeat repeattest.smoketest repeattest.stopinrepeat reversetest reversetest.badinput reversetest.smoketest rmdirtest roundtest runresulttest runresulttest.badinput runresulttest.smoketest runtest sampleproc screencolortest screentest scrunchtest selectboxtest selectboxtest.badinput selectboxtest.smoketest sentencetest sentencetest.badinput sentencetest.noalias sentencetest.smoketest setitemtest setlabelfonttest setpixeltest.badinput setpixeltest.smoketest setrandomorientation shellscripttest shelltest shelltest.badinput shelltest.smoketest signtest sintest sorttest sorttest.after? sorttest.badinput sorttest.nonpredicate sorttest.oneinputbydefault sorttest.oneinputproc sorttest.performance sorttest.regression sorttest.sortbylegs sorttest.sortbyname sorttest.threeinputproc soundtest soundtest.badinput soundtest.frequency.a4 soundtest.frequency.b4 soundtest.frequency.c4 soundtest.frequency.c5 soundtest.frequency.d4 soundtest.frequency.d5 soundtest.frequency.e4 soundtest.frequency.f4 soundtest.frequency.g4 soundtest.sound soundtest.tone sqrttest stacktest stacktest.badinput stacktest.circulartest stacktest.smoketest steptest steptest.badinput steptest.procedure steptest.propertylist steptest.shadowvariable steptest.stepall steptest.steppedprocedure steptest.variable sumtest tantest testall testlib.repeatword testtest testtest.badinput testtest.scopetest testtest.smoketest texttest texttest.badinput texttest.smoketest thingtest thingtest.badinput thingtest.shadowedvariable thingtest.smoketest throwtest.badinput timertest timertest.badinput timertest.smoketest timetest timetest.badinput timetest.smoketest timewait totest totest.baddefaultinputs totest.chaineddefaults totest.chaineddefaultstest totest.defaultinput totest.defaultnumberofinputs totest.nooutput totest.output5 totest.outputdefaultinput totest.outputdefaultinput.twoinputs totest.outputrest totest.outputrest.twoinputs totest.repeatedinput totest.repeatedinputtest totest.rest totest.singleinput totest.smoketest tracetest tracetest.badinput tracetest.function tracetest.procedure tracetest.propertylist tracetest.traceall tracetest.tracedfunction tracetest.tracedprocedure tracetest.variable waittest windowfileedittest windowfileedittest.bug1330752 windowfileedittest.longfilename windowsettest windowstest windowstest.button windowstest.button.badinput windowstest.checkbox windowstest.checkbox.badinput windowstest.checkbox.deletegroupbox windowstest.combobox windowstest.combobox.badinput windowstest.debugwindows windowstest.debugwindows.badinput windowstest.debugwindows.stress windowstest.dialog.badinput windowstest.dialog.badinput.fromcallback windowstest.dialog.smoketest windowstest.groupbox windowstest.groupbox.badinput windowstest.listbox windowstest.listbox.badinput windowstest.mainwindow.smoketest windowstest.radiobutton windowstest.radiobutton.badinput windowstest.radiobutton.deletegroupbox windowstest.regressiontest windowstest.scrollbar windowstest.scrollbar.badinput windowstest.setup windowstest.static windowstest.static.badinput windowstest.window.badinput windowstest.window.smoketest windowtest wordproctest wordptest wordtest yesnoboxtest yesnoboxtest.badinput yesnoboxtest.smoketest ~ignoreme ~ignoremewascalled] , as expected.
INFO: Executing invalid instruction: [(PROCEDURES "toomany)]
PASS: Running [(PROCEDURES "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
PASS: [NAMES] returned [[] [10 11 12 13 erract erract.was.called expectedresult instruction lambda.function.ran mylocalvarname namepvariable startup testlog thesum totest.array ~ignoremewascalled]] , as expected.
INFO: Executing invalid instruction: [(NAMES "toomany)]
PASS: Running [(NAMES "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
PASS: [PLISTS] returned [[] [] []] , as expected.
INFO: Executing invalid instruction: [(PLISTS "toomany)]
PASS: Running [(PLISTS "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
PASS: [NAMELIST "a] returned [[] [a]] , as expected.
PASS: [NAMELIST [a b]] returned [[] [a b]] , as expected.
PASS: [NAMELIST "] returned [[] []] , as expected.
PASS: [NAMELIST []] returned [[] []] , as expected.
INFO: Executing invalid instruction: [(NAMELIST)]
PASS: Running [(NAMELIST)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to NAMELIST] .
INFO: Running invalid instruction: [NAMELIST {a b}]
INFO: ITEM 1 ERROR output 21 .
INFO: ITEM 2 ERROR output [namelist doesn't like {a b} as input] .
INFO: Executing invalid instruction: [(NAMELIST "a "b)]
PASS: Running [(NAMELIST "a "b)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
CALL: PO CONTENTS
CALL: PO NAMES
CALL: PO PROCEDURES
CALL: PO BURIED
CALL: PO PLISTS
CALL: PO []
CALL: POALL
CALL: POPS
CALL: PONS
CALL: POPLS
CALL: PON "namepvariable
CALL: PON [namepvariable]
INFO: Executing invalid instruction: [(POPL)]
PASS: Running [(POPL)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to POPL] .
INFO: Executing invalid instruction: [(POPL "numbertoword "toomany)]
PASS: Running [(POPL "numbertoword "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Executing invalid instruction: [(PO)]
PASS: Running [(PO)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to PO] .
INFO: Executing invalid instruction: [(PO [[] [] []] "toomany)]
PASS: Running [(PO [[] [] []] "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Executing invalid instruction: [PO [[forward] [] []]]
PASS: Running [PO [[forward] [] []]] set error code to 22 , as expected.
INFO: ITEM 2 ERROR output [forward is a primitive] .
INFO: Executing invalid instruction: [PO [[nonexistent] [] []]]
PASS: Running [PO [[nonexistent] [] []]] set error code to 24 , as expected.
INFO: ITEM 2 ERROR output [I don't know how to nonexistent] .
INFO: Executing invalid instruction: [PO [[] [nonexistent] []]]
PASS: Running [PO [[] [nonexistent] []]] set error code to 11 , as expected.
INFO: ITEM 2 ERROR output [nonexistent has no value] .
INFO: Running invalid instruction: [PO {PROCEDURETEST}]
INFO: ITEM 1 ERROR output 4 .
INFO: ITEM 2 ERROR output [PO doesn't like {PROCEDURETEST} as input] .
INFO: Running invalid instruction: [PO [[PROCEDURETEST] [namepvariable] {c}]]
INFO: ITEM 1 ERROR output 4 .
INFO: ITEM 2 ERROR output [PO doesn't like {c} as input] .
INFO: Running invalid instruction: [PO [PROCEDURETEST SAMPLEPROC {c}]]
INFO: ITEM 1 ERROR output 4 .
INFO: ITEM 2 ERROR output [PO doesn't like {c} as input] .
INFO: Running invalid instruction: [PO [[PROCEDURETEST SAMPLEPROC {c}]]]
INFO: ITEM 1 ERROR output 4 .
INFO: ITEM 2 ERROR output [PO doesn't like {c} as input] .
INFO: Running invalid instruction: [PO [[PROCEDURETEST] [namepvariable] [c] [d]]]
INFO: ITEM 1 ERROR output 4 .
INFO: ITEM 2 ERROR output [PO doesn't like [[PROCEDURETEST] [namepvariable] [c] [d]] as input] .
INFO: Running invalid instruction: [PO [[[PROCEDURETEST]]]]
INFO: ITEM 1 ERROR output 4 .
INFO: ITEM 2 ERROR output [PO doesn't like [PROCEDURETEST] as input] .
INFO: Executing invalid instruction: [(POALL "toomany)]
PASS: Running [(POALL "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Executing invalid instruction: [(POPS "toomany)]
PASS: Running [(POPS "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Executing invalid instruction: [(POPLS "toomany)]
PASS: Running [(POPLS "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Executing invalid instruction: [(POTS "toomany)]
PASS: Running [(POTS "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Executing invalid instruction: [(PON)]
PASS: Running [(PON)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to PON] .
INFO: Running invalid instruction: [PON "sampleproc]
INFO: ITEM 1 ERROR output 21 .
INFO: ITEM 2 ERROR output [sampleproc has no value] .
INFO: Executing invalid instruction: [(PON "too "many)]
PASS: Running [(PON "too "many)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [PON {a b}]
INFO: ITEM 1 ERROR output 21 .
INFO: ITEM 2 ERROR output [namelist doesn't like {a b} as input] .
INFO: Executing invalid instruction: [(POT)]
PASS: Running [(POT)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to POT] .
INFO: Executing invalid instruction: [(POT "pot "pots)]
PASS: Running [(POT "pot "pots)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [POT "forward]
INFO: ITEM 1 ERROR output 22 .
INFO: ITEM 2 ERROR output [forward is a primitive] .
INFO: Running invalid instruction: [POT "nonexistent]
INFO: ITEM 1 ERROR output 24 .
INFO: ITEM 2 ERROR output [I don't know how to nonexistent] .
INFO: Running invalid instruction: [POT [nonexistent]]
INFO: ITEM 1 ERROR output 24 .
INFO: ITEM 2 ERROR output [I don't know how to nonexistent] .
INFO: Running invalid instruction: [POT {a}]
INFO: ITEM 1 ERROR output 4 .
INFO: ITEM 2 ERROR output [POT doesn't like {a} as input] .
PASS: "Bug #1438863 is fixed; erasing a procedure in the middle of running it does not crash
INFO: Executing invalid instruction: [MACROTEST.OUTPUTNOTHING]
FAIL: ITEM 1 ERROR output 5 .  We expected 29 .
INFO: ITEM 2 ERROR output [SHOW didn't output to IGNORE] .
PASS: Bug #1458661 is fixed. Running a macro that returns nothing doesn't crash.
PASS: [REDUCE "REDUCETEST.MAX [2 3 8 7 9 0]] returned 9 , as expected.
PASS: [(REDUCETEST.MAX.REST 2 3 8 7 9 0)] returned 9 , as expected.
PASS: [REDUCE [IFELSE ?1 > ?2 [?1] [?2]] [2 3 8 7 9 0]] returned 9 , as expected.
PASS: [REDUCE "DOESNOTEXIST [100]] returned 100 , as expected.
PASS: [REDUCE "WORD "abcde] returned abcde , as expected.
INFO: Executing invalid instruction: [(REDUCE "REDUCETEST.MAX)]
PASS: Running [(REDUCE "REDUCETEST.MAX)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to REDUCE] .
INFO: Executing invalid instruction: [(REDUCE "REDUCETEST.MAX [1 2 3] "toomany)]
PASS: Running [(REDUCE "REDUCETEST.MAX [1 2 3] "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Executing invalid instruction: [REDUCE 100 [1]]
FAIL: Executing [REDUCE 100 [1]] did not throw an error.
FAIL: Executing [REDUCE 100 [1]] did not change ERROR.
INFO: Running invalid instruction: [REDUCE "SUM {1 2 3}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [bf doesn't like {1 2 3} as input] .
INFO: Running invalid instruction: [REDUCE "SUM []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [bf doesn't like [] as input] .
INFO: Running invalid instruction: [REDUCE "WORD "]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [bf doesn't like  as input] .
PASS: [SUMCOPY 1 2] returned 3 , as expected.
PASS: [(SUMCOPY 1 2 3)] returned 6 , as expected.
PASS: [(SUMCOPY)] returned 0 , as expected.
INFO: Running invalid instruction: [SUMCOPY 1 "ten]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SUMCOPY doesn't like ten as input] .
INFO: Running invalid instruction: [SUMCOPY "ten 1]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SUMCOPY doesn't like ten as input] .
PASS: [1 MYPLUS 2] returned 3 , as expected.
PASS: [1 MYPLUS 2 MYPLUS 3] returned 6 , as expected.
INFO: Running invalid instruction: [1 MYPLUS "ten]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [MYPLUS doesn't like ten as input] .
INFO: Running invalid instruction: ["ten MYPLUS 1]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [MYPLUS doesn't like ten as input] .
INFO: Executing invalid instruction: [(MYPLUS)]
PASS: Running [(MYPLUS)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to MYPLUS] .
PASS: [MYADDCOPY 1 2] returned 3 , as expected.
PASS: [COPYDEFTOTEST] returned 373 , as expected.
INFO: Executing invalid instruction: [(COPYDEF)]
PASS: Running [(COPYDEF)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to COPYDEF] .
INFO: Executing invalid instruction: [(COPYDEF "MYLIST)]
PASS: Running [(COPYDEF "MYLIST)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to COPYDEF] .
INFO: Executing invalid instruction: [(COPYDEF "MYLIST "LIST "TOOMANY)]
PASS: Running [(COPYDEF "MYLIST "LIST "TOOMANY)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Executing invalid instruction: [(COPYDEF "SUM "PRODUCT)]
PASS: Running [(COPYDEF "SUM "PRODUCT)] set error code to 22 , as expected.
INFO: ITEM 2 ERROR output [SUM is a primitive] .
INFO: Executing invalid instruction: [(COPYDEF "XXXCOPY "DOESNOTEXIT)]
PASS: Running [(COPYDEF "XXXCOPY "DOESNOTEXIT)] set error code to 13 , as expected.
INFO: ITEM 2 ERROR output [I don't know how to DOESNOTEXIT] .
INFO: Running invalid instruction: [(COPYDEF [1] "SUM)]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [COPYDEF doesn't like [1] as input] .
INFO: Running invalid instruction: [(COPYDEF {1} "SUM)]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [COPYDEF doesn't like {1} as input] .
INFO: Running invalid instruction: [(COPYDEF 1 "SUM)]
INFO: ITEM 1 ERROR output 4 .
INFO: ITEM 2 ERROR output [COPYDEF doesn't like 1 as input] .
INFO: Running invalid instruction: [(COPYDEF "NEWCOPY [1] )]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [COPYDEF doesn't like [1] as input] .
INFO: Running invalid instruction: [(COPYDEF "NEWCOPY {1} )]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [COPYDEF doesn't like {1} as input] .
INFO: Running invalid instruction: [(COPYDEF "NEWCOPY 1 )]
INFO: ITEM 1 ERROR output 4 .
INFO: ITEM 2 ERROR output [COPYDEF doesn't like 1 as input] .
INFO: Executing invalid instruction: [(NEWCOPY)]
PASS: Running [(NEWCOPY)] set error code to 13 , as expected.
INFO: ITEM 2 ERROR output [I don't know how to NEWCOPY] .
INFO: Executing invalid instruction: [(COPYDEF "SUMCOPY "SUM)]
PASS: Running [(COPYDEF "SUMCOPY "SUM)] set error code to 22 , as expected.
INFO: ITEM 2 ERROR output [SUMCOPY is a primitive] .
PASS: [GPROP "nonexistent "prop1] returned [] , as expected.
PASS: [GPROP "testplist1 "nonexistent] returned [] , as expected.
PASS: [GPROP "testplist1 "property1] returned 1 , as expected.
PASS: [GPROP "testplist1 "property2] returned abc , as expected.
PASS: [GPROP "testplist1 "property3] returned [a b c] , as expected.
PASS: [GPROP "testplist1 "property4] returned {a b c} , as expected.
PASS: [GPROP "testplist1 "property5] returned [] , as expected.
PASS: [GPROP "testplist1 "property6] returned  , as expected.
PASS: [GPROP "testplist1 "] returned empty , as expected.
PASS: [GPROP "testplist1 "property1] returned one , as expected.
PASS: [PLIST "nonexistent] returned [] , as expected.
PASS: [COUNT :listcontents] returned 14 , as expected.
PASS: [:value] returned empty , as expected.
PASS: [:value] returned  , as expected.
PASS: [:value] returned [] , as expected.
PASS: [:value] returned {a b c} , as expected.
PASS: [:value] returned [a b c] , as expected.
PASS: [:value] returned abc , as expected.
PASS: [:value] returned one , as expected.
PASS: [COUNT :plistsoutput] returned 3 , as expected.
PASS: [ITEM 1 :plistsoutput] returned [] , as expected.
PASS: [ITEM 2 :plistsoutput] returned [] , as expected.
PASS: [MEMBERP "testplist1 ITEM 3 :plistsoutput] returned true , as expected.
PASS: [COUNT :plistsoutput] returned 3 , as expected.
PASS: [ITEM 1 :plistsoutput] returned [] , as expected.
PASS: [ITEM 2 :plistsoutput] returned [] , as expected.
PASS: [MEMBERP "testplist1 ITEM 3 :plistsoutput] returned false , as expected.
PASS: [GPROP "testplist1 "property1] returned [] , as expected.
PASS: [GPROP "testplist1 "property2] returned [] , as expected.
PASS: [GPROP "testplist1 "property3] returned [] , as expected.
PASS: [GPROP "testplist1 "property4] returned [] , as expected.
PASS: [GPROP "testplist1 "property5] returned [] , as expected.
PASS: [GPROP "testplist1 "property6] returned [] , as expected.
PASS: [GPROP "testplist1 "] returned [] , as expected.
PASS: [PLIST "testplist1] returned [] , as expected.
INFO: Executing invalid instruction: [(PLIST)]
PASS: Running [(PLIST)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to PLIST] .
INFO: Executing invalid instruction: [(PLIST "too "many)]
PASS: Running [(PLIST "too "many)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [PLIST [1 2 3]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [PLIST doesn't like [1 2 3] as input] .
INFO: Running invalid instruction: [PLIST {1 2 3}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [PLIST doesn't like {1 2 3} as input] .
INFO: Executing invalid instruction: [(REMPROP)]
PASS: Running [(REMPROP)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to REMPROP] .
INFO: Executing invalid instruction: [(REMPROP "plist)]
PASS: Running [(REMPROP "plist)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to REMPROP] .
INFO: Executing invalid instruction: [(REMPROP "plist "prop "toomany)]
PASS: Running [(REMPROP "plist "prop "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [REMPROP [1 2 3] "prop]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [REMPROP doesn't like [1 2 3] as input] .
INFO: Running invalid instruction: [REMPROP {1 2 3} "prop]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [REMPROP doesn't like {1 2 3} as input] .
INFO: Running invalid instruction: [REMPROP "plist [1 2 3]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [REMPROP doesn't like [1 2 3] as input] .
INFO: Running invalid instruction: [REMPROP "plist {1 2 3}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [REMPROP doesn't like {1 2 3} as input] .
INFO: Executing invalid instruction: [(GPROP)]
PASS: Running [(GPROP)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to GPROP] .
INFO: Executing invalid instruction: [(GPROP "plist)]
PASS: Running [(GPROP "plist)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to GPROP] .
INFO: Executing invalid instruction: [(GPROP "plist "prop "toomany)]
PASS: Running [(GPROP "plist "prop "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [GPROP [1 2 3] "prop]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [GPROP doesn't like [1 2 3] as input] .
INFO: Running invalid instruction: [GPROP {1 2 3} "prop]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [GPROP doesn't like {1 2 3} as input] .
INFO: Running invalid instruction: [GPROP "plist [1 2 3]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [GPROP doesn't like [1 2 3] as input] .
INFO: Running invalid instruction: [GPROP "plist {1 2 3}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [GPROP doesn't like {1 2 3} as input] .
INFO: Executing invalid instruction: [(PPROP)]
PASS: Running [(PPROP)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to PPROP] .
INFO: Executing invalid instruction: [(PPROP "plist)]
PASS: Running [(PPROP "plist)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to PPROP] .
INFO: Executing invalid instruction: [(PPROP "plist "prop)]
PASS: Running [(PPROP "plist "prop)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to PPROP] .
INFO: Executing invalid instruction: [(PPROP "plist "name "value "toomany)]
PASS: Running [(PPROP "plist "name "value "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [PPROP [1 2 3] "name "value]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [PPROP doesn't like [1 2 3] as input] .
INFO: Running invalid instruction: [PPROP {1 2 3} "name "value]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [PPROP doesn't like {1 2 3} as input] .
INFO: Running invalid instruction: [PPROP "plist [1 2 3] "value]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [PPROP doesn't like [1 2 3] as input] .
INFO: Running invalid instruction: [PPROP "plist {1 2 3} "value]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [PPROP doesn't like {1 2 3} as input] .
PASS: [PLLIST "a] returned [[] [] [a]] , as expected.
PASS: [PLLIST "] returned [[] [] []] , as expected.
PASS: [PLLIST [a b]] returned [[] [] [a b]] , as expected.
PASS: [PLLIST []] returned [[] [] []] , as expected.
INFO: Executing invalid instruction: [(PLLIST)]
PASS: Running [(PLLIST)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to PLLIST] .
INFO: Executing invalid instruction: [(PLLIST "too "many)]
PASS: Running [(PLLIST "too "many)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [PLLIST {a b}]
INFO: ITEM 1 ERROR output 21 .
INFO: ITEM 2 ERROR output [pllist doesn't like {a b} as input] .
PASS: "if "true ran the "true branch, as expected
PASS: if "false ran the "false branch, as expected
PASS: if "true ran the "true branch, as expected
PASS: IF could be used as an r-val, as expected.
INFO: Running invalid instruction: [if 1 []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [if doesn't like 1 as input] .
INFO: Running invalid instruction: [if 0 []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [if doesn't like 0 as input] .
INFO: Running invalid instruction: [if "yes []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [if doesn't like yes as input] .
INFO: Running invalid instruction: [if "no []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [if doesn't like no as input] .
INFO: Running invalid instruction: [if [1] []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [if doesn't like [1] as input] .
INFO: Running invalid instruction: [if {1} []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [if doesn't like {1} as input] .
INFO: Running invalid instruction: [if "true {1}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [if doesn't like {1} as input] .
INFO: Executing invalid instruction: [(if)]
PASS: Running [(if)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to if] .
INFO: Executing invalid instruction: [(if "true)]
PASS: Running [(if "true)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to if] .
INFO: Executing invalid instruction: [(if "false)]
PASS: Running [(if "false)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to if] .
INFO: Executing invalid instruction: [(if "true [] [] "toomany)]
PASS: Running [(if "true [] [] "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
PASS: [#] returned -1 , as expected.
INFO: Executing invalid instruction: [(# "toomany)]
PASS: Running [(# "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running [TEST "true]
CALL: MAKE "iftrue.was.run "false
CALL: MAKE "iffalse.was.run "false
CALL: IFTRUE [MAKE "iftrue.was.run "true]
CALL: IFFALSE [MAKE "iffalse.was.run "true]
PASS: [:iftrue.was.run] returned true , as expected.
PASS: [:iffalse.was.run] returned false , as expected.
CALL: MAKE "iftrue.was.run "false
CALL: MAKE "iffalse.was.run "false
CALL: IFTRUE [MAKE "iftrue.was.run "true]
CALL: IFFALSE [MAKE "iffalse.was.run "true]
PASS: [:iftrue.was.run] returned true , as expected.
PASS: [:iffalse.was.run] returned false , as expected.
INFO: Running [TEST "false]
CALL: MAKE "iftrue.was.run "false
CALL: MAKE "iffalse.was.run "false
CALL: IFTRUE [MAKE "iftrue.was.run "true]
CALL: IFFALSE [MAKE "iffalse.was.run "true]
PASS: [:iftrue.was.run] returned false , as expected.
PASS: [:iffalse.was.run] returned true , as expected.
INFO: Executing invalid instruction: [(TEST)]
PASS: Running [(TEST)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to TEST] .
INFO: Executing invalid instruction: [(TEST "true "toomany)]
PASS: Running [(TEST "true "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [TEST "word]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [TEST doesn't like word as input] .
INFO: Running invalid instruction: [TEST 1234]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [TEST doesn't like 1234 as input] .
INFO: Running invalid instruction: [TEST [1234]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [TEST doesn't like [1234] as input] .
INFO: Running invalid instruction: [TEST {1234}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [TEST doesn't like {1234} as input] .
INFO: Executing invalid instruction: [IFTRUE []]
PASS: Running [IFTRUE []] set error code to 25 , as expected.
INFO: ITEM 2 ERROR output [IFTRUE without TEST] .
INFO: Executing invalid instruction: [IFFALSE []]
PASS: Running [IFFALSE []] set error code to 25 , as expected.
INFO: ITEM 2 ERROR output [IFFALSE without TEST] .
INFO: Executing invalid instruction: [(IFTRUE)]
PASS: Running [(IFTRUE)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to IFTRUE] .
INFO: Executing invalid instruction: [(IFTRUE [] "toomany)]
PASS: Running [(IFTRUE [] "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [IFTRUE {1234}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [IFTRUE doesn't like {1234} as input] .
INFO: Executing invalid instruction: [(IFFALSE)]
PASS: Running [(IFFALSE)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to IFFALSE] .
INFO: Executing invalid instruction: [(IFFALSE [] "toomany)]
PASS: Running [(IFFALSE [] "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [IFFALSE {1234}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [IFFALSE doesn't like {1234} as input] .
CALL: TEST "TRUE
INFO: Executing invalid instruction: [IFTRUE []]
PASS: Running [IFTRUE []] set error code to 25 , as expected.
INFO: ITEM 2 ERROR output [IFTRUE without TEST] .
INFO: Executing invalid instruction: [IFFALSE []]
PASS: Running [IFFALSE []] set error code to 25 , as expected.
INFO: ITEM 2 ERROR output [IFFALSE without TEST] .
INFO: executing regression test for bug #1383281
PASS: Bug #1382181 is fixed. 'FOREACH [1] [[] []] ' did not crash.
PASS: Bug #1448155 is fixed. 'IF' used the IF->IFELSE mapping.
PASS: [ACTIVEAREA] returned [0 100 200 300] , as expected.
PASS: [ACTIVEAREA] returned [0 0 200 200] , as expected.
PASS: [ACTIVEAREA] returned [-100 -100 100 100] , as expected.
PASS: [ACTIVEAREA] returned [-500 -500 500 500] , as expected.
PASS: [ACTIVEAREA] returned [-500 -500 500 500] , as expected.
INFO: Executing invalid instruction: [(SETACTIVEAREA)]
PASS: Running [(SETACTIVEAREA)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to SETACTIVEAREA] .
INFO: Executing invalid instruction: [(SETACTIVEAREA 0 0)]
PASS: Running [(SETACTIVEAREA 0 0)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Executing invalid instruction: [(SETACTIVEAREA 0 0 50)]
PASS: Running [(SETACTIVEAREA 0 0 50)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Executing invalid instruction: [(SETACTIVEAREA 0 0 50 50)]
PASS: Running [(SETACTIVEAREA 0 0 50 50)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [(SETACTIVEAREA [0] )]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETACTIVEAREA doesn't like [0] as input] .
INFO: Running invalid instruction: [(SETACTIVEAREA [0 0] )]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETACTIVEAREA doesn't like [0 0] as input] .
INFO: Running invalid instruction: [(SETACTIVEAREA [0 0 50] )]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETACTIVEAREA doesn't like [0 0 50] as input] .
INFO: Running invalid instruction: [(SETACTIVEAREA [0 0 50 50 50] )]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETACTIVEAREA doesn't like [0 0 50 50 50] as input] .
INFO: Running invalid instruction: [SETACTIVEAREA 0]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETACTIVEAREA doesn't like 0 as input] .
INFO: Running invalid instruction: [SETACTIVEAREA "0,0,50,50]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETACTIVEAREA doesn't like 0,0,50,50 as input] .
INFO: Running invalid instruction: [SETACTIVEAREA {0 0 50 50}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETACTIVEAREA doesn't like {0 0 50 50} as input] .
INFO: Running invalid instruction: [SETACTIVEAREA [zero 0 50 50]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETACTIVEAREA doesn't like [zero 0 50 50] as input] .
INFO: Running invalid instruction: [SETACTIVEAREA [[0] 0 50 50]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETACTIVEAREA doesn't like [[0] 0 50 50] as input] .
INFO: Running invalid instruction: [SETACTIVEAREA [{0} 0 50 50]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETACTIVEAREA doesn't like [{0} 0 50 50] as input] .
INFO: Running invalid instruction: [SETACTIVEAREA [0 zero 50 50]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETACTIVEAREA doesn't like [0 zero 50 50] as input] .
INFO: Running invalid instruction: [SETACTIVEAREA [0 [0] 50 50]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETACTIVEAREA doesn't like [0 [0] 50 50] as input] .
INFO: Running invalid instruction: [SETACTIVEAREA [0 {0} 50 50]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETACTIVEAREA doesn't like [0 {0} 50 50] as input] .
INFO: Running invalid instruction: [SETACTIVEAREA [0 0 fifty 50]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETACTIVEAREA doesn't like [0 0 fifty 50] as input] .
INFO: Running invalid instruction: [SETACTIVEAREA [0 0 [50] 50]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETACTIVEAREA doesn't like [0 0 [50] 50] as input] .
INFO: Running invalid instruction: [SETACTIVEAREA [0 0 {50} 50]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETACTIVEAREA doesn't like [0 0 {50} 50] as input] .
INFO: Running invalid instruction: [SETACTIVEAREA [0 0 50 fifty]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETACTIVEAREA doesn't like [0 0 50 fifty] as input] .
INFO: Running invalid instruction: [SETACTIVEAREA [0 0 50 [50]]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETACTIVEAREA doesn't like [0 0 50 [50]] as input] .
INFO: Running invalid instruction: [SETACTIVEAREA [0 0 50 {50}]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETACTIVEAREA doesn't like [0 0 50 {50}] as input] .
INFO: Running invalid instruction: [SETACTIVEAREA [0 0 -50 50]]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
INFO: Running invalid instruction: [SETACTIVEAREA [0 0 50 -50]]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
INFO: Running invalid instruction: [SETACTIVEAREA [0 0 50 -50]]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
INFO: Running invalid instruction: [SETACTIVEAREA [0 0 0 0]]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
INFO: Executing invalid instruction: [(ACTIVEAREA "toomany)]
PASS: Running [(ACTIVEAREA "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
PASS: Size is [100 100] , as expected.
PASS: Size is [100 101] , as expected.
PASS: Size is [101 100] , as expected.
PASS: The bitpaste was drawn correctly
CALL: SETBITINDEX 1
CALL: BITCUT 100 100
INFO: Executing invalid instruction: [(BITPASTETOINDEX 1 0)]
PASS: Running [(BITPASTETOINDEX 1 0)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to BITPASTETOINDEX] .
INFO: Executing invalid instruction: [(BITPASTETOINDEX 1 0 0 "toomany)]
PASS: Running [(BITPASTETOINDEX 1 0 0 "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [BITPASTETOINDEX 1024 0 0]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
INFO: Running invalid instruction: [BITPASTETOINDEX -1 0 0]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
INFO: Running invalid instruction: [BITPASTETOINDEX 1.5 0 0]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
INFO: Running invalid instruction: [BITPASTETOINDEX [1] 0 0]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
INFO: Running invalid instruction: [BITPASTETOINDEX {1} 0 0]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
INFO: Running invalid instruction: [BITPASTETOINDEX 1 1.5 0]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [BITPASTETOINDEX doesn't like 1.5 as input] .
INFO: Running invalid instruction: [BITPASTETOINDEX 1 [0] 0]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [BITPASTETOINDEX doesn't like [0] as input] .
INFO: Running invalid instruction: [BITPASTETOINDEX 1 {0} 0]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [BITPASTETOINDEX doesn't like {0} as input] .
INFO: Running invalid instruction: [BITPASTETOINDEX 1 "one 0]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [BITPASTETOINDEX doesn't like one as input] .
INFO: Running invalid instruction: [BITPASTETOINDEX 1 0 1.5]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [BITPASTETOINDEX doesn't like 1.5 as input] .
INFO: Running invalid instruction: [BITPASTETOINDEX 1 0 [0]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [BITPASTETOINDEX doesn't like [0] as input] .
INFO: Running invalid instruction: [BITPASTETOINDEX 1 0 {0}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [BITPASTETOINDEX doesn't like {0} as input] .
INFO: Running invalid instruction: [BITPASTETOINDEX 1 0 "one]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [BITPASTETOINDEX doesn't like one as input] .
CALL: SETSCREENCOLOR 3
CALL: SETPENCOLOR 4
CALL: CLEARSCREEN
CALL: REPEAT 3 [FORWARD 20 RIGHT 120]
CALL: SETBITINDEX :sprite
CALL: BITCUT 25 25
CALL: SETBITINDEX :background
CALL: SETPENCOLOR 1
CALL: REPEAT 20 [CIRCLE2 100 RIGHT 18]
CALL: BITCUT 100 100
CALL: SETBITINDEX :backbuffer
CALL: BITCUT 100 100
CALL: SETSCREENCOLOR 5
CALL: HIDETURTLE
CALL: SETBITINDEX :background
CALL: BITPASTETOINDEX :backbuffer 0 0
CALL: SETBITINDEX :sprite
CALL: BITPASTETOINDEX :backbuffer 50 (10 - REPCOUNT) * 10
CALL: BITPASTETOINDEX :backbuffer (REPCOUNT - 2) * 10 0
CALL: SETBITINDEX :backbuffer
CALL: BITPASTE
CALL: WAIT 10
CALL: SETBITINDEX :background
CALL: BITPASTETOINDEX :backbuffer 0 0
CALL: SETBITINDEX :sprite
CALL: BITPASTETOINDEX :backbuffer 50 (10 - REPCOUNT) * 10
CALL: BITPASTETOINDEX :backbuffer (REPCOUNT - 2) * 10 0
CALL: SETBITINDEX :backbuffer
CALL: BITPASTE
CALL: WAIT 10
CALL: SETBITINDEX :background
CALL: BITPASTETOINDEX :backbuffer 0 0
CALL: SETBITINDEX :sprite
CALL: BITPASTETOINDEX :backbuffer 50 (10 - REPCOUNT) * 10
CALL: BITPASTETOINDEX :backbuffer (REPCOUNT - 2) * 10 0
CALL: SETBITINDEX :backbuffer
CALL: BITPASTE
CALL: WAIT 10
CALL: SETBITINDEX :background
CALL: BITPASTETOINDEX :backbuffer 0 0
CALL: SETBITINDEX :sprite
CALL: BITPASTETOINDEX :backbuffer 50 (10 - REPCOUNT) * 10
CALL: BITPASTETOINDEX :backbuffer (REPCOUNT - 2) * 10 0
CALL: SETBITINDEX :backbuffer
CALL: BITPASTE
CALL: WAIT 10
CALL: SETBITINDEX :background
CALL: BITPASTETOINDEX :backbuffer 0 0
CALL: SETBITINDEX :sprite
CALL: BITPASTETOINDEX :backbuffer 50 (10 - REPCOUNT) * 10
CALL: BITPASTETOINDEX :backbuffer (REPCOUNT - 2) * 10 0
CALL: SETBITINDEX :backbuffer
CALL: BITPASTE
CALL: WAIT 10
CALL: SETBITINDEX :background
CALL: BITPASTETOINDEX :backbuffer 0 0
CALL: SETBITINDEX :sprite
CALL: BITPASTETOINDEX :backbuffer 50 (10 - REPCOUNT) * 10
CALL: BITPASTETOINDEX :backbuffer (REPCOUNT - 2) * 10 0
CALL: SETBITINDEX :backbuffer
CALL: BITPASTE
CALL: WAIT 10
CALL: SETBITINDEX :background
CALL: BITPASTETOINDEX :backbuffer 0 0
CALL: SETBITINDEX :sprite
CALL: BITPASTETOINDEX :backbuffer 50 (10 - REPCOUNT) * 10
CALL: BITPASTETOINDEX :backbuffer (REPCOUNT - 2) * 10 0
CALL: SETBITINDEX :backbuffer
CALL: BITPASTE
CALL: WAIT 10
CALL: SETBITINDEX :background
CALL: BITPASTETOINDEX :backbuffer 0 0
CALL: SETBITINDEX :sprite
CALL: BITPASTETOINDEX :backbuffer 50 (10 - REPCOUNT) * 10
CALL: BITPASTETOINDEX :backbuffer (REPCOUNT - 2) * 10 0
CALL: SETBITINDEX :backbuffer
CALL: BITPASTE
CALL: WAIT 10
CALL: SETBITINDEX :background
CALL: BITPASTETOINDEX :backbuffer 0 0
CALL: SETBITINDEX :sprite
CALL: BITPASTETOINDEX :backbuffer 50 (10 - REPCOUNT) * 10
CALL: BITPASTETOINDEX :backbuffer (REPCOUNT - 2) * 10 0
CALL: SETBITINDEX :backbuffer
CALL: BITPASTE
CALL: WAIT 10
CALL: SETBITINDEX :background
CALL: BITPASTETOINDEX :backbuffer 0 0
CALL: SETBITINDEX :sprite
CALL: BITPASTETOINDEX :backbuffer 50 (10 - REPCOUNT) * 10
CALL: BITPASTETOINDEX :backbuffer (REPCOUNT - 2) * 10 0
CALL: SETBITINDEX :backbuffer
CALL: BITPASTE
CALL: WAIT 10
CALL: SETBITINDEX :background
CALL: BITPASTETOINDEX :backbuffer 0 0
CALL: SETBITINDEX :sprite
CALL: BITPASTETOINDEX :backbuffer 50 (10 - REPCOUNT) * 10
CALL: BITPASTETOINDEX :backbuffer (REPCOUNT - 2) * 10 0
CALL: SETBITINDEX :backbuffer
CALL: BITPASTE
CALL: WAIT 10
CALL: SETBITINDEX :background
CALL: BITPASTETOINDEX :backbuffer 0 0
CALL: SETBITINDEX :sprite
CALL: BITPASTETOINDEX :backbuffer 50 (10 - REPCOUNT) * 10
CALL: BITPASTETOINDEX :backbuffer (REPCOUNT - 2) * 10 0
CALL: SETBITINDEX :backbuffer
CALL: BITPASTE
CALL: WAIT 10
CALL: SHOWTURTLE
PASS: [FORM 123.1 10 10] returned 123.1000000000 , as expected.
INFO: Running invalid instruction: [FORM "string 10 10]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [FORM doesn't like string as input] .
INFO: Running invalid instruction: [FORM 123.1 12.3 10]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [FORM doesn't like 12.3 as input] .
INFO: Running invalid instruction: [FORM 123.1 10 12.3]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [FORM doesn't like 12.3 as input] .
INFO: Executing invalid instruction: [(FORM)]
PASS: Running [(FORM)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to FORM] .
INFO: Executing invalid instruction: [(FORM 123.1)]
PASS: Running [(FORM 123.1)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to FORM] .
INFO: Executing invalid instruction: [(FORM 123.1 10)]
PASS: Running [(FORM 123.1 10)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to FORM] .
INFO: Executing invalid instruction: [(FORM 123.1 10 10 10)]
PASS: Running [(FORM 123.1 10 10 10)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
PASS: 'FORM 123.1 10000 10' did not crash
PASS: 'FORM 123.1 10 10000' did not crash
INFO: Running invalid instruction: [FORM -1 -1 "%s%s]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [FORM doesn't like -1 as input] .
PASS: 'FORM -1 -1 "%s%s' did not crash
CALL: PRINT :longlist
FAIL: The editor window did not popup
PASS: The editor saved the values of all 10000 variables
CALL: WINDOWFILEEDIT :longfilename (LIST "REPORTTESTPASSED [WINDOWFILEEDIT did not crash on a long filename] "ERASEFILE QUOTED :longfilename )
PASS: INPORT did not crash
INFO: Executing invalid instruction: [(INPORT)]
PASS: Running [(INPORT)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to INPORT] .
INFO: Running invalid instruction: [INPORT [192]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [INPORT doesn't like [192] as input] .
INFO: Running invalid instruction: [INPORT -1]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [INPORT doesn't like -1 as input] .
INFO: Running invalid instruction: [INPORT {}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [INPORT doesn't like {} as input] .
INFO: Running invalid instruction: [INPORT "hello]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [INPORT doesn't like hello as input] .
INFO: Executing invalid instruction: [(INPORT "198 "toomany)]
PASS: Running [(INPORT "198 "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
PASS: INPORTB did not crash
INFO: Executing invalid instruction: [(INPORTB)]
PASS: Running [(INPORTB)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to INPORTB] .
INFO: Running invalid instruction: [INPORTB [192]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [INPORTB doesn't like [192] as input] .
INFO: Running invalid instruction: [INPORTB -1]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [INPORTB doesn't like -1 as input] .
INFO: Running invalid instruction: [INPORTB {}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [INPORTB doesn't like {} as input] .
INFO: Running invalid instruction: [INPORTB "hello]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [INPORTB doesn't like hello as input] .
INFO: Executing invalid instruction: [(INPORTB "198 "toomany)]
PASS: Running [(INPORTB "198 "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
PASS: OUTPORT did not crash
INFO: Executing invalid instruction: [(OUTPORT)]
PASS: Running [(OUTPORT)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to OUTPORT] .
INFO: Executing invalid instruction: [(OUTPORT 192)]
PASS: Running [(OUTPORT 192)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to OUTPORT] .
INFO: Running invalid instruction: [OUTPORT [192] 0]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [OUTPORT doesn't like [192] as input] .
INFO: Running invalid instruction: [OUTPORT -1 0]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [OUTPORT doesn't like -1 as input] .
INFO: Running invalid instruction: [OUTPORT {} 0]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [OUTPORT doesn't like {} as input] .
INFO: Running invalid instruction: [OUTPORT "hello 0]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [OUTPORT doesn't like hello as input] .
INFO: Executing invalid instruction: [(OUTPORT 198 0 "toomany)]
PASS: Running [(OUTPORT 198 0 "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
PASS: OUTPORTB did not crash
INFO: Executing invalid instruction: [(OUTPORTB)]
PASS: Running [(OUTPORTB)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to OUTPORTB] .
INFO: Executing invalid instruction: [(OUTPORTB 192)]
PASS: Running [(OUTPORTB 192)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to OUTPORTB] .
INFO: Running invalid instruction: [OUTPORTB [192] 0]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [OUTPORTB doesn't like [192] as input] .
INFO: Running invalid instruction: [OUTPORTB -1 0]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [OUTPORTB doesn't like -1 as input] .
INFO: Running invalid instruction: [OUTPORTB {} 0]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [OUTPORTB doesn't like {} as input] .
INFO: Running invalid instruction: [OUTPORTB "hello 0]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [OUTPORTB doesn't like hello as input] .
INFO: Executing invalid instruction: [(OUTPORTB 198 0 "toomany)]
PASS: Running [(OUTPORTB 198 0 "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
PASS: [MEMBER? [System] FONTFACENAMES] returned true , as expected.
INFO: Executing invalid instruction: [(FONTFACENAMES "toomany)]
PASS: Running [(FONTFACENAMES "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
PASS: The font circle was drawn correctly
INFO: Executing invalid instruction: [(LABEL)]
PASS: Running [(LABEL)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to LABEL] .
INFO: Executing invalid instruction: [(LABEL 1 1)]
PASS: Running [(LABEL 1 1)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [SETLABELFONT "Courier]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETLABELFONT doesn't like Courier as input] .
INFO: Running invalid instruction: [SETLABELFONT 1.1]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETLABELFONT doesn't like 1.1 as input] .
INFO: Running invalid instruction: [SETLABELFONT {0}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETLABELFONT doesn't like {0} as input] .
INFO: Running invalid instruction: [SETLABELFONT [[Arial] bad 0 0 400 0 0 0 0 0 0 0 0]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETLABELFONT doesn't like bad as input] .
INFO: Running invalid instruction: [SETLABELFONT [[Arial] 24 bad 0 400 0 0 0 0 0 0 0 0]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETLABELFONT doesn't like bad as input] .
INFO: Running invalid instruction: [SETLABELFONT [[Arial] 24 0 bad 400 0 0 0 0 0 0 0 0]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETLABELFONT doesn't like bad as input] .
INFO: Running invalid instruction: [SETLABELFONT [[Arial] 24 0 0 bad 0 0 0 0 0 0 0 0]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETLABELFONT doesn't like bad as input] .
INFO: Running invalid instruction: [SETLABELFONT [[Arial] 24 0 0 400 bad 0 0 0 0 0 0 0]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETLABELFONT doesn't like bad as input] .
INFO: Running invalid instruction: [SETLABELFONT [[Arial] 24 0 0 400 0 bad 0 0 0 0 0 0]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETLABELFONT doesn't like bad as input] .
INFO: Running invalid instruction: [SETLABELFONT [[Arial] 24 0 0 400 0 0 bad 0 0 0 0 0]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETLABELFONT doesn't like bad as input] .
INFO: Running invalid instruction: [SETLABELFONT [[Arial] 24 0 0 400 0 0 0 bad 0 0 0 0]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETLABELFONT doesn't like bad as input] .
INFO: Running invalid instruction: [SETLABELFONT [[Arial] 24 0 0 400 0 0 0 0 bad 0 0 0]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETLABELFONT doesn't like bad as input] .
INFO: Running invalid instruction: [SETLABELFONT [[Arial] 24 0 0 400 0 0 0 0 0 bad 0 0]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETLABELFONT doesn't like bad as input] .
INFO: Running invalid instruction: [SETLABELFONT [[Arial] 24 0 0 400 0 0 0 0 0 0 bad 0]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETLABELFONT doesn't like bad as input] .
INFO: Running invalid instruction: [SETLABELFONT [[Arial] 24 0 0 400 0 0 0 0 0 0 0 bad]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETLABELFONT doesn't like bad as input] .
INFO: Executing invalid instruction: [(SETLABELFONT)]
PASS: Running [(SETLABELFONT)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to SETLABELFONT] .
INFO: Executing invalid instruction: [(SETLABELFONT [[Arial]] "toomany)]
PASS: Running [(SETLABELFONT [[Arial]] "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Testing that SETLABELFONT doesn't modify its input list on error
INFO: Now comparing the original instruction to the one that was used
FAIL: [[SETLABELFONT [[Arial] 24 0 0 400 0 0 bad 0 0 0 0 0]] = [SETLABELFONT [[Arial] 24 0 0 400 0 0 Unbound 0 0 0 0 0]]] returned false . We expected true
PASS: [PENDOWNP] returned true , as expected.
PASS: [PENDOWN?] returned true , as expected.
PASS: [ITEM 1 PEN] returned pendown , as expected.
PASS: [PENDOWN?] returned false , as expected.
PASS: [ITEM 1 PEN] returned penup , as expected.
INFO: Executing invalid instruction: [(PENDOWN "toomany)]
PASS: Running [(PENDOWN "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Executing invalid instruction: [(PENUP "toomany)]
PASS: Running [(PENUP "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Executing invalid instruction: [(PENDOWN? "toomany)]
PASS: Running [(PENDOWN? "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
PASS: [PENMODE] returned paint , as expected.
PASS: [ITEM 2 PEN] returned paint , as expected.
PASS: [PENDOWN?] returned true , as expected.
PASS: [PENMODE] returned erase , as expected.
PASS: [ITEM 2 PEN] returned erase , as expected.
PASS: [PENDOWN?] returned true , as expected.
PASS: [PENMODE] returned reverse , as expected.
PASS: [ITEM 2 PEN] returned reverse , as expected.
PASS: [PENDOWN?] returned true , as expected.
PASS: [PENMODE] returned paint , as expected.
PASS: [ITEM 2 PEN] returned paint , as expected.
PASS: [PENDOWN?] returned true , as expected.
PASS: [PENMODE] returned erase , as expected.
PASS: [ITEM 2 PEN] returned erase , as expected.
PASS: [PENDOWN?] returned true , as expected.
PASS: [PENMODE] returned reverse , as expected.
PASS: [ITEM 2 PEN] returned reverse , as expected.
PASS: [PENDOWN?] returned true , as expected.
INFO: Executing invalid instruction: [(ARC)]
PASS: Running [(ARC)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to ARC] .
INFO: Executing invalid instruction: [(ARC 10)]
PASS: Running [(ARC 10)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to ARC] .
INFO: Executing invalid instruction: [(ARC 10 10 10)]
PASS: Running [(ARC 10 10 10)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [ARC [10] 10]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [ellipsearc doesn't like [10] as input] .
INFO: Running invalid instruction: [ARC {10} 10]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [ellipsearc doesn't like {10} as input] .
INFO: Running invalid instruction: [ARC 10 [10]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [ellipsearc doesn't like [10] as input] .
INFO: Running invalid instruction: [ARC 10 {10}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [ellipsearc doesn't like {10} as input] .
INFO: executing regression test for bug #1388325
PASS: "bug #1388325 is fixed; 'ELLIPSEARC 1e20 50 50 0' did not crash.
PASS: WINDOWFILEEDIT did not crash on a long filename
PASS: The circle was drawn correctly
PASS: (FILL "true) worked as expected
INFO: Running invalid instruction: [(FILL 10)]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [FILL doesn't like 10 as input] .
INFO: Running invalid instruction: [(FILL ["true] )]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [FILL doesn't like ["true] as input] .
INFO: Executing invalid instruction: [(FILL "true "toomany)]
PASS: Running [(FILL "true "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
PASS: [WRITER] returned smoketest.txt , as expected.
PASS: [WRITEPOS] returned 0 , as expected.
PASS: [WRITEPOS] returned 7 , as expected.
PASS: [WRITEPOS] returned 17 , as expected.
PASS: [WRITER] returned [] , as expected.
PASS: [READER] returned smoketest.txt , as expected.
PASS: [READPOS] returned 0 , as expected.
PASS: [EOFP] returned false , as expected.
PASS: [READLIST] returned [Hello] , as expected.
PASS: [READPOS] returned 7 , as expected.
PASS: [EOFP] returned false , as expected.
PASS: [READLIST] returned [Good Bye] , as expected.
PASS: [READPOS] returned 17 , as expected.
PASS: [EOFP] returned true , as expected.
PASS: [READER] returned [] , as expected.
PASS: [READLIST] returned [Hello] , as expected.
PASS: [READLIST] returned [Hello] , as expected.
PASS: [READLIST] returned [Jello] , as expected.
CALL: OPENWRITE :filename1
CALL: OPENWRITE :filename2
PASS: [MEMBERP :filename1 ALLOPEN] returned true , as expected.
PASS: [MEMBERP :filename2 ALLOPEN] returned true , as expected.
CALL: CLOSE :filename1
CALL: CLOSE :filename2
PASS: [MEMBERP :filename1 ALLOPEN] returned false , as expected.
PASS: [MEMBERP :filename2 ALLOPEN] returned false , as expected.
PASS: [READLIST] returned [Hello] , as expected.
PASS: [READLIST] returned [Good Bye] , as expected.
INFO: Running invalid instruction: [OPENREAD :filename]
INFO: ITEM 1 ERROR output 18 .
INFO: ITEM 2 ERROR output [File system error: I can't open that file] .
PASS: [READLIST] returned [Hello] , as expected.
PASS: [READLIST] returned [Hello] , as expected.
PASS: [READLIST] returned [And how are you today] , as expected.
PASS: [READLIST] returned [Hello] , as expected.
PASS: [READLIST] returned [Good Bye] , as expected.
PASS: [MEMBERP "mytestfile FILES] returned true , as expected.
PASS: [MEMBERP "mytestfile FILES] returned false , as expected.
PASS: [MEMBERP "mytestdir DIRECTORIES] returned true , as expected.
INFO: Running invalid instruction: [OPENREAD "mytestfile]
INFO: ITEM 1 ERROR output 18 .
INFO: ITEM 2 ERROR output [File system error: File already open] .
INFO: Running invalid instruction: [OPENWRITE "mytestfile]
INFO: ITEM 1 ERROR output 18 .
INFO: ITEM 2 ERROR output [File system error: File already open] .
INFO: Running invalid instruction: [OPENAPPEND "mytestfile]
INFO: ITEM 1 ERROR output 18 .
INFO: ITEM 2 ERROR output [File system error: File already open] .
INFO: Running invalid instruction: [OPENUPDATE "mytestfile]
INFO: ITEM 1 ERROR output 18 .
INFO: ITEM 2 ERROR output [File system error: File already open] .
INFO: Running invalid instruction: [OPENREAD "mytestfile]
INFO: ITEM 1 ERROR output 18 .
INFO: ITEM 2 ERROR output [File system error: File already open] .
INFO: Running invalid instruction: [OPENWRITE "mytestfile]
INFO: ITEM 1 ERROR output 18 .
INFO: ITEM 2 ERROR output [File system error: File already open] .
INFO: Running invalid instruction: [OPENAPPEND "mytestfile]
INFO: ITEM 1 ERROR output 18 .
INFO: ITEM 2 ERROR output [File system error: File already open] .
INFO: Running invalid instruction: [OPENUPDATE "mytestfile]
INFO: ITEM 1 ERROR output 18 .
INFO: ITEM 2 ERROR output [File system error: File already open] .
PASS: [MEMBERP "mytestfile FILES] returned false , as expected.
INFO: Running invalid instruction: [OPENREAD "testdir]
INFO: ITEM 1 ERROR output 18 .
INFO: ITEM 2 ERROR output [File system error: I can't open that file] .
INFO: Running invalid instruction: [OPENWRITE "testdir]
INFO: ITEM 1 ERROR output 18 .
INFO: ITEM 2 ERROR output [File system error: I can't open that file] .
INFO: Running invalid instruction: [OPENAPPEND "testdir]
INFO: ITEM 1 ERROR output 18 .
INFO: ITEM 2 ERROR output [File system error: I can't open that file] .
INFO: Running invalid instruction: [OPENUPDATE "testdir]
INFO: ITEM 1 ERROR output 18 .
INFO: ITEM 2 ERROR output [File system error: I can't open that file] .
PASS: [MEMBERP "mytestfile DIRECTORIES] returned false , as expected.
INFO: Running invalid instruction: [(OPENREAD "testfile.txt 1)]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [OPENREAD doesn't like 1 as input] .
INFO: Running invalid instruction: [(OPENWRITE "testfile.txt 1)]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [OPENWRITE doesn't like 1 as input] .
INFO: Running invalid instruction: [(OPENAPPEND "testfile.txt 1)]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [OPENAPPEND doesn't like 1 as input] .
INFO: Running invalid instruction: [(OPENUPDATE "testfile.txt 1)]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [OPENUPDATE doesn't like 1 as input] .
INFO: Executing invalid instruction: [(OPENREAD)]
PASS: Running [(OPENREAD)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to OPENREAD] .
INFO: Executing invalid instruction: [(OPENWRITE)]
PASS: Running [(OPENWRITE)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to OPENWRITE] .
INFO: Executing invalid instruction: [(OPENAPPEND)]
PASS: Running [(OPENAPPEND)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to OPENAPPEND] .
INFO: Executing invalid instruction: [(OPENUPDATE)]
PASS: Running [(OPENUPDATE)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to OPENUPDATE] .
INFO: Executing invalid instruction: [(OPENREAD "testfile.txt "true "toomany)]
PASS: Running [(OPENREAD "testfile.txt "true "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Executing invalid instruction: [(OPENWRITE "testfile.txt "true "toomany)]
PASS: Running [(OPENWRITE "testfile.txt "true "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Executing invalid instruction: [(OPENAPPEND "testfile.txt "true "toomany)]
PASS: Running [(OPENAPPEND "testfile.txt "true "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Executing invalid instruction: [(OPENUPDATE "testfile.txt "true "toomany)]
PASS: Running [(OPENUPDATE "testfile.txt "true "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [OPENREAD :longfilename]
INFO: ITEM 1 ERROR output 18 .
INFO: ITEM 2 ERROR output [File system error: I can't open that file] .
INFO: Running invalid instruction: [OPENWRITE :longfilename]
INFO: ITEM 1 ERROR output 18 .
INFO: ITEM 2 ERROR output [File system error: I can't open that file] .
INFO: Running invalid instruction: [OPENAPPEND :longfilename]
INFO: ITEM 1 ERROR output 18 .
INFO: ITEM 2 ERROR output [File system error: I can't open that file] .
INFO: Running invalid instruction: [OPENUPDATE :longfilename]
INFO: ITEM 1 ERROR output 18 .
INFO: ITEM 2 ERROR output [File system error: I can't open that file] .
INFO: Running invalid instruction: [CLOSE :longfilename]
INFO: ITEM 1 ERROR output 18 .
INFO: ITEM 2 ERROR output [File system error: File not open] .
INFO: Running invalid instruction: [CLOSE "nonexistent.txt]
INFO: ITEM 1 ERROR output 18 .
INFO: ITEM 2 ERROR output [File system error: File not open] .
INFO: Executing invalid instruction: [(CLOSE)]
PASS: Running [(CLOSE)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to CLOSE] .
INFO: Executing invalid instruction: [(CLOSE "testfile.txt "many)]
PASS: Running [(CLOSE "testfile.txt "many)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Executing invalid instruction: [(ERASEFILE)]
PASS: Running [(ERASEFILE)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to ERASEFILE] .
INFO: Executing invalid instruction: [(ERASEFILE "too "many)]
PASS: Running [(ERASEFILE "too "many)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Executing invalid instruction: [(CLOSEALL "toomany)]
PASS: Running [(CLOSEALL "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Executing invalid instruction: [(ALLOPEN "toomany)]
PASS: Running [(ALLOPEN "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
PASS: [PENCOLOR] returned 0 , as expected.
PASS: [PENCOLOR] returned 15 , as expected.
PASS: [PENCOLOR] returned 7 , as expected.
PASS: [PENCOLOR] returned 1 , as expected.
PASS: [PENCOLOR] returned [128 64 32] , as expected.
PASS: [PENCOLOR] returned [128 64 32] , as expected.
PASS: [PENCOLOR] returned [255 255 255] , as expected.
INFO: Running invalid instruction: [SETPENCOLOR {}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETPENCOLOR doesn't like {} as input] .
INFO: Running invalid instruction: [SETPENCOLOR [0]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETPENCOLOR doesn't like [0] as input] .
INFO: Running invalid instruction: [SETPENCOLOR [0 0]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETPENCOLOR doesn't like [0 0] as input] .
INFO: Running invalid instruction: [SETPENCOLOR [0 0 0 0]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETPENCOLOR doesn't like [0 0 0 0] as input] .
INFO: Executing invalid instruction: [( SETPENCOLOR )]
PASS: Running [( SETPENCOLOR )] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to SETPENCOLOR] .
INFO: Executing invalid instruction: [( SETPENCOLOR 0 0 )]
PASS: Running [( SETPENCOLOR 0 0 )] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
PASS: [PENCOLOUR] returned 0 , as expected.
PASS: [PENCOLOUR] returned 15 , as expected.
PASS: [PENCOLOUR] returned 7 , as expected.
PASS: [PENCOLOUR] returned 1 , as expected.
PASS: [PENCOLOUR] returned [128 64 32] , as expected.
PASS: [PENCOLOUR] returned [128 64 32] , as expected.
PASS: [PENCOLOUR] returned [255 255 255] , as expected.
INFO: Running invalid instruction: [SETPENCOLOUR {}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETPENCOLOUR doesn't like {} as input] .
INFO: Running invalid instruction: [SETPENCOLOUR [0]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETPENCOLOUR doesn't like [0] as input] .
INFO: Running invalid instruction: [SETPENCOLOUR [0 0]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETPENCOLOUR doesn't like [0 0] as input] .
INFO: Running invalid instruction: [SETPENCOLOUR [0 0 0 0]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETPENCOLOUR doesn't like [0 0 0 0] as input] .
INFO: Executing invalid instruction: [( SETPENCOLOUR )]
PASS: Running [( SETPENCOLOUR )] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to SETPENCOLOUR] .
INFO: Executing invalid instruction: [( SETPENCOLOUR 0 0 )]
PASS: Running [( SETPENCOLOUR 0 0 )] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
PASS: [PENCOLOR] returned 0 , as expected.
PASS: [PENCOLOR] returned 15 , as expected.
PASS: [PENCOLOR] returned 7 , as expected.
PASS: [PENCOLOR] returned 1 , as expected.
PASS: [PENCOLOR] returned [128 64 32] , as expected.
PASS: [PENCOLOR] returned [128 64 32] , as expected.
PASS: [PENCOLOR] returned [255 255 255] , as expected.
INFO: Running invalid instruction: [SETPC {}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETPC doesn't like {} as input] .
INFO: Running invalid instruction: [SETPC [0]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETPC doesn't like [0] as input] .
INFO: Running invalid instruction: [SETPC [0 0]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETPC doesn't like [0 0] as input] .
INFO: Running invalid instruction: [SETPC [0 0 0 0]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETPC doesn't like [0 0 0 0] as input] .
INFO: Executing invalid instruction: [( SETPC )]
PASS: Running [( SETPC )] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to SETPC] .
INFO: Executing invalid instruction: [( SETPC 0 0 )]
PASS: Running [( SETPC 0 0 )] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
PASS: [FLOODCOLOR] returned 0 , as expected.
PASS: [FLOODCOLOR] returned 15 , as expected.
PASS: [FLOODCOLOR] returned 7 , as expected.
PASS: [FLOODCOLOR] returned 1 , as expected.
PASS: [FLOODCOLOR] returned [128 64 32] , as expected.
PASS: [FLOODCOLOR] returned [128 64 32] , as expected.
PASS: [FLOODCOLOR] returned [255 255 255] , as expected.
INFO: Running invalid instruction: [SETFLOODCOLOR {}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETFLOODCOLOR doesn't like {} as input] .
INFO: Running invalid instruction: [SETFLOODCOLOR [0]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETFLOODCOLOR doesn't like [0] as input] .
INFO: Running invalid instruction: [SETFLOODCOLOR [0 0]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETFLOODCOLOR doesn't like [0 0] as input] .
INFO: Running invalid instruction: [SETFLOODCOLOR [0 0 0 0]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETFLOODCOLOR doesn't like [0 0 0 0] as input] .
INFO: Executing invalid instruction: [( SETFLOODCOLOR )]
PASS: Running [( SETFLOODCOLOR )] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to SETFLOODCOLOR] .
INFO: Executing invalid instruction: [( SETFLOODCOLOR 0 0 )]
PASS: Running [( SETFLOODCOLOR 0 0 )] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
PASS: [FLOODCOLOUR] returned 0 , as expected.
PASS: [FLOODCOLOUR] returned 15 , as expected.
PASS: [FLOODCOLOUR] returned 7 , as expected.
PASS: [FLOODCOLOUR] returned 1 , as expected.
PASS: [FLOODCOLOUR] returned [128 64 32] , as expected.
PASS: [FLOODCOLOUR] returned [128 64 32] , as expected.
PASS: [FLOODCOLOUR] returned [255 255 255] , as expected.
INFO: Running invalid instruction: [SETFLOODCOLOUR {}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETFLOODCOLOUR doesn't like {} as input] .
INFO: Running invalid instruction: [SETFLOODCOLOUR [0]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETFLOODCOLOUR doesn't like [0] as input] .
INFO: Running invalid instruction: [SETFLOODCOLOUR [0 0]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETFLOODCOLOUR doesn't like [0 0] as input] .
INFO: Running invalid instruction: [SETFLOODCOLOUR [0 0 0 0]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETFLOODCOLOUR doesn't like [0 0 0 0] as input] .
INFO: Executing invalid instruction: [( SETFLOODCOLOUR )]
PASS: Running [( SETFLOODCOLOUR )] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to SETFLOODCOLOUR] .
INFO: Executing invalid instruction: [( SETFLOODCOLOUR 0 0 )]
PASS: Running [( SETFLOODCOLOUR 0 0 )] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
PASS: [FLOODCOLOR] returned 0 , as expected.
PASS: [FLOODCOLOR] returned 15 , as expected.
PASS: [FLOODCOLOR] returned 7 , as expected.
PASS: [FLOODCOLOR] returned 1 , as expected.
PASS: [FLOODCOLOR] returned [128 64 32] , as expected.
PASS: [FLOODCOLOR] returned [128 64 32] , as expected.
PASS: [FLOODCOLOR] returned [255 255 255] , as expected.
INFO: Running invalid instruction: [SETFC {}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETFC doesn't like {} as input] .
INFO: Running invalid instruction: [SETFC [0]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETFC doesn't like [0] as input] .
INFO: Running invalid instruction: [SETFC [0 0]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETFC doesn't like [0 0] as input] .
INFO: Running invalid instruction: [SETFC [0 0 0 0]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETFC doesn't like [0 0 0 0] as input] .
INFO: Executing invalid instruction: [( SETFC )]
PASS: Running [( SETFC )] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to SETFC] .
INFO: Executing invalid instruction: [( SETFC 0 0 )]
PASS: Running [( SETFC 0 0 )] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
PASS: [SCREENCOLOR] returned 0 , as expected.
PASS: [SCREENCOLOR] returned 15 , as expected.
PASS: [SCREENCOLOR] returned 7 , as expected.
PASS: [SCREENCOLOR] returned 1 , as expected.
PASS: [SCREENCOLOR] returned [128 64 32] , as expected.
PASS: [SCREENCOLOR] returned [128 64 32] , as expected.
PASS: [SCREENCOLOR] returned [255 255 255] , as expected.
INFO: Running invalid instruction: [SETSCREENCOLOR {}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETSCREENCOLOR doesn't like {} as input] .
INFO: Running invalid instruction: [SETSCREENCOLOR [0]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETSCREENCOLOR doesn't like [0] as input] .
INFO: Running invalid instruction: [SETSCREENCOLOR [0 0]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETSCREENCOLOR doesn't like [0 0] as input] .
INFO: Running invalid instruction: [SETSCREENCOLOR [0 0 0 0]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETSCREENCOLOR doesn't like [0 0 0 0] as input] .
INFO: Executing invalid instruction: [( SETSCREENCOLOR )]
PASS: Running [( SETSCREENCOLOR )] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to SETSCREENCOLOR] .
INFO: Executing invalid instruction: [( SETSCREENCOLOR 0 0 )]
PASS: Running [( SETSCREENCOLOR 0 0 )] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
PASS: [SCREENCOLOUR] returned 0 , as expected.
PASS: [SCREENCOLOUR] returned 15 , as expected.
PASS: [SCREENCOLOUR] returned 7 , as expected.
PASS: [SCREENCOLOUR] returned 1 , as expected.
PASS: [SCREENCOLOUR] returned [128 64 32] , as expected.
PASS: [SCREENCOLOUR] returned [128 64 32] , as expected.
PASS: [SCREENCOLOUR] returned [255 255 255] , as expected.
INFO: Running invalid instruction: [SETSCREENCOLOUR {}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETSCREENCOLOUR doesn't like {} as input] .
INFO: Running invalid instruction: [SETSCREENCOLOUR [0]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETSCREENCOLOUR doesn't like [0] as input] .
INFO: Running invalid instruction: [SETSCREENCOLOUR [0 0]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETSCREENCOLOUR doesn't like [0 0] as input] .
INFO: Running invalid instruction: [SETSCREENCOLOUR [0 0 0 0]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETSCREENCOLOUR doesn't like [0 0 0 0] as input] .
INFO: Executing invalid instruction: [( SETSCREENCOLOUR )]
PASS: Running [( SETSCREENCOLOUR )] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to SETSCREENCOLOUR] .
INFO: Executing invalid instruction: [( SETSCREENCOLOUR 0 0 )]
PASS: Running [( SETSCREENCOLOUR 0 0 )] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
PASS: [SCREENCOLOR] returned 0 , as expected.
PASS: [SCREENCOLOR] returned 15 , as expected.
PASS: [SCREENCOLOR] returned 7 , as expected.
PASS: [SCREENCOLOR] returned 1 , as expected.
PASS: [SCREENCOLOR] returned [128 64 32] , as expected.
PASS: [SCREENCOLOR] returned [128 64 32] , as expected.
PASS: [SCREENCOLOR] returned [255 255 255] , as expected.
INFO: Running invalid instruction: [SETSC {}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETSC doesn't like {} as input] .
INFO: Running invalid instruction: [SETSC [0]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETSC doesn't like [0] as input] .
INFO: Running invalid instruction: [SETSC [0 0]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETSC doesn't like [0 0] as input] .
INFO: Running invalid instruction: [SETSC [0 0 0 0]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETSC doesn't like [0 0 0 0] as input] .
INFO: Executing invalid instruction: [( SETSC )]
PASS: Running [( SETSC )] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to SETSC] .
INFO: Executing invalid instruction: [( SETSC 0 0 )]
PASS: Running [( SETSC 0 0 )] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
CALL: SETPENCOLOR (# - 1)
PASS: [PENCOLOR] returned [0 0 0] , as expected.
CALL: SETPENCOLOR (# - 1)
PASS: [PENCOLOR] returned [0 0 255] , as expected.
CALL: SETPENCOLOR (# - 1)
PASS: [PENCOLOR] returned [0 255 0] , as expected.
CALL: SETPENCOLOR (# - 1)
PASS: [PENCOLOR] returned [0 255 255] , as expected.
CALL: SETPENCOLOR (# - 1)
PASS: [PENCOLOR] returned [255 0 0] , as expected.
CALL: SETPENCOLOR (# - 1)
PASS: [PENCOLOR] returned [255 0 255] , as expected.
CALL: SETPENCOLOR (# - 1)
PASS: [PENCOLOR] returned [255 255 0] , as expected.
CALL: SETPENCOLOR (# - 1)
PASS: [PENCOLOR] returned [255 255 255] , as expected.
CALL: SETPENCOLOR (# - 1)
PASS: [PENCOLOR] returned [155 96 59] , as expected.
CALL: SETPENCOLOR (# - 1)
PASS: [PENCOLOR] returned [197 136 18] , as expected.
CALL: SETPENCOLOR (# - 1)
PASS: [PENCOLOR] returned [100 162 64] , as expected.
CALL: SETPENCOLOR (# - 1)
PASS: [PENCOLOR] returned [120 187 187] , as expected.
CALL: SETPENCOLOR (# - 1)
PASS: [PENCOLOR] returned [255 149 119] , as expected.
CALL: SETPENCOLOR (# - 1)
PASS: [PENCOLOR] returned [144 113 208] , as expected.
CALL: SETPENCOLOR (# - 1)
PASS: [PENCOLOR] returned [255 163 0] , as expected.
CALL: SETPENCOLOR (# - 1)
PASS: [PENCOLOR] returned [183 183 183] , as expected.
CALL: SETPENSIZE [10 10]
PASS: [PENSIZE] returned [10 10] , as expected.
CALL: SETPENSIZE [1 1]
PASS: [PENSIZE] returned [1 1] , as expected.
CALL: SETPENSIZE [0 0]
PASS: [PENSIZE] returned [0 0] , as expected.
CALL: SETPENSIZE [1.9 1.9]
PASS: [PENSIZE] returned [1 1] , as expected.
INFO: Executing invalid instruction: [(PENSIZE "toomany)]
PASS: Running [(PENSIZE "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
CALL: SETPENSIZE [11 11]
INFO: Executing invalid instruction: [(SETPENSIZE)]
PASS: Running [(SETPENSIZE)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to SETPENSIZE] .
INFO: Executing invalid instruction: [(SETPENSIZE [5 5] "toomany)]
PASS: Running [(SETPENSIZE [5 5] "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [SETPENSIZE 5]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETPENSIZE doesn't like 5 as input] .
INFO: Running invalid instruction: [SETPENSIZE "5x5]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETPENSIZE doesn't like 5x5 as input] .
INFO: Running invalid instruction: [SETPENSIZE {5 5}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETPENSIZE doesn't like {5 5} as input] .
INFO: Running invalid instruction: [SETPENSIZE [5 5 5]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETPENSIZE doesn't like [5 5 5] as input] .
INFO: Running invalid instruction: [SETPENSIZE [-1 5]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETPENSIZE doesn't like [-1 5] as input] .
INFO: Running invalid instruction: [SETPENSIZE [five 5]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETPENSIZE doesn't like [five 5] as input] .
INFO: Running invalid instruction: [SETPENSIZE [[5] 5]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETPENSIZE doesn't like [[5] 5] as input] .
INFO: Running invalid instruction: [SETPENSIZE [{5} 5]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETPENSIZE doesn't like [{5} 5] as input] .
INFO: Running invalid instruction: [SETPENSIZE [5 -1]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETPENSIZE doesn't like [5 -1] as input] .
INFO: Running invalid instruction: [SETPENSIZE [5 five]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETPENSIZE doesn't like [5 five] as input] .
INFO: Running invalid instruction: [SETPENSIZE [5 [5]]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETPENSIZE doesn't like [5 [5]] as input] .
INFO: Running invalid instruction: [SETPENSIZE [5 {5}]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETPENSIZE doesn't like [5 {5}] as input] .
PASS: [PENSIZE] returned [11 11] , as expected.
CALL: SETPIXEL 5
PASS: [PIXEL] returned 5 , as expected.
CALL: SETPIXEL [255 255 255]
PASS: [PIXEL] returned [255 255 255] , as expected.
CALL: SETPIXEL [255 0 0]
PASS: [PIXEL] returned [255 0 0] , as expected.
CALL: SETPIXEL [0 255 0]
PASS: [PIXEL] returned [0 255 0] , as expected.
CALL: SETPIXEL [0 0 255]
PASS: [PIXEL] returned [0 0 255] , as expected.
CALL: SETPIXEL 5.9
PASS: [PIXEL] returned 5 , as expected.
INFO: Executing invalid instruction: [(SETPIXEL)]
PASS: Running [(SETPIXEL)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to SETPIXEL] .
INFO: Executing invalid instruction: [(SETPIXEL 5 "toomany)]
PASS: Running [(SETPIXEL 5 "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [SETPIXEL "word]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETPIXEL doesn't like word as input] .
INFO: Running invalid instruction: [SETPIXEL [255]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETPIXEL doesn't like [255] as input] .
INFO: Running invalid instruction: [SETPIXEL [255 255]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETPIXEL doesn't like [255 255] as input] .
INFO: Running invalid instruction: [SETPIXEL [255 255 255 255]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETPIXEL doesn't like [255 255 255 255] as input] .
INFO: Running invalid instruction: [SETPIXEL {255 255 255}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETPIXEL doesn't like {255 255 255} as input] .
CALL: SETPENCOLOR 5
CALL: FORWARD 1
CALL: BACK 1
PASS: [PIXEL] returned 5 , as expected.
CALL: SETPENCOLOR [255 255 255]
CALL: FORWARD 1
CALL: BACK 1
PASS: [PIXEL] returned [255 255 255] , as expected.
INFO: Executing invalid instruction: [(PIXEL "toomany)]
PASS: Running [(PIXEL "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [SETTIMER 0 100 [FD 1]]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
INFO: Running invalid instruction: [SETTIMER 32 100 [FD 1]]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
INFO: Running invalid instruction: [SETTIMER 1.5 100 [FD 1]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETTIMER doesn't like 1.5 as input] .
INFO: Running invalid instruction: [SETTIMER "badvalue 100 [FD 1]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETTIMER doesn't like badvalue as input] .
INFO: Running invalid instruction: [SETTIMER [1] 100 [FD 1]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETTIMER doesn't like [1] as input] .
INFO: Running invalid instruction: [SETTIMER {1} 100 [FD 1]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETTIMER doesn't like {1} as input] .
INFO: Running invalid instruction: [SETTIMER 1 -100 [FD 1]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETTIMER doesn't like -100 as input] .
INFO: Running invalid instruction: [SETTIMER 1 100.5 [FD 1]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETTIMER doesn't like 100.5 as input] .
INFO: Running invalid instruction: [SETTIMER 1 [100] [FD 1]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETTIMER doesn't like [100] as input] .
INFO: Running invalid instruction: [SETTIMER 1 "badvalue [FD 1]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETTIMER doesn't like badvalue as input] .
INFO: Running invalid instruction: [SETTIMER 1 {100} [FD 1]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETTIMER doesn't like {100} as input] .
INFO: Executing invalid instruction: [(SETTIMER 1 100)]
PASS: Running [(SETTIMER 1 100)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to SETTIMER] .
INFO: Executing invalid instruction: [(SETTIMER 1 100 [FD 1] "toomany)]
PASS: Running [(SETTIMER 1 100 [FD 1] "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [CLEARTIMER 33]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
INFO: Running invalid instruction: [CLEARTIMER 32]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
INFO: Executing invalid instruction: [(CLEARTIMER)]
PASS: Running [(CLEARTIMER)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to CLEARTIMER] .
INFO: Executing invalid instruction: [(CLEARTIMER 1 "toomany)]
PASS: Running [(CLEARTIMER 1 "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Executing invalid instruction: [(SPLITSCREEN 1)]
PASS: Running [(SPLITSCREEN 1)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Executing invalid instruction: [(TEXTSCREEN 1)]
PASS: Running [(TEXTSCREEN 1)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Executing invalid instruction: [(FULLSCREEN 1)]
PASS: Running [(FULLSCREEN 1)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: [WAIT 0] took 0 ms to execute
PASS: [WAIT 0 ] waited for 0 ms. Anywhere between 0 ms and 20 is acceptable.
INFO: [WAIT 1] took 20 ms to execute
PASS: [WAIT 1 ] waited for 20 ms. Anywhere between 16.6666666666667 ms and 36.6666666666667 is acceptable.
INFO: [WAIT 6] took 100 ms to execute
PASS: [WAIT 6 ] waited for 100 ms. Anywhere between 100 ms and 120 is acceptable.
INFO: [WAIT 10] took 170 ms to execute
PASS: [WAIT 10 ] waited for 170 ms. Anywhere between 166.666666666667 ms and 186.666666666667 is acceptable.
INFO: [WAIT 60] took 1002 ms to execute
PASS: [WAIT 60 ] waited for 1002 ms. Anywhere between 1000 ms and 1020 is acceptable.
INFO: [WAIT 100] took 1672 ms to execute
PASS: [WAIT 100 ] waited for 1672 ms. Anywhere between 1666.66666666667 ms and 1686.66666666667 is acceptable.
INFO: Executing invalid instruction: [(WAIT)]
PASS: Running [(WAIT)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to WAIT] .
INFO: Executing invalid instruction: [(WAIT 10 10)]
PASS: Running [(WAIT 10 10)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [WAIT -1]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [WAIT doesn't like -1 as input] .
INFO: Running invalid instruction: [WAIT "ABC]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [WAIT doesn't like ABC as input] .
INFO: Running invalid instruction: [WAIT [1]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [WAIT doesn't like [1] as input] .
INFO: Running invalid instruction: [WAIT {1}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [WAIT doesn't like {1} as input] .
PASS: [LIST? TIME] returned true , as expected.
PASS: [COUNT TIME] returned 5 , as expected.
INFO: Executing invalid instruction: [(TIME "toomany)]
PASS: Running [(TIME "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
PASS: [SHELL [perl -v]] returned true , as expected.
PASS: [SHELL [doesnotexist.exe]] returned false , as expected.
PASS: [SHELL {1}] returned false , as expected.
PASS: [SHELL 100] returned false , as expected.
INFO: Executing invalid instruction: [(SHELL)]
PASS: Running [(SHELL)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to SHELL] .
INFO: Executing invalid instruction: [(SHELL [perl -v] "toomany)]
PASS: Running [(SHELL [perl -v] "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
PASS: [FILES] returned [] , as expected.
PASS: [DIRECTORIES] returned [.. .] , as expected.
PASS: [FILES] returned [file1.txt] , as expected.
PASS: [DIRECTORIES] returned [.. .] , as expected.
PASS: [FILES] returned [file2.txt file1.txt] , as expected.
PASS: [DIRECTORIES] returned [.. .] , as expected.
PASS: [FILES] returned [file2.txt file1.txt] , as expected.
PASS: [DIRECTORIES] returned [dir1 .. .] , as expected.
PASS: [FILES] returned [file2.txt file1.txt] , as expected.
PASS: [DIRECTORIES] returned [dir2 dir1 .. .] , as expected.
PASS: [FILES] returned [file2.txt file1.txt] , as expected.
PASS: [DIRECTORIES] returned [dir1 .. .] , as expected.
PASS: [FILES] returned [file2.txt] , as expected.
PASS: [DIRECTORIES] returned [dir1 .. .] , as expected.
PASS: [FILES] returned [] , as expected.
PASS: [DIRECTORIES] returned [.. .] , as expected.
PASS: [MEMBERP "mytestdir DIRECTORIES] returned false , as expected.
INFO: Executing invalid instruction: [(MKDIR)]
PASS: Running [(MKDIR)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to MKDIR] .
INFO: Executing invalid instruction: [(MKDIR "too "many)]
PASS: Running [(MKDIR "too "many)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Executing invalid instruction: [(RMDIR)]
PASS: Running [(RMDIR)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to RMDIR] .
INFO: Executing invalid instruction: [(RMDIR "too "many)]
PASS: Running [(RMDIR "too "many)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Executing invalid instruction: [(CHDIR)]
PASS: Running [(CHDIR)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to CHDIR] .
INFO: Executing invalid instruction: [(CHDIR "too "many)]
PASS: Running [(CHDIR "too "many)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
PASS: [LIST? NODES] returned true , as expected.
PASS: [COUNT NODES] returned 2 , as expected.
PASS: [NUMBER? ITEM 1 NODES] returned true , as expected.
PASS: [NUMBER? ITEM 2 NODES] returned true , as expected.
INFO: Executing invalid instruction: [(NODES "too-many)]
PASS: Running [(NODES "too-many)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
PASS: [BUTTONP] returned false , as expected.
PASS: [BUTTON?] returned false , as expected.
INFO: Executing invalid instruction: [(BUTTON? "too-many)]
PASS: Running [(BUTTON? "too-many)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: executing regression test for bug #1384267
PASS: "bug #1384267 is fixed; turning by a large number in perspective mode did not crash.
INFO: Executing invalid instruction: [(PERSPECTIVE "toomany)]
PASS: Running [(PERSPECTIVE "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Calling SETORIENTATION [0 0 0]
PASS: [LIST? ORIENTATION] returned true , as expected.
PASS: [COUNT ORIENTATION] returned 3 , as expected.
PASS: [ROLL] returned 360 , as expected.
PASS: [PITCH] returned 3.00858953062496e-15 , as expected.
PASS: [HEADING] returned 360 , as expected.
PASS: [ANGLEISCLOSEENOUGH 360 0] returned true , as expected.
PASS: [ANGLEISCLOSEENOUGH 3.00858953062496e-15 0] returned true , as expected.
PASS: [ANGLEISCLOSEENOUGH 360 0] returned true , as expected.
INFO: Calling SETORIENTATION [1 2 3]
PASS: [LIST? ORIENTATION] returned true , as expected.
PASS: [COUNT ORIENTATION] returned 3 , as expected.
PASS: [ROLL] returned 0.999999999999992 , as expected.
PASS: [PITCH] returned 2 , as expected.
PASS: [HEADING] returned 2.99999999999999 , as expected.
PASS: [ANGLEISCLOSEENOUGH 0.999999999999992 1] returned true , as expected.
PASS: [ANGLEISCLOSEENOUGH 2 2] returned true , as expected.
PASS: [ANGLEISCLOSEENOUGH 2.99999999999999 3] returned true , as expected.
INFO: Calling SETORIENTATION [105 0 0]
PASS: [LIST? ORIENTATION] returned true , as expected.
PASS: [COUNT ORIENTATION] returned 3 , as expected.
PASS: [ROLL] returned 105 , as expected.
PASS: [PITCH] returned 360 , as expected.
PASS: [HEADING] returned 360 , as expected.
PASS: [ANGLEISCLOSEENOUGH 105 105] returned true , as expected.
PASS: [ANGLEISCLOSEENOUGH 360 0] returned true , as expected.
PASS: [ANGLEISCLOSEENOUGH 360 0] returned true , as expected.
INFO: Calling SETORIENTATION [0 105 0]
PASS: [LIST? ORIENTATION] returned true , as expected.
PASS: [COUNT ORIENTATION] returned 3 , as expected.
PASS: [ROLL] returned 180 , as expected.
PASS: [PITCH] returned 75 , as expected.
PASS: [HEADING] returned 180 , as expected.
PASS: [ANGLEISCLOSEENOUGH 180 180] returned true , as expected.
PASS: [ANGLEISCLOSEENOUGH 75 75] returned true , as expected.
PASS: [ANGLEISCLOSEENOUGH 180 180] returned true , as expected.
INFO: Calling SETORIENTATION [0 0 105]
PASS: [LIST? ORIENTATION] returned true , as expected.
PASS: [COUNT ORIENTATION] returned 3 , as expected.
PASS: [ROLL] returned 0 , as expected.
PASS: [PITCH] returned 360 , as expected.
PASS: [HEADING] returned 105 , as expected.
PASS: [ANGLEISCLOSEENOUGH 0 0] returned true , as expected.
PASS: [ANGLEISCLOSEENOUGH 360 0] returned true , as expected.
PASS: [ANGLEISCLOSEENOUGH 105 105] returned true , as expected.
INFO: Calling SETORIENTATION [0 -90 0]
PASS: [LIST? ORIENTATION] returned true , as expected.
PASS: [COUNT ORIENTATION] returned 3 , as expected.
PASS: [ROLL] returned 300.898698809005 , as expected.
PASS: [PITCH] returned 270 , as expected.
PASS: [HEADING] returned 7.79298017167185e-15 , as expected.
PASS: [ANGLEISCLOSEENOUGH 0 0] returned true , as expected.
PASS: [ANGLEISCLOSEENOUGH 270 270] returned true , as expected.
PASS: [ANGLEISCLOSEENOUGH 7.79298017167185e-15 0] returned true , as expected.
INFO: Calling SETORIENTATION [0 -105 0]
PASS: [LIST? ORIENTATION] returned true , as expected.
PASS: [COUNT ORIENTATION] returned 3 , as expected.
PASS: [ROLL] returned 180 , as expected.
PASS: [PITCH] returned 285 , as expected.
PASS: [HEADING] returned 180 , as expected.
PASS: [ANGLEISCLOSEENOUGH 180 180] returned true , as expected.
PASS: [ANGLEISCLOSEENOUGH 285 285] returned true , as expected.
PASS: [ANGLEISCLOSEENOUGH 180 180] returned true , as expected.
INFO: Calling SETORIENTATION [0 465 0]
PASS: [LIST? ORIENTATION] returned true , as expected.
PASS: [COUNT ORIENTATION] returned 3 , as expected.
PASS: [ROLL] returned 180 , as expected.
PASS: [PITCH] returned 75 , as expected.
PASS: [HEADING] returned 180 , as expected.
PASS: [ANGLEISCLOSEENOUGH 180 180] returned true , as expected.
PASS: [ANGLEISCLOSEENOUGH 75 75] returned true , as expected.
PASS: [ANGLEISCLOSEENOUGH 180 180] returned true , as expected.
INFO: Calling SETORIENTATION [360 360 360]
PASS: [LIST? ORIENTATION] returned true , as expected.
PASS: [COUNT ORIENTATION] returned 3 , as expected.
PASS: [ROLL] returned 1.63317910981156e-15 , as expected.
PASS: [PITCH] returned 2.89465340347775e-15 , as expected.
PASS: [HEADING] returned 360 , as expected.
PASS: [ANGLEISCLOSEENOUGH 1.63317910981156e-15 0] returned true , as expected.
PASS: [ANGLEISCLOSEENOUGH 2.89465340347775e-15 0] returned true , as expected.
PASS: [ANGLEISCLOSEENOUGH 360 0] returned true , as expected.
INFO: Calling SETORIENTATION [-360 -360 -360]
PASS: [LIST? ORIENTATION] returned true , as expected.
PASS: [COUNT ORIENTATION] returned 3 , as expected.
PASS: [ROLL] returned 360 , as expected.
PASS: [PITCH] returned 360 , as expected.
PASS: [HEADING] returned 6.34190050419077e-15 , as expected.
PASS: [ANGLEISCLOSEENOUGH 360 0] returned true , as expected.
PASS: [ANGLEISCLOSEENOUGH 360 0] returned true , as expected.
PASS: [ANGLEISCLOSEENOUGH 2.27996525126551e-14 0] returned true , as expected.
INFO: Executing invalid instruction: [(SETORIENTATION)]
PASS: Running [(SETORIENTATION)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to SETORIENTATION] .
INFO: Running invalid instruction: [(SETORIENTATION 0)]
INFO: ITEM 1 ERROR output 21 .
INFO: ITEM 2 ERROR output [setorientation doesn't like 0 as input] .
INFO: Executing invalid instruction: [(SETORIENTATION 0 0)]
PASS: Running [(SETORIENTATION 0 0)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Executing invalid instruction: [(SETORIENTATION 0 0 0)]
PASS: Running [(SETORIENTATION 0 0 0)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [(SETORIENTATION [0] )]
INFO: ITEM 1 ERROR output 21 .
INFO: ITEM 2 ERROR output [setorientation doesn't like [0] as input] .
INFO: Running invalid instruction: [(SETORIENTATION [0 0] )]
INFO: ITEM 1 ERROR output 21 .
INFO: ITEM 2 ERROR output [setorientation doesn't like [0 0] as input] .
INFO: Running invalid instruction: [(SETORIENTATION [a b c] )]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [setroll doesn't like a as input] .
INFO: Running invalid instruction: [(SETORIENTATION [0 0 0 0] )]
INFO: ITEM 1 ERROR output 21 .
INFO: ITEM 2 ERROR output [setorientation doesn't like [0 0 0 0] as input] .
INFO: Running invalid instruction: [(SETORIENTATION {0 0 0} )]
INFO: ITEM 1 ERROR output 21 .
INFO: ITEM 2 ERROR output [setorientation doesn't like {0 0 0} as input] .
INFO: Executing invalid instruction: [(SETORIENTATION [0 0 0] "toomany)]
PASS: Running [(SETORIENTATION [0 0 0] "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Executing invalid instruction: [(ORIENTATION "toomany)]
PASS: Running [(ORIENTATION "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
PASS: [SCRUNCH] returned [1 1] , as expected.
PASS: [SCRUNCH] returned [2 0.1] , as expected.
INFO: Executing invalid instruction: [(SETSCRUNCH)]
PASS: Running [(SETSCRUNCH)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to SETSCRUNCH] .
INFO: Executing invalid instruction: [(SETSCRUNCH [1 1] )]
PASS: Running [(SETSCRUNCH [1 1] )] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to SETSCRUNCH] .
INFO: Executing invalid instruction: [(SETSCRUNCH 1)]
PASS: Running [(SETSCRUNCH 1)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to SETSCRUNCH] .
INFO: Running invalid instruction: [(SETSCRUNCH "a 1)]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETSCRUNCH doesn't like a as input] .
INFO: Running invalid instruction: [(SETSCRUNCH [1] 1)]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETSCRUNCH doesn't like [1] as input] .
INFO: Running invalid instruction: [(SETSCRUNCH {1} 1)]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETSCRUNCH doesn't like {1} as input] .
INFO: Running invalid instruction: [(SETSCRUNCH 1 "a )]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETSCRUNCH doesn't like a as input] .
INFO: Running invalid instruction: [(SETSCRUNCH 1 [1] )]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETSCRUNCH doesn't like [1] as input] .
INFO: Running invalid instruction: [(SETSCRUNCH 1 {1} )]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SETSCRUNCH doesn't like {1} as input] .
INFO: Executing invalid instruction: [(SETSCRUNCH 1 1 1)]
PASS: Running [(SETSCRUNCH 1 1 1)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Executing invalid instruction: [(SCRUNCH "toomany)]
PASS: Running [(SCRUNCH "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
PASS: [SCRUNCH] returned [0 0] , as expected.
PASS: [SCRUNCH] returned [1e+50 -1e+50] , as expected.
PASS: "HELP [wor]" opened the index to WORD
PASS: "HELP TO" opened the documentation for TO
PASS: "(HELP)" opened the manual to the table of contents
INFO: Executing invalid instruction: [(HELP "TOO "MANY)]
PASS: Running [(HELP "TOO "MANY)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
PASS: ICON "Commander minimized the commander when it was docked
INFO: Executing invalid instruction: [(WINDOWSET)]
PASS: Running [(WINDOWSET)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to WINDOWSET] .
INFO: Executing invalid instruction: [(WINDOWSET "FMSLogo)]
PASS: Running [(WINDOWSET "FMSLogo)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to WINDOWSET] .
INFO: Executing invalid instruction: [(WINDOWSET "FMSLogo 0 "toomany)]
PASS: Running [(WINDOWSET "FMSLogo 0 "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [WINDOWSET "FMSLogo [1]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [WINDOWSET doesn't like [1] as input] .
INFO: Running invalid instruction: [WINDOWSET "FMSLogo {1}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [WINDOWSET doesn't like {1} as input] .
INFO: Running invalid instruction: [WINDOWSET "FMSLogo "one]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [WINDOWSET doesn't like one as input] .
INFO: Running invalid instruction: [WINDOWSET "FMSLogo -1]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [WINDOWSET doesn't like -1 as input] .
INFO: Executing invalid instruction: [(DLLLOAD)]
PASS: Running [(DLLLOAD)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to DLLLOAD] .
INFO: Executing invalid instruction: [(DLLLOAD "kernel32 "user32)]
PASS: Running [(DLLLOAD "kernel32 "user32)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [DLLLOAD {0}]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
INFO: Running invalid instruction: [DLLLOAD [0]]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
INFO: Running invalid instruction: [DLLLOAD 12345]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
INFO: Running invalid instruction: [DLLLOAD "nonexistent.dll]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
INFO: Running invalid instruction: [DLLLOAD "c:\]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
INFO: Running invalid instruction: [DLLLOAD "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA.dll]
INFO: ITEM 1 ERROR output 13 .
INFO: ITEM 2 ERROR output [I don't know how todll] .
INFO: Running invalid instruction: [DLLLOAD "user32.dll]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
INFO: Running invalid instruction: [DLLLOAD {0}]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
INFO: Running invalid instruction: [DLLCALL [L FindWindowA S FMSLogo L 0]]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
INFO: Executing invalid instruction: [(DLLCALL)]
PASS: Running [(DLLCALL)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to DLLCALL] .
INFO: Executing invalid instruction: [(DLLCALL [L GetTickCount] "toomany)]
PASS: Running [(DLLCALL [L GetTickCount] "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [DLLCALL {0}]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
INFO: Running invalid instruction: [DLLCALL [0]]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
INFO: Running invalid instruction: [DLLCALL [L]]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
INFO: Running invalid instruction: [DLLCALL [L FunctionDoesNotExist]]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
INFO: Running invalid instruction: [DLLCALL [E GetTickCount]]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
INFO: Running invalid instruction: [DLLCALL [E GetTickCount]]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
INFO: Running invalid instruction: [DLLCALL [L GetTickCount L]]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
INFO: Running invalid instruction: [DLLCALL [L GetTickCount E Unknown]]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
INFO: Running invalid instruction: [DLLFREE]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
INFO: Executing invalid instruction: [(DLLFREE 0)]
PASS: Running [(DLLFREE 0)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
PASS: [SORT []] returned [] , as expected.
PASS: [SORT [1]] returned [1] , as expected.
PASS: [SORT [1 2 3]] returned [1 2 3] , as expected.
PASS: [SORT [3 2 1]] returned [1 2 3] , as expected.
PASS: [(SORT [c b a] "beforep)] returned [a b c] , as expected.
PASS: [(SORT ["c "b "a] "beforep)] returned ["a "b "c] , as expected.
PASS: [(SORT [efg abc hij] "beforep)] returned [abc efg hij] , as expected.
PASS: [SORT [1 2 3 1 2 3 1 2 3]] returned [1 1 1 2 2 2 3 3 3] , as expected.
PASS: [(SORT [1 2 3 1 2 3 1 2 3] "greaterp)] returned [3 3 3 2 2 2 1 1 1] , as expected.
PASS: [(SORT [3 2 1] "SORTTEST.ONEINPUTBYDEFAULT)] returned [1 2 3] , as expected.
PASS: [(SORT :database "SORTTEST.SORTBYNAME)] returned [{"cat 4 2} {"human 2 2} {"spider 8 8}] , as expected.
PASS: [(SORT :database "SORTTEST.SORTBYLEGS)] returned [{"human 2 2} {"cat 4 2} {"spider 8 8}] , as expected.
PASS: [SORT "hello] returned ehllo , as expected.
PASS: [SORT "FMSLogo] returned FgLMooS , as expected.
PASS: [SORT "FgLMooS] returned FgLMooS , as expected.
PASS: [SORT "Z] returned Z , as expected.
PASS: [SORT "] returned  , as expected.
PASS: [(SORT "hello "SORTTEST.AFTER?)] returned ollhe , as expected.
CALL: make "sortedarray SORT {3 2 1 1 2 3 3 2 1}
PASS: [ARRAY? :sortedarray] returned true , as expected.
PASS: [COUNT :sortedarray] returned 9 , as expected.
PASS: [ITEM 1 :sortedarray] returned 1 , as expected.
PASS: [ITEM 2 :sortedarray] returned 1 , as expected.
PASS: [ITEM 3 :sortedarray] returned 1 , as expected.
PASS: [ITEM 4 :sortedarray] returned 2 , as expected.
PASS: [ITEM 5 :sortedarray] returned 2 , as expected.
PASS: [ITEM 6 :sortedarray] returned 2 , as expected.
PASS: [ITEM 7 :sortedarray] returned 3 , as expected.
PASS: [ITEM 8 :sortedarray] returned 3 , as expected.
PASS: [ITEM 9 :sortedarray] returned 3 , as expected.
PASS: [SORT ISEQ 100 1] returned [1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100] , as expected.
INFO: Executing invalid instruction: [(SORT)]
PASS: Running [(SORT)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to SORT] .
INFO: Running invalid instruction: [(SORT [[1] [2]] )]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [less? doesn't like [1] as input] .
INFO: Running invalid instruction: [(SORT {[1] [2]} )]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [less? doesn't like [1] as input] .
INFO: Running invalid instruction: [(SORT [3 2 1] "FMSLogo)]
INFO: ITEM 1 ERROR output 24 .
INFO: ITEM 2 ERROR output [I don't know how to FMSLogo] .
INFO: Running invalid instruction: [(SORT [3 2 1] [1] )]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [if doesn't like 1 as input] .
INFO: Running invalid instruction: [(SORT [3 2 1] {1} )]
INFO: ITEM 1 ERROR output 32 .
INFO: ITEM 2 ERROR output [APPLY doesn't like {1} as input] .
INFO: Executing invalid instruction: [(SORT [3 2 1] "SORTTEST.ONEINPUTPROC)]
PASS: Running [(SORT [3 2 1] "SORTTEST.ONEINPUTPROC)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Executing invalid instruction: [(SORT [3 2 1] "SORTTEST.THREEINPUTPROC)]
PASS: Running [(SORT [3 2 1] "SORTTEST.THREEINPUTPROC)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to SORTTEST.THREEINPUTPROC] .
INFO: Running invalid instruction: [(SORT [3 2 1] "SORTTEST.NONPREDICATE)]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [if doesn't like 1 as input] .
INFO: Executing invalid instruction: [(SORT [3 2 1] "lessp "toomany)]
PASS: Running [(SORT [3 2 1] "lessp "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
PASS: [ISEQ 1 5] returned [1 2 3 4 5] , as expected.
PASS: [ISEQ 5 1] returned [5 4 3 2 1] , as expected.
PASS: [ISEQ 1 1] returned [1] , as expected.
PASS: [ISEQ -5 5] returned [-5 -4 -3 -2 -1 0 1 2 3 4 5] , as expected.
PASS: [ISEQ -5 -1] returned [-5 -4 -3 -2 -1] , as expected.
PASS: [ISEQ 0 0] returned [0] , as expected.
PASS: [ISEQ 0.0 5.0] returned [0 1 2 3 4 5] , as expected.
INFO: Executing invalid instruction: [(ISEQ 5)]
PASS: Running [(ISEQ 5)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to ISEQ] .
INFO: Executing invalid instruction: [(ISEQ 1 5 "toomany)]
PASS: Running [(ISEQ 1 5 "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [ISEQ 0.5 10]
INFO: ITEM 1 ERROR output 21 .
INFO: ITEM 2 ERROR output [iseq doesn't like 0.5 as input] .
INFO: Running invalid instruction: [ISEQ "zero 10]
INFO: ITEM 1 ERROR output 21 .
INFO: ITEM 2 ERROR output [iseq doesn't like zero as input] .
INFO: Running invalid instruction: [ISEQ [0] 10]
INFO: ITEM 1 ERROR output 21 .
INFO: ITEM 2 ERROR output [iseq doesn't like [0] as input] .
INFO: Running invalid instruction: [ISEQ {0} 10]
INFO: ITEM 1 ERROR output 21 .
INFO: ITEM 2 ERROR output [iseq doesn't like {0} as input] .
INFO: Running invalid instruction: [ISEQ 0 10.1]
INFO: ITEM 1 ERROR output 21 .
INFO: ITEM 2 ERROR output [iseq doesn't like 10.1 as input] .
INFO: Running invalid instruction: [ISEQ 0 "ten]
INFO: ITEM 1 ERROR output 21 .
INFO: ITEM 2 ERROR output [iseq doesn't like ten as input] .
INFO: Running invalid instruction: [ISEQ 0 [10]]
INFO: ITEM 1 ERROR output 21 .
INFO: ITEM 2 ERROR output [iseq doesn't like [10] as input] .
INFO: Running invalid instruction: [ISEQ 0 {10}]
INFO: ITEM 1 ERROR output 21 .
INFO: ITEM 2 ERROR output [iseq doesn't like {10} as input] .
PASS: [MEMBERP "TRACETEST.TRACEDPROCEDURE (ITEM 1 TRACED)] returned false , as expected.
CALL: TRACE "TRACETEST.TRACEDPROCEDURE
PASS: [MEMBERP "TRACETEST.TRACEDPROCEDURE (ITEM 1 TRACED)] returned true , as expected.
CALL: TRACETEST.TRACEDPROCEDURE
CALL: UNTRACE "TRACETEST.TRACEDPROCEDURE
PASS: [MEMBERP "TRACETEST.TRACEDPROCEDURE (ITEM 1 TRACED)] returned false , as expected.
CALL: TRACETEST.TRACEDPROCEDURE
PASS: [MEMBERP "TRACETEST.TRACEDFUNCTION (ITEM 1 TRACED)] returned false , as expected.
CALL: TRACE "TRACETEST.TRACEDFUNCTION
PASS: [MEMBERP "TRACETEST.TRACEDFUNCTION (ITEM 1 TRACED)] returned true , as expected.
PASS: [TRACETEST.TRACEDFUNCTION 123] returned 123 , as expected.
PASS: [TRACETEST.TRACEDFUNCTION "outputthis] returned outputthis , as expected.
PASS: [TRACETEST.TRACEDFUNCTION [1 2 3]] returned [1 2 3] , as expected.
CALL: TRACETEST.TRACEDFUNCTION {1 2 3}
CALL: UNTRACE "TRACETEST.TRACEDFUNCTION
PASS: [MEMBERP "TRACETEST.TRACEDFUNCTION (ITEM 1 TRACED)] returned false , as expected.
PASS: [TRACETEST.TRACEDFUNCTION 123] returned 123 , as expected.
PASS: [MEMBERP "TRACETEST.TRACEDVARIABLE (ITEM 2 TRACED)] returned false , as expected.
CALL: TRACE NAMELIST "TRACETEST.TRACEDVARIABLE
PASS: [MEMBERP "TRACETEST.TRACEDVARIABLE (ITEM 2 TRACED)] returned true , as expected.
CALL: MAKE "TRACETEST.TRACEDVARIABLE 123
CALL: MAKE "TRACETEST.TRACEDVARIABLE "123
CALL: MAKE "TRACETEST.TRACEDVARIABLE "value
CALL: MAKE "TRACETEST.TRACEDVARIABLE [1 2 3]
CALL: MAKE "TRACETEST.TRACEDVARIABLE {1 2 3}
CALL: UNTRACE NAMELIST "TRACETEST.TRACEDVARIABLE
PASS: [MEMBERP "TRACETEST.TRACEDVARIABLE (ITEM 2 TRACED)] returned false , as expected.
CALL: MAKE "TRACETEST.TRACEDVARIABLE 321
CALL: PPROP "TRACETEST.TRACEDPLIST "SOMEPROPERTY 0
PASS: [MEMBERP "TRACETEST.TRACEDPLIST (ITEM 3 TRACED)] returned false , as expected.
CALL: TRACE PLLIST "TRACETEST.TRACEDPLIST
PASS: [MEMBERP "TRACETEST.TRACEDPLIST (ITEM 3 TRACED)] returned true , as expected.
CALL: PPROP "TRACETEST.TRACEDPLIST "PROPERTY1 123
CALL: PPROP "TRACETEST.TRACEDPLIST "PROPERTY2 "123
CALL: PPROP "TRACETEST.TRACEDPLIST "PROPERTY3 "value
CALL: PPROP "TRACETEST.TRACEDPLIST "PROPERTY4 [1 2 3]
CALL: PPROP "TRACETEST.TRACEDPLIST "PROPERTY5 {1 2 3}
CALL: UNTRACE PLLIST "TRACETEST.TRACEDPLIST
PASS: [MEMBERP "TRACETEST.TRACEDPLIST (ITEM 3 TRACED)] returned false , as expected.
CALL: PPROP "TRACETEST.TRACEDPLIST "PROPERTY6 123
CALL: PPROP "TRACETEST.TRACEDPLIST "PROPERTY7 "123
CALL: PPROP "TRACETEST.TRACEDPLIST "PROPERTY8 "value
CALL: PPROP "TRACETEST.TRACEDPLIST "PROPERTY9 [1 2 3]
CALL: PPROP "TRACETEST.TRACEDPLIST "PROPERTY0 {1 2 3}
CALL: MAKE "TRACETEST.TRACEDPLIST 4321
INFO: Calling TRACE CONTENTS
PASS: [TRACED] returned [[#test .eqtest abstest activeareatest andtest angleiscloseenough applytest applytest.applyoutput applytest.badinput applytest.bug1519088 applytest.lambdatemplate applytest.lambdatemplate.newscopetest applytest.nonprimitive applytest.nooutput applytest.proceduretexttemplate applytest.proceduretexttemplate.newscopetest applytest.questionmarktemplate applytest.smoketest arcbadinputtest arccostest arcsintest arcsmoketest arctantest arctest arraybadinputtest arrayorigintest arrayptest arraysmoketest arraytest asciitest ashifttest.badinput ashifttest.smoketest beforeptest bitandtest.badinput bitandtest.smoketest bitcopytest bitloadsizetest bitmaptest bitnottest.badinput bitnottest.smoketest bitortest.badinput bitortest.smoketest bitpastetoindextest.badinput bitpastetoindextest.smoketest bitwisetest bitxortest.badinput bitxortest.smoketest bodyhasemptylines bug1349374test bug1377856test bug1383281test bug1384267test bug1388325test bug1397560test bug1429960test bug1448155test bug1458661test burytest burytest.badinput burytest.buriedprocedure burytest.buryall burytest.procedure burytest.propertylist burytest.variable butfirststest butfirststest.badinput butfirststest.smoketest butfirsttest butlasttest buttonptest catchtest catchtest.badinput catchtest.catchbuiltinerror catchtest.catchusererror catchtest.doublecatcherror catchtest.doublecatcherror.innercatcherror catchtest.doublecatcherror.throwerror catchtest.skiperrortag catchtest.skiperrortag.catcherror catchtest.skiperrortag.throw catchtest.skipthrowtag catchtest.skipthrowtag.catchthrowtag catchtest.skipthrowtag.throwerror catchtest.skipthrowtagwithvalue catchtest.skipthrowtagwithvalue.catchinnertag catchtest.skipthrowtagwithvalue.throwoutertag catchtest.smoketest catchtest.smoketest.throw catchtest.throw.builtin.error chdirtest client.onreadytosend colorindextest colorsetgettest colortest combinetest combinetest.badinput combinetest.smoketest controlflowtest copydefmaybeoutputtest copydefoptest copydefoutputtest copydefstoptest copydeftest copydeftotest costest definetest definetest.badinput definetest.bodyhasemptylines definetest.smoketest differencetest difficultcomments directorysmoketest directorytest dllcalltest dllfreetest dllloadtest dllsmoketest dlltest donothing doorientationtest echo edalltest editortest emptyptest equalptest erasetest erasetest.badinput erasetest.eraseall erasetest.eraseprocedure erasetest.erasepropertylist erasetest.erasevariable erasetest.ern erasetest.erpl erracttest erracttest.bug1517326 erracttest.bug1517326.continue5 erracttest.catchblockserract erracttest.changeerract.output.6 erracttest.changeerractinerract erracttest.erractaftercatch erracttest.errorinerract erracttest.output.5 erracttest.output.nexterractvalue erracttest.outputwrongvalue erracttest.recoverableerror.outputnothing erracttest.smoketest erracttest.unrecoverableerror.outputnothing erracttest.unrecoverableerror.outputvalue error.30.test errortest exptest filetest filetest.allopen filetest.badinput filetest.closeall filetest.dribble filetest.erasefile filetest.openappend filetest.opendirectoryasfile filetest.openopenfile filetest.openupdate filetest.setreadpos filetest.setwritepos filetest.smoketest filltest filltimerevent firststest firststest.badinput firststest.smoketest firsttest floodcolortest fontfacenamestest fontfacenamestest.badinput fontfacenamestest.manualtest fontfacenamestest.smoketest formtest fputtest fputtest.badinput fputtest.smoketest fulltexttest fulltexttest.badinput fulltexttest.smoketest helptest i.dont.know.what.to.do.with.value iftest inporttest inttest iseqtest labelbadinputtest labelcircletest labeltest largeedittest lasttest listptest listtest listtest.smoketest lntest loadtest localvartest log10test logictest logoversiontest logoversiontest.badinput logoversiontest.smoketest lputtest lputtest.badinput lputtest.smoketest lshifttest.badinput lshifttest.smoketest macro.return.unbound.instead.of.list macrotest macrotest.outputnothing mathtest memberptest messageboxtest messageboxtest.badinput messageboxtest.smoketest miditest miditest.badinput miditest.devicezero miditest.longformat miditest.playtune miditest.smoketest minustest misctest mkdirtest modulotest mousetest mousetest.badinput mousetest.simpletest my.proc.to.step myadd mymacro networktest networktest.client.echo networktest.client.receivelargepacket networktest.client.receiveunframedpacket networktest.client.shutdownrace networktest.client.smoketest networktest.hostname networktest.netshutdowncrash networktest.server.receiveunframedpacket networktest.server.shutdownrace networktest.server.twoconnections networktest.servercommand networktest.smoketest no.input.no.output nodestest nottest numberptest one.input.no.output orientationtest ortest outporttest output.373 parsetest parsetest.expression parsetest.func parsetest.manyinputs parsetest.number parsetest.word pasteincircle pencolortest penmodetest pensizetest pensizetest.badinput pensizetest.setgettest pensizetest.smoketest pentest penupdowntest perspectivetest pitest pixeltest pixeltest.badinput pixeltest.smoketest plisttest porttest powertest predicatetest printtest printtest.performance printtest.smoketest procedure.shadows.myshadowedvar procedure.with.to.inside.it procedureinworkingdirectory proceduretest proceduretest.complexproc producttest questionboxtest questionboxtest.badinput questionboxtest.smoketest queuetest queuetest.badinput queuetest.circulartest queuetest.smoketest quotedtest quotedtest.badinput quotedtest.smoketest quotienttest radarccostest radarcsintest radarctantest radcostest radsintest radtantest rawasciitest reducetest reducetest.badinput reducetest.max reducetest.max.rest reducetest.smoketest refreshtest remaindertest repcounttest repcounttest.badinput repcounttest.smoketest repcounttest.timercallback repcounttest.timertest repeattest repeattest.badinput repeattest.outputinrepeat repeattest.smoketest repeattest.stopinrepeat reversetest reversetest.badinput reversetest.smoketest rmdirtest roundtest runresulttest runresulttest.badinput runresulttest.smoketest runtest sampleproc screencolortest screentest scrunchtest selectboxtest selectboxtest.badinput selectboxtest.smoketest sentencetest sentencetest.badinput sentencetest.noalias sentencetest.smoketest setitemtest setlabelfonttest setpixeltest.badinput setpixeltest.smoketest setrandomorientation shellscripttest shelltest shelltest.badinput shelltest.smoketest signtest sintest sorttest sorttest.after? sorttest.badinput sorttest.nonpredicate sorttest.oneinputbydefault sorttest.oneinputproc sorttest.performance sorttest.regression sorttest.sortbylegs sorttest.sortbyname sorttest.threeinputproc soundtest soundtest.badinput soundtest.frequency.a4 soundtest.frequency.b4 soundtest.frequency.c4 soundtest.frequency.c5 soundtest.frequency.d4 soundtest.frequency.d5 soundtest.frequency.e4 soundtest.frequency.f4 soundtest.frequency.g4 soundtest.sound soundtest.tone sqrttest stacktest stacktest.badinput stacktest.circulartest stacktest.smoketest steptest steptest.badinput steptest.procedure steptest.propertylist steptest.shadowvariable steptest.stepall steptest.steppedprocedure steptest.variable sumtest tantest testall testlib.repeatword testtest testtest.badinput testtest.scopetest testtest.smoketest texttest texttest.badinput texttest.smoketest thingtest thingtest.badinput thingtest.shadowedvariable thingtest.smoketest throwtest.badinput timertest timertest.badinput timertest.smoketest timetest timetest.badinput timetest.smoketest timewait totest totest.baddefaultinputs totest.chaineddefaults totest.chaineddefaultstest totest.defaultinput totest.defaultnumberofinputs totest.nooutput totest.output5 totest.outputdefaultinput totest.outputdefaultinput.twoinputs totest.outputrest totest.outputrest.twoinputs totest.repeatedinput totest.repeatedinputtest totest.rest totest.singleinput totest.smoketest tracetest tracetest.badinput tracetest.function tracetest.procedure tracetest.propertylist tracetest.traceall tracetest.tracedfunction tracetest.tracedprocedure tracetest.variable waittest windowfileedittest windowfileedittest.bug1330752 windowfileedittest.longfilename windowsettest windowstest windowstest.button windowstest.button.badinput windowstest.checkbox windowstest.checkbox.badinput windowstest.checkbox.deletegroupbox windowstest.combobox windowstest.combobox.badinput windowstest.debugwindows windowstest.debugwindows.badinput windowstest.debugwindows.stress windowstest.dialog.badinput windowstest.dialog.badinput.fromcallback windowstest.dialog.smoketest windowstest.groupbox windowstest.groupbox.badinput windowstest.listbox windowstest.listbox.badinput windowstest.mainwindow.smoketest windowstest.radiobutton windowstest.radiobutton.badinput windowstest.radiobutton.deletegroupbox windowstest.regressiontest windowstest.scrollbar windowstest.scrollbar.badinput windowstest.setup windowstest.static windowstest.static.badinput windowstest.window.badinput windowstest.window.smoketest windowtest wordproctest wordptest wordtest yesnoboxtest yesnoboxtest.badinput yesnoboxtest.smoketest ~ignoreme ~ignoremewascalled] [erract erract.was.called isok lambda.function.ran startup string testlog thesum totest.array tracetest.tracedplist ~ignoremewascalled] [tracetest.tracedplist]] , as expected.
CALL: UNTRACE CONTENTS
PASS: [TRACED] returned [[] [] []] , as expected.
INFO: Executing invalid instruction: [(TRACED "toomany)]
PASS: Running [(TRACED "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
CALL: (TRACE [[nonexistent] [nonexistent] [nonexistent]] )
INFO: Executing invalid instruction: [(TRACE)]
PASS: Running [(TRACE)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to TRACE] .
INFO: Executing invalid instruction: [(TRACE "name "toomany)]
PASS: Running [(TRACE "name "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [(TRACE {name} )]
INFO: ITEM 1 ERROR output 4 .
INFO: ITEM 2 ERROR output [TRACE doesn't like {name} as input] .
INFO: Running invalid instruction: [(TRACE [[a] [b] {c}] )]
INFO: ITEM 1 ERROR output 4 .
INFO: ITEM 2 ERROR output [TRACE doesn't like {c} as input] .
INFO: Running invalid instruction: [(TRACE [a b {c}] )]
INFO: ITEM 1 ERROR output 4 .
INFO: ITEM 2 ERROR output [TRACE doesn't like {c} as input] .
INFO: Running invalid instruction: [(TRACE [[a b {c}]] )]
INFO: ITEM 1 ERROR output 4 .
INFO: ITEM 2 ERROR output [TRACE doesn't like {c} as input] .
INFO: Running invalid instruction: [(TRACE [[a] [b] [c] [d]] )]
INFO: ITEM 1 ERROR output 4 .
INFO: ITEM 2 ERROR output [TRACE doesn't like [[a] [b] [c] [d]] as input] .
INFO: Running invalid instruction: [(TRACE [[[a]]] )]
INFO: ITEM 1 ERROR output 4 .
INFO: ITEM 2 ERROR output [TRACE doesn't like [a] as input] .
CALL: (UNTRACE [[nonexistent] [nonexistent] [nonexistent]] )
INFO: Executing invalid instruction: [(UNTRACE)]
PASS: Running [(UNTRACE)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to UNTRACE] .
INFO: Executing invalid instruction: [(UNTRACE "name "toomany)]
PASS: Running [(UNTRACE "name "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [(UNTRACE {name} )]
INFO: ITEM 1 ERROR output 4 .
INFO: ITEM 2 ERROR output [UNTRACE doesn't like {name} as input] .
INFO: Running invalid instruction: [(UNTRACE [[a] [b] {c}] )]
INFO: ITEM 1 ERROR output 4 .
INFO: ITEM 2 ERROR output [UNTRACE doesn't like {c} as input] .
INFO: Running invalid instruction: [(UNTRACE [a b {c}] )]
INFO: ITEM 1 ERROR output 4 .
INFO: ITEM 2 ERROR output [UNTRACE doesn't like {c} as input] .
INFO: Running invalid instruction: [(UNTRACE [[a b {c}]] )]
INFO: ITEM 1 ERROR output 4 .
INFO: ITEM 2 ERROR output [UNTRACE doesn't like {c} as input] .
INFO: Running invalid instruction: [(UNTRACE [[a] [b] [c] [d]] )]
INFO: ITEM 1 ERROR output 4 .
INFO: ITEM 2 ERROR output [UNTRACE doesn't like [[a] [b] [c] [d]] as input] .
INFO: Running invalid instruction: [(UNTRACE [[[a]]] )]
INFO: ITEM 1 ERROR output 4 .
INFO: ITEM 2 ERROR output [UNTRACE doesn't like [a] as input] .
PASS: [MEMBERP "STEPTEST.STEPPEDPROCEDURE (ITEM 1 STEPPED)] returned false , as expected.
CALL: STEP "STEPTEST.STEPPEDPROCEDURE
PASS: [MEMBERP "STEPTEST.STEPPEDPROCEDURE (ITEM 1 STEPPED)] returned true , as expected.
CALL: STEPTEST.STEPPEDPROCEDURE
CALL: UNSTEP "STEPTEST.STEPPEDPROCEDURE
PASS: [MEMBERP "STEPTEST.STEPPEDPROCEDURE (ITEM 1 STEPPED)] returned false , as expected.
CALL: STEPTEST.STEPPEDPROCEDURE
PASS: [MEMBERP "STEPTEST.STEPPEDVARIABLE (ITEM 2 STEPPED)] returned false , as expected.
CALL: STEP NAMELIST "STEPTEST.STEPPEDVARIABLE
PASS: [MEMBERP "STEPTEST.STEPPEDVARIABLE (ITEM 2 STEPPED)] returned true , as expected.
CALL: STEPTEST.SHADOWVARIABLE
CALL: UNSTEP NAMELIST "STEPTEST.STEPPEDVARIABLE
PASS: [MEMBERP "STEPTEST.STEPPEDVARIABLE (ITEM 2 STEPPED)] returned false , as expected.
CALL: STEPTEST.SHADOWVARIABLE
CALL: PPROP "STEPTEST.STEPPEDPLIST "SOMEPROPERTY 0
PASS: [MEMBERP "STEPTEST.STEPPEDPLIST (ITEM 3 STEPPED)] returned false , as expected.
CALL: STEP PLLIST "STEPTEST.STEPPEDPLIST
PASS: [MEMBERP "STEPTEST.STEPPEDPLIST (ITEM 3 STEPPED)] returned true , as expected.
CALL: PPROP "STEPTEST.STEPPEDPLIST "PROPERTY1 123
CALL: PPROP "STEPTEST.STEPPEDPLIST "PROPERTY2 "123
CALL: PPROP "STEPTEST.STEPPEDPLIST "PROPERTY3 "value
CALL: PPROP "STEPTEST.STEPPEDPLIST "PROPERTY4 [1 2 3]
CALL: PPROP "STEPTEST.STEPPEDPLIST "PROPERTY5 {1 2 3}
CALL: UNSTEP PLLIST "STEPTEST.STEPPEDPLIST
PASS: [MEMBERP "STEPTEST.STEPPEDPLIST (ITEM 3 STEPPED)] returned false , as expected.
INFO: Calling STEP CONTENTS
INFO: Called UNSTEP CONTENTS
PASS: [STEPPED] returned [[] [] []] , as expected.
INFO: Executing invalid instruction: [(STEPPED "toomany)]
PASS: Running [(STEPPED "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
CALL: (STEP [[nonexistent] [nonexistent] [nonexistent]] )
INFO: Executing invalid instruction: [(STEP)]
PASS: Running [(STEP)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to STEP] .
INFO: Executing invalid instruction: [(STEP "name "toomany)]
PASS: Running [(STEP "name "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [(STEP {name} )]
INFO: ITEM 1 ERROR output 4 .
INFO: ITEM 2 ERROR output [STEP doesn't like {name} as input] .
INFO: Running invalid instruction: [(STEP [[a] [b] {c}] )]
INFO: ITEM 1 ERROR output 4 .
INFO: ITEM 2 ERROR output [STEP doesn't like {c} as input] .
INFO: Running invalid instruction: [(STEP [a b {c}] )]
INFO: ITEM 1 ERROR output 4 .
INFO: ITEM 2 ERROR output [STEP doesn't like {c} as input] .
INFO: Running invalid instruction: [(STEP [[a b {c}]] )]
INFO: ITEM 1 ERROR output 4 .
INFO: ITEM 2 ERROR output [STEP doesn't like {c} as input] .
INFO: Running invalid instruction: [(STEP [[a] [b] [c] [d]] )]
INFO: ITEM 1 ERROR output 4 .
INFO: ITEM 2 ERROR output [STEP doesn't like [[a] [b] [c] [d]] as input] .
INFO: Running invalid instruction: [(STEP [[[a]]] )]
INFO: ITEM 1 ERROR output 4 .
INFO: ITEM 2 ERROR output [STEP doesn't like [a] as input] .
CALL: (UNSTEP [[nonexistent] [nonexistent] [nonexistent]] )
INFO: Executing invalid instruction: [(UNSTEP)]
PASS: Running [(UNSTEP)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to UNSTEP] .
INFO: Executing invalid instruction: [(UNSTEP "name "toomany)]
PASS: Running [(UNSTEP "name "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [(UNSTEP {name} )]
INFO: ITEM 1 ERROR output 4 .
INFO: ITEM 2 ERROR output [UNSTEP doesn't like {name} as input] .
INFO: Running invalid instruction: [(UNSTEP [[] [] {}] )]
INFO: ITEM 1 ERROR output 4 .
INFO: ITEM 2 ERROR output [UNSTEP doesn't like {} as input] .
INFO: Running invalid instruction: [(UNSTEP [word word {array}] )]
INFO: ITEM 1 ERROR output 4 .
INFO: ITEM 2 ERROR output [UNSTEP doesn't like {array} as input] .
INFO: Running invalid instruction: [(UNSTEP [[] [] [] []] )]
INFO: ITEM 1 ERROR output 4 .
INFO: ITEM 2 ERROR output [UNSTEP doesn't like [[] [] [] []] as input] .
INFO: Running invalid instruction: [(UNSTEP [[a] [b] {c}] )]
INFO: ITEM 1 ERROR output 4 .
INFO: ITEM 2 ERROR output [UNSTEP doesn't like {c} as input] .
INFO: Running invalid instruction: [(UNSTEP [a b {c}] )]
INFO: ITEM 1 ERROR output 4 .
INFO: ITEM 2 ERROR output [UNSTEP doesn't like {c} as input] .
INFO: Running invalid instruction: [(UNSTEP [[a b {c}]] )]
INFO: ITEM 1 ERROR output 4 .
INFO: ITEM 2 ERROR output [UNSTEP doesn't like {c} as input] .
INFO: Running invalid instruction: [(UNSTEP [[a] [b] [c] [d]] )]
INFO: ITEM 1 ERROR output 4 .
INFO: ITEM 2 ERROR output [UNSTEP doesn't like [[a] [b] [c] [d]] as input] .
INFO: Running invalid instruction: [(UNSTEP [[[a]]] )]
INFO: ITEM 1 ERROR output 4 .
INFO: ITEM 2 ERROR output [UNSTEP doesn't like [a] as input] .
PASS: [MEMBERP "BURYTEST.BURIEDPROCEDURE (ITEM 1 BURIED)] returned false , as expected.
PASS: [MEMBERP "BURYTEST.BURIEDPROCEDURE PROCEDURES] returned true , as expected.
CALL: BURY "BURYTEST.BURIEDPROCEDURE
PASS: [MEMBERP "BURYTEST.BURIEDPROCEDURE (ITEM 1 BURIED)] returned true , as expected.
PASS: [MEMBERP "BURYTEST.BURIEDPROCEDURE PROCEDURES] returned false , as expected.
CALL: BURYTEST.BURIEDPROCEDURE
CALL: UNBURY "BURYTEST.BURIEDPROCEDURE
PASS: [MEMBERP "BURYTEST.BURIEDPROCEDURE (ITEM 1 BURIED)] returned false , as expected.
PASS: [MEMBERP "BURYTEST.BURIEDPROCEDURE PROCEDURES] returned true , as expected.
PASS: [MEMBERP "BURYTEST.BURIEDVARIABLE (ITEM 2 BURIED)] returned false , as expected.
PASS: [MEMBERP "BURYTEST.BURIEDVARIABLE (ITEM 2 NAMES)] returned true , as expected.
CALL: BURY NAMELIST "BURYTEST.BURIEDVARIABLE
PASS: [MEMBERP "BURYTEST.BURIEDVARIABLE (ITEM 2 BURIED)] returned true , as expected.
PASS: [MEMBERP "BURYTEST.BURIEDVARIABLE (ITEM 2 NAMES)] returned false , as expected.
PASS: [:BURYTEST.BURIEDVARIABLE = 123] returned true , as expected.
CALL: UNBURY NAMELIST "BURYTEST.BURIEDVARIABLE
PASS: [MEMBERP "BURYTEST.BURIEDVARIABLE (ITEM 2 BURIED)] returned false , as expected.
PASS: [MEMBERP "BURYTEST.BURIEDVARIABLE (ITEM 2 NAMES)] returned true , as expected.
CALL: PPROP "BURYTEST.BURIEDPLIST "SOMEPROPERTY 123
PASS: [MEMBERP "BURYTEST.BURIEDPLIST (ITEM 3 BURIED)] returned false , as expected.
PASS: [MEMBERP "BURYTEST.BURIEDPLIST (ITEM 3 PLISTS)] returned true , as expected.
CALL: BURY PLLIST "BURYTEST.BURIEDPLIST
PASS: [MEMBERP "BURYTEST.BURIEDPLIST (ITEM 3 BURIED)] returned true , as expected.
PASS: [MEMBERP "BURYTEST.BURIEDPLIST (ITEM 3 PLISTS)] returned false , as expected.
PASS: [GPROP "BURYTEST.BURIEDPLIST "SOMEPROPERTY] returned 123 , as expected.
CALL: UNBURY PLLIST "BURYTEST.BURIEDPLIST
PASS: [MEMBERP "BURYTEST.BURIEDPLIST (ITEM 3 BURIED)] returned false , as expected.
PASS: [MEMBERP "BURYTEST.BURIEDPLIST (ITEM 3 PLISTS)] returned true , as expected.
INFO: Executing invalid instruction: [(BURIED "toomany)]
PASS: Running [(BURIED "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
CALL: (BURY [[nonexistent] [nonexistent] [nonexistent]] )
INFO: Executing invalid instruction: [(BURY)]
PASS: Running [(BURY)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to BURY] .
INFO: Executing invalid instruction: [(BURY "name "toomany)]
PASS: Running [(BURY "name "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [(BURY {name} )]
INFO: ITEM 1 ERROR output 4 .
INFO: ITEM 2 ERROR output [BURY doesn't like {name} as input] .
INFO: Running invalid instruction: [(BURY [[a] [b] {c}] )]
INFO: ITEM 1 ERROR output 4 .
INFO: ITEM 2 ERROR output [BURY doesn't like {c} as input] .
INFO: Running invalid instruction: [(BURY [a b {c}] )]
INFO: ITEM 1 ERROR output 4 .
INFO: ITEM 2 ERROR output [BURY doesn't like {c} as input] .
INFO: Running invalid instruction: [(BURY [[a b {c}]] )]
INFO: ITEM 1 ERROR output 4 .
INFO: ITEM 2 ERROR output [BURY doesn't like {c} as input] .
INFO: Running invalid instruction: [(BURY [[a] [b] [c] [d]] )]
INFO: ITEM 1 ERROR output 4 .
INFO: ITEM 2 ERROR output [BURY doesn't like [[a] [b] [c] [d]] as input] .
INFO: Running invalid instruction: [(BURY [[[a]]] )]
INFO: ITEM 1 ERROR output 4 .
INFO: ITEM 2 ERROR output [BURY doesn't like [a] as input] .
CALL: (UNBURY [[nonexistent] [nonexistent] [nonexistent]] )
INFO: Executing invalid instruction: [(UNBURY)]
PASS: Running [(UNBURY)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to UNBURY] .
INFO: Executing invalid instruction: [(UNBURY "name "toomany)]
PASS: Running [(UNBURY "name "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [(UNBURY {name} )]
INFO: ITEM 1 ERROR output 4 .
INFO: ITEM 2 ERROR output [UNBURY doesn't like {name} as input] .
INFO: Running invalid instruction: [(UNBURY [[a] [b] {c}] )]
INFO: ITEM 1 ERROR output 4 .
INFO: ITEM 2 ERROR output [UNBURY doesn't like {c} as input] .
INFO: Running invalid instruction: [(UNBURY [a b {c}] )]
INFO: ITEM 1 ERROR output 4 .
INFO: ITEM 2 ERROR output [UNBURY doesn't like {c} as input] .
INFO: Running invalid instruction: [(UNBURY [[a b {c}]] )]
INFO: ITEM 1 ERROR output 4 .
INFO: ITEM 2 ERROR output [UNBURY doesn't like {c} as input] .
INFO: Running invalid instruction: [(UNBURY [[a] [b] [c] [d]] )]
INFO: ITEM 1 ERROR output 4 .
INFO: ITEM 2 ERROR output [UNBURY doesn't like [[a] [b] [c] [d]] as input] .
INFO: Running invalid instruction: [(UNBURY [[[a]]] )]
INFO: ITEM 1 ERROR output 4 .
INFO: ITEM 2 ERROR output [UNBURY doesn't like [a] as input] .
INFO: Executing invalid instruction: [(BURYALL "toomany)]
PASS: Running [(BURYALL "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Executing invalid instruction: [(UNBURYALL "toomany)]
PASS: Running [(UNBURYALL "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
CALL: BURYALL
PASS: [BURIED] returned [[# #test .eqtest ?rest ` abs abstest activeareatest andtest angleiscloseenough applytest applytest.applyoutput applytest.badinput applytest.bug1519088 applytest.lambdatemplate applytest.lambdatemplate.newscopetest applytest.nonprimitive applytest.nooutput applytest.proceduretexttemplate applytest.proceduretexttemplate.newscopetest applytest.questionmarktemplate applytest.smoketest arc arc2 arcbadinputtest arccostest arcsintest arcsmoketest arctantest arctest arraybadinputtest arrayorigintest arrayptest arraysmoketest arraytest arraytolist asciitest ashifttest.badinput ashifttest.smoketest beforeptest bitandtest.badinput bitandtest.smoketest bitcopytest bitloadsizetest bitmaptest bitnottest.badinput bitnottest.smoketest bitortest.badinput bitortest.smoketest bitpastetoindextest.badinput bitpastetoindextest.smoketest bitwisetest bitxortest.badinput bitxortest.smoketest bodyhasemptylines bug1349374test bug1377856test bug1383281test bug1384267test bug1388325test bug1397560test bug1429960test bug1448155test bug1458661test buryall burytest burytest.badinput burytest.buriedprocedure burytest.buryall burytest.procedure burytest.propertylist burytest.variable butfirststest butfirststest.badinput butfirststest.smoketest butfirsttest butlasttest buttonptest cascade cascade.eval cascade.setup cascade1 catchtest catchtest.badinput catchtest.catchbuiltinerror catchtest.catchusererror catchtest.doublecatcherror catchtest.doublecatcherror.innercatcherror catchtest.doublecatcherror.throwerror catchtest.skiperrortag catchtest.skiperrortag.catcherror catchtest.skiperrortag.throw catchtest.skipthrowtag catchtest.skipthrowtag.catchthrowtag catchtest.skipthrowtag.throwerror catchtest.skipthrowtagwithvalue catchtest.skipthrowtagwithvalue.catchinnertag catchtest.skipthrowtagwithvalue.throwoutertag catchtest.smoketest catchtest.smoketest.throw catchtest.throw.builtin.error chdirtest checkerror checkerroritem circle circle2 client.onreadytosend colorindextest colorsetgettest colortest combine combinetest combinetest.badinput combinetest.smoketest controlflowtest copydefmaybeoutputtest copydefoptest copydefoutputtest copydefstoptest copydeftest copydeftotest costest definetest definetest.badinput definetest.bodyhasemptylines definetest.smoketest dequeue differencetest difficultcomments dir directorysmoketest directorytest dllcalltest dllfreetest dllloadtest dllsmoketest dlltest donothing doorientationtest echo edall edalltest editortest ellipsa2 ellipsearc2 emptyptest equalptest erasetest erasetest.badinput erasetest.eraseall erasetest.eraseprocedure erasetest.erasepropertylist erasetest.erasevariable erasetest.ern erasetest.erpl erracttest erracttest.bug1517326 erracttest.bug1517326.continue5 erracttest.catchblockserract erracttest.changeerract.output.6 erracttest.changeerractinerract erracttest.erractaftercatch erracttest.errorinerract erracttest.output.5 erracttest.output.nexterractvalue erracttest.outputwrongvalue erracttest.recoverableerror.outputnothing erracttest.smoketest erracttest.unrecoverableerror.outputnothing erracttest.unrecoverableerror.outputvalue error.30.test errortest exptest filetest filetest.allopen filetest.badinput filetest.closeall filetest.dribble filetest.erasefile filetest.openappend filetest.opendirectoryasfile filetest.openopenfile filetest.openupdate filetest.setreadpos filetest.setwritepos filetest.smoketest filltest filltimerevent firststest firststest.badinput firststest.smoketest firsttest floodcolortest fontfacenamestest fontfacenamestest.badinput fontfacenamestest.manualtest fontfacenamestest.smoketest for for.done foreach foreach.done foreach1 forloop formtest forstep fputtest fputtest.badinput fputtest.smoketest fulltexttest fulltexttest.badinput fulltexttest.smoketest helptest i.dont.know.what.to.do.with.value icon iftest ignore inporttest inttest iseq iseq.integer? iseq1 iseqtest labelbadinputtest labelcircletest labeltest largeedittest lasttest listptest listtest listtest.smoketest listtoarray listtoarray1 lntest loadtest localmake localvartest log10test logictest logoversiontest logoversiontest.badinput logoversiontest.smoketest lputtest lputtest.badinput lputtest.smoketest lshifttest.badinput lshifttest.smoketest macro.return.unbound.instead.of.list macrotest macrotest.outputnothing map map1 mathtest memberptest messageboxtest messageboxtest.badinput messageboxtest.smoketest miditest miditest.badinput miditest.devicezero miditest.longformat miditest.playtune miditest.smoketest minustest misctest mkdirtest modulotest mousetest mousetest.badinput mousetest.simpletest my.proc.to.step myadd myaddcopy mymacro namelist networktest networktest.client.echo networktest.client.receivelargepacket networktest.client.receiveunframedpacket networktest.client.shutdownrace networktest.client.smoketest networktest.hostname networktest.netshutdowncrash networktest.server.receiveunframedpacket networktest.server.shutdownrace networktest.server.twoconnections networktest.servercommand networktest.smoketest no.input.no.output nodestest nottest numberptest one.input.no.output orientation orientationtest ortest outporttest output.373 parsetest parsetest.expression parsetest.func parsetest.manyinputs parsetest.number parsetest.word pasteincircle pen pencolortest penmodetest pensizetest pensizetest.badinput pensizetest.setgettest pensizetest.smoketest pentest penupdowntest perspectivetest pi pitest pixeltest pixeltest.badinput pixeltest.smoketest plisttest pllist poall pon pons pop popl popls pops porttest pots powertest predicatetest printtest printtest.performance printtest.smoketest procedure.shadows.myshadowedvar procedure.with.to.inside.it procedureinworkingdirectory proceduretest proceduretest.complexproc producttest push questionboxtest questionboxtest.badinput questionboxtest.smoketest queue queuetest queuetest.badinput queuetest.circulartest queuetest.smoketest quoted quotedtest quotedtest.badinput quotedtest.smoketest quotienttest radarccostest radarcsintest radarctantest radcostest radsintest radtantest rawasciitest reduce reducetest reducetest.badinput reducetest.max reducetest.max.rest reducetest.smoketest refreshtest remaindertest repcounttest repcounttest.badinput repcounttest.smoketest repcounttest.timercallback repcounttest.timertest repeattest repeattest.badinput repeattest.outputinrepeat repeattest.smoketest repeattest.stopinrepeat reporttest reporttestfailed reporttestinfo reporttestinitialize reporttestpassed reporttestuninitialize reverse reverse.helper reversetest reversetest.badinput reversetest.smoketest rmdirtest roundtest runbadinputtest runexpecterrortest runfilesystemerrortest runhasnovaluetest runidontknowhowtotest runisaprimitivetest runnonrecoverableidontknowhowtotest runnotenoughinputstest runresulttest runresulttest.badinput runresulttest.smoketest runstoppingtest runtest runtoomanyinputstest runyoudontsaywhattodowithtest sampleproc screencolortest screentest scrunchtest selectboxtest selectboxtest.badinput selectboxtest.smoketest sentencetest sentencetest.badinput sentencetest.noalias sentencetest.smoketest setitemtest setlabelfonttest setorientation setpixeltest.badinput setpixeltest.smoketest setrandomorientation settextfont shellscripttest shelltest shelltest.badinput shelltest.smoketest sign signtest simplereporttest sintest sort sort.listtoword sort.merge sort.mergepairwise sort.mergesort sort.wordtolist sorttest sorttest.after? sorttest.badinput sorttest.nonpredicate sorttest.oneinputbydefault sorttest.oneinputproc sorttest.performance sorttest.regression sorttest.sortbylegs sorttest.sortbyname sorttest.threeinputproc soundtest soundtest.badinput soundtest.frequency.a4 soundtest.frequency.b4 soundtest.frequency.c4 soundtest.frequency.c5 soundtest.frequency.d4 soundtest.frequency.d5 soundtest.frequency.e4 soundtest.frequency.f4 soundtest.frequency.g4 soundtest.sound soundtest.tone sqrttest stacktest stacktest.badinput stacktest.circulartest stacktest.smoketest steptest steptest.badinput steptest.procedure steptest.propertylist steptest.shadowvariable steptest.stepall steptest.steppedprocedure steptest.variable sumtest tantest testall testlib.repeatword testtest testtest.badinput testtest.scopetest testtest.smoketest texttest texttest.badinput texttest.smoketest thingtest thingtest.badinput thingtest.shadowedvariable thingtest.smoketest throwtest.badinput timecommand timertest timertest.badinput timertest.smoketest timetest timetest.badinput timetest.smoketest timewait totest totest.baddefaultinputs totest.chaineddefaults totest.chaineddefaultstest totest.defaultinput totest.defaultnumberofinputs totest.nooutput totest.output5 totest.outputdefaultinput totest.outputdefaultinput.twoinputs totest.outputrest totest.outputrest.twoinputs totest.repeatedinput totest.repeatedinputtest totest.rest totest.singleinput totest.smoketest traceinstruction tracetest tracetest.badinput tracetest.function tracetest.procedure tracetest.propertylist tracetest.traceall tracetest.tracedfunction tracetest.tracedprocedure tracetest.variable unburyall unicon waittest windowfileedittest windowfileedittest.bug1330752 windowfileedittest.longfilename windowsettest windowstest windowstest.button windowstest.button.badinput windowstest.checkbox windowstest.checkbox.badinput windowstest.checkbox.deletegroupbox windowstest.combobox windowstest.combobox.badinput windowstest.debugwindows windowstest.debugwindows.badinput windowstest.debugwindows.stress windowstest.dialog.badinput windowstest.dialog.badinput.fromcallback windowstest.dialog.smoketest windowstest.groupbox windowstest.groupbox.badinput windowstest.listbox windowstest.listbox.badinput windowstest.mainwindow.smoketest windowstest.radiobutton windowstest.radiobutton.badinput windowstest.radiobutton.deletegroupbox windowstest.regressiontest windowstest.scrollbar windowstest.scrollbar.badinput windowstest.setup windowstest.static windowstest.static.badinput windowstest.window.badinput windowstest.window.smoketest windowtest wordproctest wordptest wordtest xcor ycor yesnoboxtest yesnoboxtest.badinput yesnoboxtest.smoketest ~ignoreme ~ignoremewascalled] [caseignoredp erract erract.was.called instruction isok lambda.function.ran realcontents savedburied startup string testlog thesum totest.array tracetest.tracedplist ~ignoremewascalled] [burytest.buriedplist steptest.steppedplist tracetest.tracedplist]] , as expected.
PASS: CONTENTS returned [[] [] []] , as expected.
INFO: Called UNBURYALL
PASS: [BURIED] returned [[] [] []] , as expected.
CALL: ERASETEST.ERASEDPROCEDURE
PASS: [PROCEDURE? "ERASETEST.ERASEDPROCEDURE] returned true , as expected.
PASS: [MEMBER? "ERASETEST.ERASEDPROCEDURE (ITEM 1 CONTENTS)] returned true , as expected.
CALL: ERASE "ERASETEST.ERASEDPROCEDURE
INFO: Executing invalid instruction: [ERASETEST.ERASEDPROCEDUE]
PASS: Running [ERASETEST.ERASEDPROCEDUE] set error code to 13 , as expected.
INFO: ITEM 2 ERROR output [I don't know how to ERASETEST.ERASEDPROCEDUE] .
PASS: [PROCEDURE? "ERASETEST.ERASEDPROCEDURE] returned false , as expected.
PASS: [MEMBER? "ERASETEST.ERASEDPROCEDURE (ITEM 1 CONTENTS)] returned false , as expected.
PASS: [MEMBERP "ERASETEST.VARIABLE (ITEM 2 NAMES)] returned true , as expected.
CALL: ERASE NAMELIST "ERASETEST.BURIEDVARIABLE
PASS: [MEMBERP "ERASETEST.BURIEDVARIABLE (ITEM 2 NAMES)] returned false , as expected.
INFO: Executing invalid instruction: [:ERASETEST.BURIEDVARIABLE = 123]
PASS: Running [:ERASETEST.BURIEDVARIABLE = 123] set error code to 11 , as expected.
INFO: ITEM 2 ERROR output [ERASETEST.BURIEDVARIABLE has no value] .
CALL: PPROP "ERASETEST.ERASEDPLIST "SOMEPROPERTY 123
PASS: [GPROP "ERASETEST.ERASEDPLIST "SOMEPROPERTY] returned 123 , as expected.
PASS: [MEMBERP "ERASETEST.ERASEDPLIST (ITEM 3 PLISTS)] returned true , as expected.
CALL: ERASE PLLIST "ERASETEST.ERASEDPLIST
PASS: [GPROP "ERASETEST.ERASEDPLIST "SOMEPROPERTY] returned [] , as expected.
PASS: [MEMBERP "ERASETEST.ERASEDPLIST (ITEM 3 PLISTS)] returned false , as expected.
PASS: [MEMBERP "ERASETEST.VARIABLE1 (ITEM 2 NAMES)] returned true , as expected.
PASS: [MEMBERP "ERASETEST.VARIABLE2 (ITEM 2 NAMES)] returned true , as expected.
CALL: ERN [ERASETEST.VARIABLE1 ERASETEST.VARIABLE2]
PASS: [MEMBERP "ERASETEST.VARIABLE1 (ITEM 2 NAMES)] returned false , as expected.
PASS: [MEMBERP "ERASETEST.VARIABLE2 (ITEM 2 NAMES)] returned false , as expected.
INFO: Executing invalid instruction: [:ERASETEST.VARIABLE1 = 123]
PASS: Running [:ERASETEST.VARIABLE1 = 123] set error code to 11 , as expected.
INFO: ITEM 2 ERROR output [ERASETEST.VARIABLE1 has no value] .
INFO: Executing invalid instruction: [:ERASETEST.VARIABLE2 = 321]
PASS: Running [:ERASETEST.VARIABLE2 = 321] set error code to 11 , as expected.
INFO: ITEM 2 ERROR output [ERASETEST.VARIABLE2 has no value] .
CALL: PPROP "ERASETEST.ERASEDPLIST1 "SOMEPROPERTY 123
CALL: PPROP "ERASETEST.ERASEDPLIST2 "SOMEPROPERTY 321
PASS: [GPROP "ERASETEST.ERASEDPLIST1 "SOMEPROPERTY] returned 123 , as expected.
PASS: [MEMBERP "ERASETEST.ERASEDPLIST1 (ITEM 3 PLISTS)] returned true , as expected.
PASS: [GPROP "ERASETEST.ERASEDPLIST2 "SOMEPROPERTY] returned 321 , as expected.
PASS: [MEMBERP "ERASETEST.ERASEDPLIST2 (ITEM 3 PLISTS)] returned true , as expected.
CALL: ERPL [ERASETEST.ERASEDPLIST1 ERASETEST.ERASEDPLIST2]
PASS: [GPROP "ERASETEST.ERASEDPLIST1 "SOMEPROPERTY] returned [] , as expected.
PASS: [MEMBERP "ERASETEST.ERASEDPLIST1 (ITEM 3 PLISTS)] returned false , as expected.
PASS: [GPROP "ERASETEST.ERASEDPLIST2 "SOMEPROPERTY] returned [] , as expected.
PASS: [MEMBERP "ERASETEST.ERASEDPLIST2 (ITEM 3 PLISTS)] returned false , as expected.
CALL: (ERASE [[nonexistent] [nonexistent] [nonexistent]] )
INFO: Executing invalid instruction: [(ERASE)]
PASS: Running [(ERASE)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to ERASE] .
INFO: Executing invalid instruction: [(ERASE "name "toomany)]
PASS: Running [(ERASE "name "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [(ERASE {name} )]
INFO: ITEM 1 ERROR output 4 .
INFO: ITEM 2 ERROR output [ERASE doesn't like {name} as input] .
INFO: Running invalid instruction: [(ERASE [[a] [b] {c}] )]
INFO: ITEM 1 ERROR output 4 .
INFO: ITEM 2 ERROR output [ERASE doesn't like {c} as input] .
INFO: Running invalid instruction: [(ERASE [a b {c}] )]
INFO: ITEM 1 ERROR output 4 .
INFO: ITEM 2 ERROR output [ERASE doesn't like {c} as input] .
INFO: Running invalid instruction: [(ERASE [[a b {c}]] )]
INFO: ITEM 1 ERROR output 4 .
INFO: ITEM 2 ERROR output [ERASE doesn't like {c} as input] .
INFO: Running invalid instruction: [(ERASE [[a] [b] [c] [d]] )]
INFO: ITEM 1 ERROR output 4 .
INFO: ITEM 2 ERROR output [ERASE doesn't like [[a] [b] [c] [d]] as input] .
INFO: Running invalid instruction: [(ERASE [[[a]]] )]
INFO: ITEM 1 ERROR output 4 .
INFO: ITEM 2 ERROR output [ERASE doesn't like [a] as input] .
INFO: Executing invalid instruction: [ERASE "FORWARD]
PASS: Running [ERASE "FORWARD] set error code to 22 , as expected.
INFO: ITEM 2 ERROR output [FORWARD is a primitive] .
INFO: Running invalid instruction: [(ERALL 10)]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [if doesn't like 10 as input] .
INFO: Running invalid instruction: [(ERALL [] )]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [if doesn't like [] as input] .
INFO: Running invalid instruction: [(ERALL {a} )]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [if doesn't like {a} as input] .
INFO: Running invalid instruction: [(ERALL "no)]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [if doesn't like no as input] .
INFO: Executing invalid instruction: [(ERALL "false "toomany)]
PASS: Running [(ERALL "false "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Executing invalid instruction: [(ERPS "toomany)]
PASS: Running [(ERPS "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Executing invalid instruction: [(ERNS "toomany)]
PASS: Running [(ERNS "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Executing invalid instruction: [(ERPLS "toomany)]
PASS: Running [(ERPLS "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Executing invalid instruction: [(ERN)]
PASS: Running [(ERN)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to ERN] .
INFO: Executing invalid instruction: [(ERN "a "toomany)]
PASS: Running [(ERN "a "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [(ERN {a} )]
INFO: ITEM 1 ERROR output 21 .
INFO: ITEM 2 ERROR output [namelist doesn't like {a} as input] .
INFO: Executing invalid instruction: [(ERPL)]
PASS: Running [(ERPL)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to ERPL] .
INFO: Executing invalid instruction: [(ERPL "a "toomany)]
PASS: Running [(ERPL "a "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [(ERPL {a} )]
INFO: ITEM 1 ERROR output 21 .
INFO: ITEM 2 ERROR output [pllist doesn't like {a} as input] .
PASS: [PROCEDURE? "ERASETEST.ERASEALL] returned true , as expected.
CALL: MAKE "version LOGOVERSION
PASS: [LIST? :version] returned true , as expected.
PASS: [COUNT :version] returned 3 , as expected.
PASS: [ITEM 1 :version] returned FMSLogo , as expected.
FAIL: [ITEM 2 :version] returned 6.10.0+ . We expected 6.10.0
PASS: [ITEM 3 :version] returned Windows , as expected.
INFO: Executing invalid instruction: [(LOGOVERSION "toomany)]
PASS: Running [(LOGOVERSION "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
CALL: REFRESH
INFO: Executing invalid instruction: [(REFRESH "toomany)]
PASS: Running [(REFRESH "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
CALL: NOREFRESH
INFO: Executing invalid instruction: [(NOREFRESH "toomany)]
PASS: Running [(NOREFRESH "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
PASS: [QUOTED "Hello] returned "Hello , as expected.
PASS: [QUOTED "] returned " , as expected.
PASS: [QUOTED 123] returned "123 , as expected.
PASS: [QUOTED [1 2 3]] returned [1 2 3] , as expected.
PASS: [QUOTED :quotedtest.array] returned {1 2 3} , as expected.
INFO: Executing invalid instruction: [(QUOTED)]
PASS: Running [(QUOTED)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to QUOTED] .
INFO: Executing invalid instruction: [(QUOTED "Hello "toomany)]
PASS: Running [(QUOTED "Hello "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
CALL: MESSAGEBOX [MESSAGEBOX Test] [Press "OK"]
INFO: Executing invalid instruction: [MESSAGEBOX [MESSAGEBOX Test] [Press "Cancel"]]
PASS: Running [MESSAGEBOX [MESSAGEBOX Test] [Press "Cancel"]] set error code to 16 , as expected.
INFO: ITEM 2 ERROR output [Stopping...] .
INFO: Executing invalid instruction: [(MESSAGEBOX [Title] )]
PASS: Running [(MESSAGEBOX [Title] )] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to MESSAGEBOX] .
INFO: Executing invalid instruction: [(MESSAGEBOX [Title] [Message] "toomany)]
PASS: Running [(MESSAGEBOX [Title] [Message] "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
PASS: [YESNOBOX [YESNOBOX Test] [Press "Yes"]] returned true , as expected.
PASS: [YESNOBOX [YESNOBOX Test] [Press "No"]] returned false , as expected.
INFO: Executing invalid instruction: [YESNOBOX [YESNOBOX Test] [Press "Cancel"]]
PASS: Running [YESNOBOX [YESNOBOX Test] [Press "Cancel"]] set error code to 16 , as expected.
INFO: ITEM 2 ERROR output [Stopping...] .
INFO: Executing invalid instruction: [IGNORE (YESNOBOX [Title] )]
PASS: Running [IGNORE (YESNOBOX [Title] )] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to YESNOBOX] .
INFO: Executing invalid instruction: [IGNORE (YESNOBOX [Title] [Question] "toomany)]
PASS: Running [IGNORE (YESNOBOX [Title] [Question] "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
PASS: [SELECTBOX [SELECTBOX Test: Select First] [First Second Third]] returned 1 , as expected.
PASS: [SELECTBOX [SELECTBOX Test: Select Second] [First Second Third]] returned 2 , as expected.
PASS: [SELECTBOX [SELECTBOX Test: Select Third] [First Second Third]] returned 3 , as expected.
INFO: Executing invalid instruction: [SELECTBOX [SELECTBOX Test: Press Cancel] [First Second Third]]
PASS: Running [SELECTBOX [SELECTBOX Test: Press Cancel] [First Second Third]] set error code to 16 , as expected.
INFO: ITEM 2 ERROR output [Stopping...] .
PASS: [SELECTBOX [SELECTBOX Test: No Choice (press ok)] []] returned 1 , as expected.
INFO: Executing invalid instruction: [IGNORE (SELECTBOX [Title] )]
PASS: Running [IGNORE (SELECTBOX [Title] )] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to SELECTBOX] .
INFO: Executing invalid instruction: [IGNORE (SELECTBOX [Title] [1 2 3] "toomany)]
PASS: Running [IGNORE (SELECTBOX [Title] [1 2 3] "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [IGNORE SELECTBOX [Title] {1 2 3}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SELECTBOX doesn't like {1 2 3} as input] .
INFO: Running invalid instruction: [IGNORE SELECTBOX [Title] "choices]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SELECTBOX doesn't like choices as input] .
INFO: Running invalid instruction: [IGNORE SELECTBOX [Title] 12345]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SELECTBOX doesn't like 12345 as input] .
PASS: [QUESTIONBOX [QUESTIONBOX Test] [Press OK without typing anything.]] returned [] , as expected.
PASS: [QUESTIONBOX [QUESTIONBOX Test] [Enter "Hello" and press OK.]] returned [Hello] , as expected.
PASS: [QUESTIONBOX [QUESTIONBOX Test] [Enter "Hi Bye" and press OK.]] returned [Hi Bye] , as expected.
INFO: Executing invalid instruction: [QUESTIONBOX [QUESTIONBOX Test] [Press Cancel.]]
PASS: Running [QUESTIONBOX [QUESTIONBOX Test] [Press Cancel.]] set error code to 16 , as expected.
INFO: ITEM 2 ERROR output [Stopping...] .
INFO: Executing invalid instruction: [IGNORE (QUESTIONBOX [Title] )]
PASS: Running [IGNORE (QUESTIONBOX [Title] )] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to QUESTIONBOX] .
INFO: Executing invalid instruction: [IGNORE (QUESTIONBOX [Title] [Question] "toomany)]
PASS: Running [IGNORE (QUESTIONBOX [Title] [Question] "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Executing invalid instruction: [(windowcreate "main "name [caption] 0 0 120 400)]
PASS: Running [(windowcreate "main "name [caption] 0 0 120 400)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to windowcreate] .
INFO: Executing invalid instruction: [(windowcreate "main "name [caption] 0 0 120 400 [] "toomany)]
PASS: Running [(windowcreate "main "name [caption] 0 0 120 400 [] "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [windowcreate "main "name10 [caption] [0] 0 120 400 []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [windowcreate doesn't like [0] as input] .
INFO: Running invalid instruction: [windowcreate "main "name20 [caption] {0} 0 120 400 []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [windowcreate doesn't like {0} as input] .
INFO: Running invalid instruction: [windowcreate "main "name25 [caption] 10.5 0 120 400 []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [windowcreate doesn't like 10.5 as input] .
INFO: Running invalid instruction: [windowcreate "main "name30 [caption] 0 [0] 120 400 []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [windowcreate doesn't like [0] as input] .
INFO: Running invalid instruction: [windowcreate "main "name40 [caption] 0 {0} 120 400 []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [windowcreate doesn't like {0} as input] .
INFO: Running invalid instruction: [windowcreate "main "name45 [caption] 0 10.5 120 400 []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [windowcreate doesn't like 10.5 as input] .
INFO: Running invalid instruction: [windowcreate "main "name50 [caption] 0 0 [120] 400 []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [windowcreate doesn't like [120] as input] .
INFO: Running invalid instruction: [windowcreate "main "name60 [caption] 0 0 {120} 400 []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [windowcreate doesn't like {120} as input] .
INFO: Running invalid instruction: [windowcreate "main "name70 [caption] 0 0 -120 400 []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [windowcreate doesn't like -120 as input] .
INFO: Running invalid instruction: [windowcreate "main "name75 [caption] 0 0 10.5 400 []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [windowcreate doesn't like 10.5 as input] .
INFO: Running invalid instruction: [windowcreate "main "name80 [caption] 0 0 120 [400] []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [windowcreate doesn't like [400] as input] .
INFO: Running invalid instruction: [windowcreate "main "name90 [caption] 0 0 120 {400} []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [windowcreate doesn't like {400} as input] .
INFO: Running invalid instruction: [windowcreate "main "name00 [caption] 0 0 120 -400 []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [windowcreate doesn't like -400 as input] .
INFO: Running invalid instruction: [windowcreate "main "name05 [caption] 0 0 120 10.5 []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [windowcreate doesn't like 10.5 as input] .
CALL: windowcreate "main "goodwindow [caption] 0 0 100 100 []
INFO: Running invalid instruction: [windowcreate "main "goodwindow [newcaption] 0 0 100 100 []]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
INFO: Executing invalid instruction: [(windowenable "goodwindow)]
PASS: Running [(windowenable "goodwindow)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to windowenable] .
INFO: Executing invalid instruction: [(windowenable "goodwindow "true "toomany)]
PASS: Running [(windowenable "goodwindow "true "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [windowenable "nonexistent "true]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
INFO: Running invalid instruction: [windowenable "goodwindow 1]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [windowenable doesn't like 1 as input] .
INFO: Running invalid instruction: [windowenable "goodwindow [true]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [windowenable doesn't like [true] as input] .
INFO: Running invalid instruction: [windowenable "goodwindow {true}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [windowenable doesn't like {true} as input] .
INFO: Executing invalid instruction: [(windowdelete)]
PASS: Running [(windowdelete)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to windowdelete] .
INFO: Executing invalid instruction: [(windowdelete "goodwindow "toomany)]
PASS: Running [(windowdelete "goodwindow "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Executing invalid instruction: [(dialogcreate "main "name [caption] 0 0 120 400)]
PASS: Running [(dialogcreate "main "name [caption] 0 0 120 400)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to dialogcreate] .
INFO: Executing invalid instruction: [(dialogcreate "main "name [caption] 0 0 120 400 [] "toomany)]
PASS: Running [(dialogcreate "main "name [caption] 0 0 120 400 [] "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [dialogcreate "main "name10 [caption] [0] 0 120 400 []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [dialogcreate doesn't like [0] as input] .
INFO: Running invalid instruction: [dialogcreate "main "name20 [caption] {0} 0 120 400 []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [dialogcreate doesn't like {0} as input] .
INFO: Running invalid instruction: [dialogcreate "main "name25 [caption] 10.5 0 120 400 []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [dialogcreate doesn't like 10.5 as input] .
INFO: Running invalid instruction: [dialogcreate "main "name30 [caption] 0 [0] 120 400 []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [dialogcreate doesn't like [0] as input] .
INFO: Running invalid instruction: [dialogcreate "main "name40 [caption] 0 {0} 120 400 []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [dialogcreate doesn't like {0} as input] .
INFO: Running invalid instruction: [dialogcreate "main "name45 [caption] 0 10.5 120 400 []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [dialogcreate doesn't like 10.5 as input] .
INFO: Running invalid instruction: [dialogcreate "main "name50 [caption] 0 0 [120] 400 []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [dialogcreate doesn't like [120] as input] .
INFO: Running invalid instruction: [dialogcreate "main "name60 [caption] 0 0 {120} 400 []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [dialogcreate doesn't like {120} as input] .
INFO: Running invalid instruction: [dialogcreate "main "name70 [caption] 0 0 -120 400 []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [dialogcreate doesn't like -120 as input] .
INFO: Running invalid instruction: [dialogcreate "main "name75 [caption] 0 0 10.5 400 []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [dialogcreate doesn't like 10.5 as input] .
INFO: Running invalid instruction: [dialogcreate "main "name80 [caption] 0 0 120 [400] []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [dialogcreate doesn't like [400] as input] .
INFO: Running invalid instruction: [dialogcreate "main "name90 [caption] 0 0 120 {400} []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [dialogcreate doesn't like {400} as input] .
INFO: Running invalid instruction: [dialogcreate "main "name00 [caption] 0 0 120 -400 []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [dialogcreate doesn't like -400 as input] .
INFO: Running invalid instruction: [dialogcreate "main "name05 [caption] 0 0 120 400.5 []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [dialogcreate doesn't like 400.5 as input] .
CALL: dialogcreate "main "gooddialog [caption] 0 0 100 100 [WINDOWSTEST.DIALOG.BADINPUT.FROMCALLBACK]
CALL: listboxcreate "main "notadialog 0 100 100 100
INFO: Running invalid instruction: [dialogcreate "main "gooddialog [newcaption] 0 0 100 100 []]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
INFO: Executing invalid instruction: [(dialogenable "gooddialog)]
PASS: Running [(dialogenable "gooddialog)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to dialogenable] .
INFO: Executing invalid instruction: [(dialogenable "gooddialog "true "toomany)]
PASS: Running [(dialogenable "gooddialog "true "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [dialogenable "nonexistent "true]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
INFO: Running invalid instruction: [dialogenable "notadialog "true]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
INFO: Running invalid instruction: [dialogenable "gooddialog 1]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [dialogenable doesn't like 1 as input] .
INFO: Running invalid instruction: [dialogenable "gooddialog [true]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [dialogenable doesn't like [true] as input] .
INFO: Running invalid instruction: [dialogenable "gooddialog {true}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [dialogenable doesn't like {true} as input] .
INFO: Executing invalid instruction: [(dialogdelete)]
PASS: Running [(dialogdelete)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to dialogdelete] .
INFO: Executing invalid instruction: [(dialogdelete "gooddialog "toomany)]
PASS: Running [(dialogdelete "gooddialog "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [dialogdelete "nonexistent]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
INFO: Running invalid instruction: [dialogdelete "notadialog]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
CALL: dialogdelete "gooddialog
CALL: listboxdelete "notadialog
CALL: WINDOWCREATE "main "windowstest.static "mytitle 0 0 100 100 []
CALL: STATICCREATE "windowstest.static "static [Initial Value] 0 0 100 20
CALL: STATICCREATE "static "static2 [Initial Value] 0 0 100 20
CALL: STATICUPDATE "static [New Value]
CALL: STATICDELETE "static
CALL: STATICDELETE "static2
CALL: WINDOWDELETE "windowtest.static
INFO: Executing invalid instruction: [(staticcreate "main "name [caption] 0 0 120)]
PASS: Running [(staticcreate "main "name [caption] 0 0 120)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to staticcreate] .
INFO: Executing invalid instruction: [(staticcreate "main "name [caption] 0 0 120 400 "toomany)]
PASS: Running [(staticcreate "main "name [caption] 0 0 120 400 "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [staticcreate "main "name10 [caption] [0] 0 120 400]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [staticcreate doesn't like [0] as input] .
INFO: Running invalid instruction: [staticcreate "main "name20 [caption] {0} 0 120 400]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [staticcreate doesn't like {0} as input] .
INFO: Running invalid instruction: [staticcreate "main "name25 [caption] 10.5 0 120 400]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [staticcreate doesn't like 10.5 as input] .
INFO: Running invalid instruction: [staticcreate "main "name30 [caption] 0 [0] 120 400]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [staticcreate doesn't like [0] as input] .
INFO: Running invalid instruction: [staticcreate "main "name40 [caption] 0 {0} 120 400]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [staticcreate doesn't like {0} as input] .
INFO: Running invalid instruction: [staticcreate "main "name45 [caption] 0 10.5 120 400]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [staticcreate doesn't like 10.5 as input] .
INFO: Running invalid instruction: [staticcreate "main "name50 [caption] 0 0 [120] 400]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [staticcreate doesn't like [120] as input] .
INFO: Running invalid instruction: [staticcreate "main "name60 [caption] 0 0 {120} 400]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [staticcreate doesn't like {120} as input] .
INFO: Running invalid instruction: [staticcreate "main "name70 [caption] 0 0 -120 400]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [staticcreate doesn't like -120 as input] .
INFO: Running invalid instruction: [staticcreate "main "name75 [caption] 0 0 10.5 400]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [staticcreate doesn't like 10.5 as input] .
INFO: Running invalid instruction: [staticcreate "main "name80 [caption] 0 0 120 [400]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [staticcreate doesn't like [400] as input] .
INFO: Running invalid instruction: [staticcreate "main "name90 [caption] 0 0 120 {400}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [staticcreate doesn't like {400} as input] .
INFO: Running invalid instruction: [staticcreate "main "name00 [caption] 0 0 120 -400]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [staticcreate doesn't like -400 as input] .
INFO: Running invalid instruction: [staticcreate "main "name05 [caption] 0 0 120 10.5]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [staticcreate doesn't like 10.5 as input] .
CALL: staticcreate "main "goodstatic [newcaption] 0 0 100 100
INFO: Running invalid instruction: [staticcreate "main "goodstatic [newcaption] 0 0 100 100]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
CALL: listboxcreate "main "notastatic 0 100 100 100
INFO: Executing invalid instruction: [(staticupdate "goodstatic)]
PASS: Running [(staticupdate "goodstatic)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to staticupdate] .
INFO: Executing invalid instruction: [(staticupdate "goodstatic "newtext "toomany)]
PASS: Running [(staticupdate "goodstatic "newtext "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [staticupdate "nonexistent "newtext]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
INFO: Running invalid instruction: [staticupdate "notastatic "newtext]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
INFO: Executing invalid instruction: [(staticdelete)]
PASS: Running [(staticdelete)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to staticdelete] .
INFO: Executing invalid instruction: [(staticdelete "goodstatic "toomany)]
PASS: Running [(staticdelete "goodstatic "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [staticdelete "nonexistent]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
INFO: Running invalid instruction: [staticdelete "notastatic]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
CALL: staticdelete "goodstatic
CALL: listboxdelete "notastatic
CALL: WINDOWCREATE "main "windowstest.listbox "mytitle 0 0 100 100 []
CALL: LISTBOXCREATE "windowstest.listbox "testlist 5 5 90 90
PASS: [LISTBOXGETSELECT "testlist] returned [] , as expected.
CALL: LISTBOXADDSTRING "testlist "firststring
PASS: [LISTBOXGETSELECT "testlist] returned [firststring] , as expected.
CALL: LISTBOXDELETESTRING "testlist 0
CALL: LISTBOXDELETESTRING "testlist 100
CALL: LISTBOXADDSTRING "testlist [secondstring]
PASS: [LISTBOXGETSELECT "testlist] returned [secondstring] , as expected.
CALL: LISTBOXENABLE "testlist "false
CALL: LISTBOXENABLE "testlist "true
INFO: Executing invalid instruction: [(listboxcreate "main "name 0 0 120)]
PASS: Running [(listboxcreate "main "name 0 0 120)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to listboxcreate] .
INFO: Executing invalid instruction: [(listboxcreate "main "name 0 0 120 400 "toomany)]
PASS: Running [(listboxcreate "main "name 0 0 120 400 "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [listboxcreate "main "name10 [0] 0 120 400]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [listboxcreate doesn't like [0] as input] .
INFO: Running invalid instruction: [listboxcreate "main "name20 {0} 0 120 400]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [listboxcreate doesn't like {0} as input] .
INFO: Running invalid instruction: [listboxcreate "main "name25 10.5 0 120 400]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [listboxcreate doesn't like 10.5 as input] .
INFO: Running invalid instruction: [listboxcreate "main "name30 0 [0] 120 400]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [listboxcreate doesn't like [0] as input] .
INFO: Running invalid instruction: [listboxcreate "main "name40 0 {0} 120 400]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [listboxcreate doesn't like {0} as input] .
INFO: Running invalid instruction: [listboxcreate "main "name45 0 10.5 120 400]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [listboxcreate doesn't like 10.5 as input] .
INFO: Running invalid instruction: [listboxcreate "main "name50 0 0 [120] 400]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [listboxcreate doesn't like [120] as input] .
INFO: Running invalid instruction: [listboxcreate "main "name60 0 0 {120} 400]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [listboxcreate doesn't like {120} as input] .
INFO: Running invalid instruction: [listboxcreate "main "name70 0 0 -120 400]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [listboxcreate doesn't like -120 as input] .
INFO: Running invalid instruction: [listboxcreate "main "name75 0 0 10.5 400]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [listboxcreate doesn't like 10.5 as input] .
INFO: Running invalid instruction: [listboxcreate "main "name80 0 0 120 [400]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [listboxcreate doesn't like [400] as input] .
INFO: Running invalid instruction: [listboxcreate "main "name90 0 0 120 {400}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [listboxcreate doesn't like {400} as input] .
INFO: Running invalid instruction: [listboxcreate "main "name00 0 0 120 -400]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [listboxcreate doesn't like -400 as input] .
INFO: Running invalid instruction: [listboxcreate "main "name05 0 0 120 10.5]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [listboxcreate doesn't like 10.5 as input] .
CALL: listboxcreate "main "goodlistbox 0 0 100 100
INFO: Running invalid instruction: [listboxcreate "main "goodlistbox 0 0 100 100]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
CALL: staticcreate "main "notalistbox [text] 0 100 100 100
INFO: Executing invalid instruction: [(listboxenable "goodlistbox)]
PASS: Running [(listboxenable "goodlistbox)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to listboxenable] .
INFO: Executing invalid instruction: [(listboxenable "goodlistbox "true "toomany)]
PASS: Running [(listboxenable "goodlistbox "true "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [listboxenable "doesnotexist "true]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
INFO: Running invalid instruction: [listboxenable "notalistbox "true]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
INFO: Running invalid instruction: [listboxenable "goodlistbox 1]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [listboxenable doesn't like 1 as input] .
INFO: Running invalid instruction: [listboxenable "goodlistbox [true]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [listboxenable doesn't like [true] as input] .
INFO: Running invalid instruction: [listboxenable "goodlistbox {true}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [listboxenable doesn't like {true} as input] .
INFO: Executing invalid instruction: [(listboxaddstring)]
PASS: Running [(listboxaddstring)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to listboxaddstring] .
INFO: Executing invalid instruction: [(listboxaddstring "goodlistbox "item "toomany)]
PASS: Running [(listboxaddstring "goodlistbox "item "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [listboxaddstring "nonexistent "item]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
INFO: Running invalid instruction: [listboxaddstring "notalistbox "item]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
INFO: Executing invalid instruction: [(listboxdeletestring "goodlistbox)]
PASS: Running [(listboxdeletestring "goodlistbox)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to listboxdeletestring] .
INFO: Executing invalid instruction: [(listboxdeletestring "goodlistbox 0 "toomany)]
PASS: Running [(listboxdeletestring "goodlistbox 0 "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
CALL: listboxaddstring "goodlistbox [selection]
INFO: Running invalid instruction: [listboxdeletestring "doesnotexist 0]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
INFO: Running invalid instruction: [listboxdeletestring "notalistbox 0]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
INFO: Running invalid instruction: [listboxdeletestring "goodlistbox -1]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [listboxdeletestring doesn't like -1 as input] .
INFO: Running invalid instruction: [listboxdeletestring "goodlistbox 10.5]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [listboxdeletestring doesn't like 10.5 as input] .
INFO: Running invalid instruction: [listboxdeletestring "goodlistbox [0]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [listboxdeletestring doesn't like [0] as input] .
INFO: Running invalid instruction: [listboxdeletestring "goodlistbox {0}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [listboxdeletestring doesn't like {0} as input] .
INFO: Running invalid instruction: [listboxdeletestring "goodlistbox "zero]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [listboxdeletestring doesn't like zero as input] .
PASS: [listboxgetselect "goodlistbox] returned [selection] , as expected.
INFO: Executing invalid instruction: [(listboxgetselect)]
PASS: Running [(listboxgetselect)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to listboxgetselect] .
INFO: Executing invalid instruction: [(listboxgetselect "goodlistbox "toomany)]
PASS: Running [(listboxgetselect "goodlistbox "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [ignore listboxgetselect "doesnotexist]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
INFO: Running invalid instruction: [ignore listboxgetselect "notalistbox]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
INFO: Executing invalid instruction: [(listboxdelete)]
PASS: Running [(listboxdelete)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to listboxdelete] .
INFO: Executing invalid instruction: [(listboxdelete "goodlistbox "toomany)]
PASS: Running [(listboxdelete "goodlistbox "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [listboxdelete "notalistbox]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
INFO: Running invalid instruction: [listboxdelete "doesnotexist]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
CALL: listboxdelete "goodlistbox
CALL: staticdelete "notalistbox
CALL: WINDOWCREATE "main "windowstest.combobox "mytitle 0 0 100 100 []
CALL: COMBOBOXCREATE "windowstest.combobox "combobox 5 5 90 90
PASS: [COMBOBOXGETTEXT "combobox] returned [] , as expected.
CALL: COMBOBOXADDSTRING "combobox "firststring
PASS: [COMBOBOXGETTEXT "combobox] returned [firststring] , as expected.
CALL: COMBOBOXDELETESTRING "combobox 0
PASS: [COMBOBOXGETTEXT "combobox] returned [] , as expected.
CALL: COMBOBOXDELETESTRING "combobox 100
CALL: COMBOBOXADDSTRING "combobox [secondstring]
PASS: [COMBOBOXGETTEXT "combobox] returned [secondstring] , as expected.
CALL: COMBOBOXSETTEXT "combobox "text
PASS: [COMBOBOXGETTEXT "combobox] returned [text] , as expected.
CALL: COMBOBOXENABLE "combobox "false
CALL: COMBOBOXENABLE "combobox "true
CALL: COMBOBOXDELETE "combobox
CALL: WINDOWDELETE "windowstest.combocombobox
INFO: Executing invalid instruction: [(comboboxcreate "main "name 0 0 120)]
PASS: Running [(comboboxcreate "main "name 0 0 120)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to comboboxcreate] .
INFO: Executing invalid instruction: [(comboboxcreate "main "name 0 0 120 400 "toomany)]
PASS: Running [(comboboxcreate "main "name 0 0 120 400 "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [comboboxcreate "main "name10 [0] 0 120 400]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [comboboxcreate doesn't like [0] as input] .
INFO: Running invalid instruction: [comboboxcreate "main "name20 {0} 0 120 400]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [comboboxcreate doesn't like {0} as input] .
INFO: Running invalid instruction: [comboboxcreate "main "name25 10.5 0 120 400]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [comboboxcreate doesn't like 10.5 as input] .
INFO: Running invalid instruction: [comboboxcreate "main "name30 0 [0] 120 400]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [comboboxcreate doesn't like [0] as input] .
INFO: Running invalid instruction: [comboboxcreate "main "name40 0 {0} 120 400]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [comboboxcreate doesn't like {0} as input] .
INFO: Running invalid instruction: [comboboxcreate "main "name45 0 10.5 120 400]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [comboboxcreate doesn't like 10.5 as input] .
INFO: Running invalid instruction: [comboboxcreate "main "name50 0 0 [120] 400]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [comboboxcreate doesn't like [120] as input] .
INFO: Running invalid instruction: [comboboxcreate "main "name60 0 0 {120} 400]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [comboboxcreate doesn't like {120} as input] .
INFO: Running invalid instruction: [comboboxcreate "main "name70 0 0 -120 400]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [comboboxcreate doesn't like -120 as input] .
INFO: Running invalid instruction: [comboboxcreate "main "name75 0 0 10.5 400]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [comboboxcreate doesn't like 10.5 as input] .
INFO: Running invalid instruction: [comboboxcreate "main "name80 0 0 120 [400]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [comboboxcreate doesn't like [400] as input] .
INFO: Running invalid instruction: [comboboxcreate "main "name90 0 0 120 {400}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [comboboxcreate doesn't like {400} as input] .
INFO: Running invalid instruction: [comboboxcreate "main "name00 0 0 120 -400]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [comboboxcreate doesn't like -400 as input] .
INFO: Running invalid instruction: [comboboxcreate "main "name05 0 0 120 10.5]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [comboboxcreate doesn't like 10.5 as input] .
CALL: comboboxcreate "main "goodcombobox 0 0 100 100
INFO: Running invalid instruction: [comboboxcreate "main "goodcombobox 0 0 100 100]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
CALL: staticcreate "main "notacombobox [text] 0 100 100 100
INFO: Executing invalid instruction: [(comboboxenable "goodcombobox)]
PASS: Running [(comboboxenable "goodcombobox)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to comboboxenable] .
INFO: Executing invalid instruction: [(comboboxenable "goodcombobox "true "toomany)]
PASS: Running [(comboboxenable "goodcombobox "true "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [comboboxenable "doesnotexist "true]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
INFO: Running invalid instruction: [comboboxenable "notacombobox "true]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
INFO: Running invalid instruction: [comboboxenable "goodcombobox 1]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [comboboxenable doesn't like 1 as input] .
INFO: Running invalid instruction: [comboboxenable "goodcombobox [true]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [comboboxenable doesn't like [true] as input] .
INFO: Running invalid instruction: [comboboxenable "goodcombobox {true}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [comboboxenable doesn't like {true} as input] .
INFO: Executing invalid instruction: [(comboboxaddstring)]
PASS: Running [(comboboxaddstring)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to comboboxaddstring] .
INFO: Executing invalid instruction: [(comboboxaddstring "goodcombobox "item "toomany)]
PASS: Running [(comboboxaddstring "goodcombobox "item "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [comboboxaddstring "nonexistent "item]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
INFO: Running invalid instruction: [comboboxaddstring "notacombobox "item]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
INFO: Executing invalid instruction: [(comboboxdeletestring "goodcombobox)]
PASS: Running [(comboboxdeletestring "goodcombobox)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to comboboxdeletestring] .
INFO: Executing invalid instruction: [(comboboxdeletestring "goodcombobox 0 "toomany)]
PASS: Running [(comboboxdeletestring "goodcombobox 0 "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [comboboxdeletestring "doesnotexist 0]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
INFO: Running invalid instruction: [comboboxdeletestring "notacombobox 0]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
INFO: Running invalid instruction: [comboboxdeletestring "goodcombobox -1]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [comboboxdeletestring doesn't like -1 as input] .
INFO: Running invalid instruction: [comboboxdeletestring "goodcombobox 10.5]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [comboboxdeletestring doesn't like 10.5 as input] .
INFO: Running invalid instruction: [comboboxdeletestring "goodcombobox [0]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [comboboxdeletestring doesn't like [0] as input] .
INFO: Running invalid instruction: [comboboxdeletestring "goodcombobox {0}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [comboboxdeletestring doesn't like {0} as input] .
INFO: Running invalid instruction: [comboboxdeletestring "goodcombobox "zero]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [comboboxdeletestring doesn't like zero as input] .
INFO: Executing invalid instruction: [(comboboxgettext)]
PASS: Running [(comboboxgettext)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to comboboxgettext] .
INFO: Executing invalid instruction: [(comboboxgettext "goodcombobox "toomany)]
PASS: Running [(comboboxgettext "goodcombobox "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [ignore comboboxgettext "doesnotexist]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
INFO: Running invalid instruction: [ignore comboboxgettext "notacombobox]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
INFO: Executing invalid instruction: [(comboboxsettext "goodcombobox)]
PASS: Running [(comboboxsettext "goodcombobox)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to comboboxsettext] .
INFO: Executing invalid instruction: [(comboboxsettext "goodcombobox "text "toomany)]
PASS: Running [(comboboxsettext "goodcombobox "text "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [comboboxsettext "doesnotexist "text]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
INFO: Running invalid instruction: [comboboxsettext "notacombobox "text]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
INFO: Executing invalid instruction: [(comboboxdelete)]
PASS: Running [(comboboxdelete)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to comboboxdelete] .
INFO: Executing invalid instruction: [(comboboxdelete "goodcombobox "toomany)]
PASS: Running [(comboboxdelete "goodcombobox "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [comboboxdelete "notacombobox]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
INFO: Running invalid instruction: [comboboxdelete "doesnotexist]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
CALL: comboboxdelete "goodcombobox
CALL: staticdelete "notacombobox
INFO: Executing invalid instruction: [(groupboxcreate "main "name 0 0 120)]
PASS: Running [(groupboxcreate "main "name 0 0 120)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to groupboxcreate] .
INFO: Executing invalid instruction: [(groupboxcreate "main "name 0 0 120 400 "toomany)]
PASS: Running [(groupboxcreate "main "name 0 0 120 400 "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [groupboxcreate "main "name10 [0] 0 120 400]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [groupboxcreate doesn't like [0] as input] .
INFO: Running invalid instruction: [groupboxcreate "main "name20 {0} 0 120 400]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [groupboxcreate doesn't like {0} as input] .
INFO: Running invalid instruction: [groupboxcreate "main "name25 10.5 0 120 400]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [groupboxcreate doesn't like 10.5 as input] .
INFO: Running invalid instruction: [groupboxcreate "main "name30 0 [0] 120 400]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [groupboxcreate doesn't like [0] as input] .
INFO: Running invalid instruction: [groupboxcreate "main "name40 0 {0} 120 400]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [groupboxcreate doesn't like {0} as input] .
INFO: Running invalid instruction: [groupboxcreate "main "name45 0 10.5 120 400]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [groupboxcreate doesn't like 10.5 as input] .
INFO: Running invalid instruction: [groupboxcreate "main "name50 0 0 [120] 400]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [groupboxcreate doesn't like [120] as input] .
INFO: Running invalid instruction: [groupboxcreate "main "name60 0 0 {120} 400]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [groupboxcreate doesn't like {120} as input] .
INFO: Running invalid instruction: [groupboxcreate "main "name70 0 0 -120 400]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [groupboxcreate doesn't like -120 as input] .
INFO: Running invalid instruction: [groupboxcreate "main "name75 0 0 10.5 400]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [groupboxcreate doesn't like 10.5 as input] .
INFO: Running invalid instruction: [groupboxcreate "main "name80 0 0 120 [400]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [groupboxcreate doesn't like [400] as input] .
INFO: Running invalid instruction: [groupboxcreate "main "name90 0 0 120 {400}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [groupboxcreate doesn't like {400} as input] .
INFO: Running invalid instruction: [groupboxcreate "main "name00 0 0 120 -400]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [groupboxcreate doesn't like -400 as input] .
INFO: Running invalid instruction: [groupboxcreate "main "name05 0 0 120 10.5]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [groupboxcreate doesn't like 10.5 as input] .
CALL: groupboxcreate "main "goodgroupbox 0 0 100 100
INFO: Running invalid instruction: [groupboxcreate "main "goodgroupbox 0 0 100 100]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
CALL: listboxcreate "main "notagroupbox 0 100 100 100
INFO: Executing invalid instruction: [(groupboxdelete)]
PASS: Running [(groupboxdelete)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to groupboxdelete] .
INFO: Executing invalid instruction: [(groupboxdelete "groupbox "toomany)]
PASS: Running [(groupboxdelete "groupbox "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [groupboxdelete "notagroupbox]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
INFO: Running invalid instruction: [groupboxdelete "doesnotexist]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
CALL: listboxdelete "notagroupbox
CALL: groupboxdelete "goodgroupbox
PASS: [RADIOBUTTONGET "radio1] returned true , as expected.
PASS: [RADIOBUTTONGET "radio2] returned false , as expected.
CALL: RADIOBUTTONSET "radio1 "false
PASS: [RADIOBUTTONGET "radio1] returned false , as expected.
CALL: RADIOBUTTONSET "radio2 "true
PASS: [RADIOBUTTONGET "radio2] returned true , as expected.
CALL: RADIOBUTTONENABLE "radio1 "false
CALL: RADIOBUTTONENABLE "radio1 "true
CALL: RADIOBUTTONDELETE "radio1
CALL: RADIOBUTTONDELETE "radio2
CALL: GROUPBOXCREATE "main "groupbox 10 5 80 60
INFO: Executing invalid instruction: [(radiobuttoncreate "main "groupbox "name "label 0 0 10)]
PASS: Running [(radiobuttoncreate "main "groupbox "name "label 0 0 10)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to radiobuttoncreate] .
INFO: Executing invalid instruction: [(radiobuttoncreate "main "groupbox "name "label 0 0 10 80 "toomany)]
PASS: Running [(radiobuttoncreate "main "groupbox "name "label 0 0 10 80 "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [radiobuttoncreate "main "notfound "name01 "label [10] 10 80 20]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [radiobuttoncreate doesn't like [10] as input] .
INFO: Running invalid instruction: [radiobuttoncreate "main "groupbox "name10 "label [10] 10 80 20]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [radiobuttoncreate doesn't like [10] as input] .
INFO: Running invalid instruction: [radiobuttoncreate "main "groupbox "name20 "label {10} 10 80 20]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [radiobuttoncreate doesn't like {10} as input] .
INFO: Running invalid instruction: [radiobuttoncreate "main "groupbox "name25 "label 10.5 10 80 20]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [radiobuttoncreate doesn't like 10.5 as input] .
INFO: Running invalid instruction: [radiobuttoncreate "main "groupbox "name30 "label 10 [10] 80 20]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [radiobuttoncreate doesn't like [10] as input] .
INFO: Running invalid instruction: [radiobuttoncreate "main "groupbox "name40 "label 10 {10} 80 20]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [radiobuttoncreate doesn't like {10} as input] .
INFO: Running invalid instruction: [radiobuttoncreate "main "groupbox "name45 "label 10 10.5 80 20]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [radiobuttoncreate doesn't like 10.5 as input] .
INFO: Running invalid instruction: [radiobuttoncreate "main "groupbox "name50 "label 10 10 [80] 20]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [radiobuttoncreate doesn't like [80] as input] .
INFO: Running invalid instruction: [radiobuttoncreate "main "groupbox "name60 "label 10 10 {80} 20]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [radiobuttoncreate doesn't like {80} as input] .
INFO: Running invalid instruction: [radiobuttoncreate "main "groupbox "name70 "label 10 10 -80 20]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [radiobuttoncreate doesn't like -80 as input] .
INFO: Running invalid instruction: [radiobuttoncreate "main "groupbox "name75 "label 10 10 8.5 20]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [radiobuttoncreate doesn't like 8.5 as input] .
INFO: Running invalid instruction: [radiobuttoncreate "main "groupbox "name80 "label 10 10 80 [20]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [radiobuttoncreate doesn't like [20] as input] .
INFO: Running invalid instruction: [radiobuttoncreate "main "groupbox "name90 "label 10 10 80 {20}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [radiobuttoncreate doesn't like {20} as input] .
INFO: Running invalid instruction: [radiobuttoncreate "main "groupbox "name00 "label 10 10 80 -20]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [radiobuttoncreate doesn't like -20 as input] .
INFO: Running invalid instruction: [radiobuttoncreate "main "groupbox "name05 "label 10 10 80 20.5]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [radiobuttoncreate doesn't like 20.5 as input] .
CALL: radiobuttoncreate "main "groupbox "goodradiobutton "label 10 10 80 20
INFO: Running invalid instruction: [radiobuttoncreate "main "groupbox "goodradiobutton "label 10 10 80 20]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
CALL: staticcreate "main "notaradiobutton [text] 0 100 100 100
INFO: Executing invalid instruction: [(radiobuttonenable "goodradiobutton)]
PASS: Running [(radiobuttonenable "goodradiobutton)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to radiobuttonenable] .
INFO: Executing invalid instruction: [(radiobuttonenable "goodradiobutton "true "toomany)]
PASS: Running [(radiobuttonenable "goodradiobutton "true "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [radiobuttonenable "doesnotexist "true]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
INFO: Running invalid instruction: [radiobuttonenable "notaradiobutton "true]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
INFO: Running invalid instruction: [radiobuttonenable "goodradiobutton 1]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [radiobuttonenable doesn't like 1 as input] .
INFO: Running invalid instruction: [radiobuttonenable "goodradiobutton [true]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [radiobuttonenable doesn't like [true] as input] .
INFO: Running invalid instruction: [radiobuttonenable "goodradiobutton {true}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [radiobuttonenable doesn't like {true} as input] .
INFO: Executing invalid instruction: [(radiobuttonget)]
PASS: Running [(radiobuttonget)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to radiobuttonget] .
INFO: Executing invalid instruction: [(radiobuttonget "goodradiobutton "toomany)]
PASS: Running [(radiobuttonget "goodradiobutton "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [radiobuttonget "doesnotexist "item]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
INFO: Running invalid instruction: [radiobuttonget "notaradiobutton "item]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
CALL: radiobuttonset "goodradiobutton "false
INFO: Executing invalid instruction: [(radiobuttonset "goodradiobutton)]
PASS: Running [(radiobuttonset "goodradiobutton)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to radiobuttonset] .
INFO: Executing invalid instruction: [(radiobuttonset "goodradiobutton "true "toomany)]
PASS: Running [(radiobuttonset "goodradiobutton "true "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [radiobuttonset "doesnotexist "true]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
INFO: Running invalid instruction: [radiobuttonset "notaradiobutton "true]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
INFO: Running invalid instruction: [radiobuttonset "goodradiobutton 1]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [radiobuttonset doesn't like 1 as input] .
INFO: Running invalid instruction: [radiobuttonset "goodradiobutton [true]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [radiobuttonset doesn't like [true] as input] .
INFO: Running invalid instruction: [radiobuttonset "goodradiobutton {true}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [radiobuttonset doesn't like {true} as input] .
PASS: [radiobuttonget "goodradiobutton] returned false , as expected.
INFO: Executing invalid instruction: [(radiobuttondelete)]
PASS: Running [(radiobuttondelete)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to radiobuttondelete] .
INFO: Executing invalid instruction: [(radiobuttondelete "goodradiobutton "toomany)]
PASS: Running [(radiobuttondelete "goodradiobutton "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [radiobuttondelete "notaradiobutton]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
INFO: Running invalid instruction: [radiobuttondelete "doesnotexist]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
CALL: radiobuttondelete "goodradiobutton
CALL: groupboxdelete "groupbox
CALL: staticdelete "notaradiobutton
CALL: WINDOWCREATE "main "windowstest.radiobutton "mytitle 0 0 100 100 []
CALL: GROUPBOXCREATE "windowstest.radiobutton "groupbox 10 5 80 60
CALL: RADIOBUTTONCREATE "windowstest.radiobutton "groupbox "radio [Radio] 20 15 60 20
CALL: GROUPBOXDELETE "groupbox
CALL: RADIOBUTTONSET "radio "false
PASS: [RADIOBUTTONGET "radio] returned false , as expected.
CALL: RADIOBUTTONENABLE "radio "false
CALL: RADIOBUTTONENABLE "radio "true
CALL: RADIOBUTTONDELETE "radio
CALL: WINDOWDELETE "windowstest.radiobutton
CALL: CHECKBOXSET "checkbox1 "true
CALL: CHECKBOXSET "checkbox2 "false
PASS: [CHECKBOXGET "checkbox1] returned true , as expected.
PASS: [CHECKBOXGET "checkbox2] returned false , as expected.
CALL: CHECKBOXSET "checkbox1 "false
PASS: [CHECKBOXGET "checkbox1] returned false , as expected.
PASS: [CHECKBOXGET "checkbox2] returned false , as expected.
CALL: CHECKBOXENABLE "checkbox1 "false
CALL: CHECKBOXENABLE "checkbox1 "true
CALL: CHECKBOXDELETE "checkbox1
CALL: CHECKBOXDELETE "checkbox2
CALL: GROUPBOXCREATE "main "groupbox 10 5 80 60
INFO: Executing invalid instruction: [(checkboxcreate "main "groupbox "name "label 0 0 10)]
PASS: Running [(checkboxcreate "main "groupbox "name "label 0 0 10)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to checkboxcreate] .
INFO: Executing invalid instruction: [(checkboxcreate "main "groupbox "name "label 0 0 10 80 "toomany)]
PASS: Running [(checkboxcreate "main "groupbox "name "label 0 0 10 80 "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [checkboxcreate "main "notfound "name01 "label [10] 10 80 20]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [checkboxcreate doesn't like [10] as input] .
INFO: Running invalid instruction: [checkboxcreate "main "groupbox "name10 "label [10] 10 80 20]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [checkboxcreate doesn't like [10] as input] .
INFO: Running invalid instruction: [checkboxcreate "main "groupbox "name20 "label {10} 10 80 20]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [checkboxcreate doesn't like {10} as input] .
INFO: Running invalid instruction: [checkboxcreate "main "groupbox "name25 "label 10.5 10 80 20]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [checkboxcreate doesn't like 10.5 as input] .
INFO: Running invalid instruction: [checkboxcreate "main "groupbox "name30 "label 10 [10] 80 20]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [checkboxcreate doesn't like [10] as input] .
INFO: Running invalid instruction: [checkboxcreate "main "groupbox "name40 "label 10 {10} 80 20]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [checkboxcreate doesn't like {10} as input] .
INFO: Running invalid instruction: [checkboxcreate "main "groupbox "name45 "label 10 10.5 80 20]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [checkboxcreate doesn't like 10.5 as input] .
INFO: Running invalid instruction: [checkboxcreate "main "groupbox "name50 "label 10 10 [80] 20]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [checkboxcreate doesn't like [80] as input] .
INFO: Running invalid instruction: [checkboxcreate "main "groupbox "name60 "label 10 10 {80} 20]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [checkboxcreate doesn't like {80} as input] .
INFO: Running invalid instruction: [checkboxcreate "main "groupbox "name70 "label 10 10 -80 20]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [checkboxcreate doesn't like -80 as input] .
INFO: Running invalid instruction: [checkboxcreate "main "groupbox "name75 "label 10 10 8.5 20]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [checkboxcreate doesn't like 8.5 as input] .
INFO: Running invalid instruction: [checkboxcreate "main "groupbox "name80 "label 10 10 80 [20]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [checkboxcreate doesn't like [20] as input] .
INFO: Running invalid instruction: [checkboxcreate "main "groupbox "name90 "label 10 10 80 {20}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [checkboxcreate doesn't like {20} as input] .
INFO: Running invalid instruction: [checkboxcreate "main "groupbox "name00 "label 10 10 80 -20]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [checkboxcreate doesn't like -20 as input] .
INFO: Running invalid instruction: [checkboxcreate "main "groupbox "name05 "label 10 10 80 20.5]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [checkboxcreate doesn't like 20.5 as input] .
CALL: checkboxcreate "main "groupbox "goodcheckbox "label 10 10 80 20
INFO: Running invalid instruction: [checkboxcreate "main "groupbox "goodcheckbox "label 10 10 80 20]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
CALL: staticcreate "main "notacheckbox [text] 0 100 100 100
INFO: Executing invalid instruction: [(checkboxenable "goodcheckbox)]
PASS: Running [(checkboxenable "goodcheckbox)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to checkboxenable] .
INFO: Executing invalid instruction: [(checkboxenable "goodcheckbox "true "toomany)]
PASS: Running [(checkboxenable "goodcheckbox "true "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [checkboxenable "doesnotexist "true]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
INFO: Running invalid instruction: [checkboxenable "notacheckbox "true]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
INFO: Running invalid instruction: [checkboxenable "goodcheckbox 1]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [checkboxenable doesn't like 1 as input] .
INFO: Running invalid instruction: [checkboxenable "goodcheckbox [true]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [checkboxenable doesn't like [true] as input] .
INFO: Running invalid instruction: [checkboxenable "goodcheckbox {true}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [checkboxenable doesn't like {true} as input] .
INFO: Executing invalid instruction: [(checkboxget)]
PASS: Running [(checkboxget)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to checkboxget] .
INFO: Executing invalid instruction: [(checkboxget "goodcheckbox "toomany)]
PASS: Running [(checkboxget "goodcheckbox "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [checkboxget "doesnotexist "item]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
INFO: Running invalid instruction: [checkboxget "notacheckbox "item]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
INFO: Executing invalid instruction: [(checkboxset "goodcheckbox)]
PASS: Running [(checkboxset "goodcheckbox)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to checkboxset] .
INFO: Executing invalid instruction: [(checkboxset "goodcheckbox "true "toomany)]
PASS: Running [(checkboxset "goodcheckbox "true "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
CALL: checkboxset "goodcheckbox "false
INFO: Running invalid instruction: [checkboxset "doesnotexist "true]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
INFO: Running invalid instruction: [checkboxset "notacheckbox "true]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
INFO: Running invalid instruction: [checkboxset "goodcheckbox 1]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [checkboxset doesn't like 1 as input] .
INFO: Running invalid instruction: [checkboxset "goodcheckbox [true]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [checkboxset doesn't like [true] as input] .
INFO: Running invalid instruction: [checkboxset "goodcheckbox {true}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [checkboxset doesn't like {true} as input] .
PASS: [checkboxget "goodcheckbox] returned false , as expected.
INFO: Executing invalid instruction: [(checkboxdelete)]
PASS: Running [(checkboxdelete)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to checkboxdelete] .
INFO: Executing invalid instruction: [(checkboxdelete "goodcheckbox "toomany)]
PASS: Running [(checkboxdelete "goodcheckbox "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [checkboxdelete "notacheckbox]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
INFO: Running invalid instruction: [checkboxdelete "doesnotexist]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
CALL: checkboxdelete "goodcheckbox
CALL: groupboxdelete "groupbox
CALL: staticdelete "notacheckbox
CALL: WINDOWCREATE "main "windowstest.checkbox "mytitle 0 0 100 100 []
CALL: GROUPBOXCREATE "windowstest.checkbox "groupbox 10 5 80 60
CALL: CHECKBOXCREATE "windowstest.checkbox "groupbox "checkbox [Checkbox] 20 15 60 20
CALL: GROUPBOXDELETE "groupbox
CALL: CHECKBOXSET "checkbox "false
PASS: [CHECKBOXGET "checkbox] returned false , as expected.
CALL: CHECKBOXENABLE "checkbox "false
CALL: CHECKBOXENABLE "checkbox "true
CALL: CHECKBOXDELETE "checkbox
CALL: WINDOWDELETE "windowstest.checkbox
CALL: WINDOWCREATE "main "windowstest.scrollbar "mytitle 0 0 100 100 []
CALL: SCROLLBARCREATE "windowstest.scrollbar "horizontal 0 90 100 20 []
CALL: SCROLLBARCREATE "windowstest.scrollbar "vertical 90 0 20 100 []
PASS: [SCROLLBARGET "horizontal] returned 0 , as expected.
CALL: SCROLLBARSET "horizontal 0 100 27
PASS: [SCROLLBARGET "horizontal] returned 27 , as expected.
CALL: SCROLLBARSET "horizontal 0 100 91
PASS: [SCROLLBARGET "horizontal] returned 91 , as expected.
CALL: SCROLLBARSET "horizontal -10 10 -10
PASS: [SCROLLBARGET "horizontal] returned -10 , as expected.
CALL: SCROLLBARSET "horizontal -20 -10 -15
PASS: [SCROLLBARGET "horizontal] returned -15 , as expected.
CALL: SCROLLBARSET "vertical 50 60 55
PASS: [SCROLLBARGET "vertical] returned 55 , as expected.
PASS: [SCROLLBARGET "horizontal] returned -15 , as expected.
CALL: SCROLLBARENABLE "horizontal "false
CALL: SCROLLBARENABLE "horizontal "false
CALL: SCROLLBARENABLE "horizontal "true
CALL: SCROLLBARDELETE "horizontal
CALL: SCROLLBARDELETE "vertical
CALL: WINDOWDELETE "windowstest.scrollbar
INFO: Executing invalid instruction: [(scrollbarcreate "main "name 0 0 100 10)]
PASS: Running [(scrollbarcreate "main "name 0 0 100 10)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to scrollbarcreate] .
INFO: Executing invalid instruction: [(scrollbarcreate "main "name 0 0 100 10 [] "toomany)]
PASS: Running [(scrollbarcreate "main "name 0 0 100 10 [] "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [scrollbarcreate "main "name10 [0] 0 120 10 []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [scrollbarcreate doesn't like [0] as input] .
INFO: Running invalid instruction: [scrollbarcreate "main "name20 {0} 0 120 10 []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [scrollbarcreate doesn't like {0} as input] .
INFO: Running invalid instruction: [scrollbarcreate "main "name25 10.5 0 120 10 []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [scrollbarcreate doesn't like 10.5 as input] .
INFO: Running invalid instruction: [scrollbarcreate "main "name30 0 [0] 120 10 []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [scrollbarcreate doesn't like [0] as input] .
INFO: Running invalid instruction: [scrollbarcreate "main "name40 0 {0} 120 10 []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [scrollbarcreate doesn't like {0} as input] .
INFO: Running invalid instruction: [scrollbarcreate "main "name45 0 10.5 120 10 []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [scrollbarcreate doesn't like 10.5 as input] .
INFO: Running invalid instruction: [scrollbarcreate "main "name50 0 0 [120] 10 []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [scrollbarcreate doesn't like [120] as input] .
INFO: Running invalid instruction: [scrollbarcreate "main "name60 0 0 {120} 10 []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [scrollbarcreate doesn't like {120} as input] .
INFO: Running invalid instruction: [scrollbarcreate "main "name70 0 0 -120 10 []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [scrollbarcreate doesn't like -120 as input] .
INFO: Running invalid instruction: [scrollbarcreate "main "name75 0 0 10.5 10 []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [scrollbarcreate doesn't like 10.5 as input] .
INFO: Running invalid instruction: [scrollbarcreate "main "name80 0 0 120 [10] []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [scrollbarcreate doesn't like [10] as input] .
INFO: Running invalid instruction: [scrollbarcreate "main "name90 0 0 120 {10} []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [scrollbarcreate doesn't like {10} as input] .
INFO: Running invalid instruction: [scrollbarcreate "main "name00 0 0 120 -10 []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [scrollbarcreate doesn't like -10 as input] .
INFO: Running invalid instruction: [scrollbarcreate "main "name05 0 0 120 10.5 []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [scrollbarcreate doesn't like 10.5 as input] .
CALL: scrollbarcreate "main "goodscrollbar 0 0 100 10 []
INFO: Running invalid instruction: [scrollbarcreate "main "goodscrollbar 0 0 100 10 []]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
CALL: staticcreate "main "notascrollbar [text] 0 100 100 100
INFO: Executing invalid instruction: [(scrollbarenable "goodscrollbar)]
PASS: Running [(scrollbarenable "goodscrollbar)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to scrollbarenable] .
INFO: Executing invalid instruction: [(scrollbarenable "goodscrollbar "true "toomany)]
PASS: Running [(scrollbarenable "goodscrollbar "true "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [scrollbarenable "doesnotexist "true]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
INFO: Running invalid instruction: [scrollbarenable "notascrollbar "true]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
INFO: Running invalid instruction: [scrollbarenable "goodscrollbar 1]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [scrollbarenable doesn't like 1 as input] .
INFO: Running invalid instruction: [scrollbarenable "goodscrollbar [true]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [scrollbarenable doesn't like [true] as input] .
INFO: Running invalid instruction: [scrollbarenable "goodscrollbar {true}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [scrollbarenable doesn't like {true} as input] .
INFO: Executing invalid instruction: [(scrollbarget)]
PASS: Running [(scrollbarget)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to scrollbarget] .
INFO: Executing invalid instruction: [(scrollbarget "goodscrollbar "toomany)]
PASS: Running [(scrollbarget "goodscrollbar "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [ignore scrollbarget "nonexistent]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
INFO: Running invalid instruction: [ignore scrollbarget "notascrollbar]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
INFO: Executing invalid instruction: [(scrollbarset "goodscrollbar 0 100)]
PASS: Running [(scrollbarset "goodscrollbar 0 100)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to scrollbarset] .
INFO: Executing invalid instruction: [(scrollbarset "goodscrollbar 0 100 50 "toomany)]
PASS: Running [(scrollbarset "goodscrollbar 0 100 50 "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [scrollbarset "doesnotexist 0 100 50]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
INFO: Running invalid instruction: [scrollbarset "notascrollbar 0 100 50]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
CALL: scrollbarset "goodscrollbar 110 111 110
INFO: Running invalid instruction: [scrollbarset "goodscrollbar [0] 10 5]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [scrollbarset doesn't like [0] as input] .
INFO: Running invalid instruction: [scrollbarset "goodscrollbar {0} 10 5]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [scrollbarset doesn't like {0} as input] .
INFO: Running invalid instruction: [scrollbarset "goodscrollbar 0.5 10 5]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [scrollbarset doesn't like 0.5 as input] .
INFO: Running invalid instruction: [scrollbarset "goodscrollbar "zero 10 5]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [scrollbarset doesn't like zero as input] .
INFO: Running invalid instruction: [scrollbarset "goodscrollbar 0 [10] 5]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [scrollbarset doesn't like [10] as input] .
INFO: Running invalid instruction: [scrollbarset "goodscrollbar 0 {10} 5]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [scrollbarset doesn't like {10} as input] .
INFO: Running invalid instruction: [scrollbarset "goodscrollbar 0 10.5 5]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [scrollbarset doesn't like 10.5 as input] .
INFO: Running invalid instruction: [scrollbarset "goodscrollbar 0 "ten [5]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [scrollbarset doesn't like ten as input] .
INFO: Running invalid instruction: [scrollbarset "goodscrollbar 0 10 {5}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [scrollbarset doesn't like {5} as input] .
INFO: Running invalid instruction: [scrollbarset "goodscrollbar 0 10 5.5]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [scrollbarset doesn't like 5.5 as input] .
INFO: Running invalid instruction: [scrollbarset "goodscrollbar 0 10 "five]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [scrollbarset doesn't like five as input] .
INFO: Running invalid instruction: [scrollbarset "goodscrollbar 10 0 5]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [scrollbarset doesn't like 0 as input] .
PASS: [scrollbarget "goodscrollbar] returned 110 , as expected.
INFO: Executing invalid instruction: [(scrollbardelete)]
PASS: Running [(scrollbardelete)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to scrollbardelete] .
INFO: Executing invalid instruction: [(scrollbardelete "goodscrollbar "toomany)]
PASS: Running [(scrollbardelete "goodscrollbar "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [scrollbardelete "notascrollbar]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
INFO: Running invalid instruction: [scrollbardelete "doesnotexist]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
CALL: staticdelete "notascrollbar
CALL: scrollbardelete "goodscrollbar
CALL: WINDOWCREATE "main "windowstest.button "mytitle 0 0 100 100 []
CALL: BUTTONCREATE "windowstest.button "button [initial text] 10 40 20 80 []
CALL: BUTTONUPDATE "button [new text]
CALL: BUTTONENABLE "button "false
CALL: BUTTONENABLE "button "false
CALL: BUTTONENABLE "button "true
CALL: BUTTONDELETE "button
CALL: WINDOWDELETE "windowstest.button
INFO: Executing invalid instruction: [(buttoncreate "main "name "label 0 0 100 10)]
PASS: Running [(buttoncreate "main "name "label 0 0 100 10)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to buttoncreate] .
INFO: Executing invalid instruction: [(buttoncreate "main "name "label 0 0 100 10 [] "toomany)]
PASS: Running [(buttoncreate "main "name "label 0 0 100 10 [] "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [buttoncreate "main "name10 "label [0] 0 120 10 []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [buttoncreate doesn't like [0] as input] .
INFO: Running invalid instruction: [buttoncreate "main "name20 "label {0} 0 120 10 []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [buttoncreate doesn't like {0} as input] .
INFO: Running invalid instruction: [buttoncreate "main "name25 "label 10.5 0 120 10 []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [buttoncreate doesn't like 10.5 as input] .
INFO: Running invalid instruction: [buttoncreate "main "name30 "label 0 [0] 120 10 []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [buttoncreate doesn't like [0] as input] .
INFO: Running invalid instruction: [buttoncreate "main "name40 "label 0 {0} 120 10 []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [buttoncreate doesn't like {0} as input] .
INFO: Running invalid instruction: [buttoncreate "main "name45 "label 0 10.5 120 10 []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [buttoncreate doesn't like 10.5 as input] .
INFO: Running invalid instruction: [buttoncreate "main "name50 "label 0 0 [120] 10 []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [buttoncreate doesn't like [120] as input] .
INFO: Running invalid instruction: [buttoncreate "main "name60 "label 0 0 {120} 10 []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [buttoncreate doesn't like {120} as input] .
INFO: Running invalid instruction: [buttoncreate "main "name70 "label 0 0 -120 10 []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [buttoncreate doesn't like -120 as input] .
INFO: Running invalid instruction: [buttoncreate "main "name75 "label 0 0 10.5 10 []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [buttoncreate doesn't like 10.5 as input] .
INFO: Running invalid instruction: [buttoncreate "main "name80 "label 0 0 120 [10] []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [buttoncreate doesn't like [10] as input] .
INFO: Running invalid instruction: [buttoncreate "main "name90 "label 0 0 120 {10} []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [buttoncreate doesn't like {10} as input] .
INFO: Running invalid instruction: [buttoncreate "main "name00 "label 0 0 120 -10 []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [buttoncreate doesn't like -10 as input] .
INFO: Running invalid instruction: [buttoncreate "main "name05 "label 0 0 120 10.5 []]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [buttoncreate doesn't like 10.5 as input] .
CALL: buttoncreate "main "goodbutton "label 0 0 100 10 []
INFO: Running invalid instruction: [buttoncreate "main "goodbutton "label 0 0 100 10 []]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
CALL: staticcreate "main "notabutton [text] 0 100 100 100
INFO: Executing invalid instruction: [(buttonenable "goodbutton)]
PASS: Running [(buttonenable "goodbutton)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to buttonenable] .
INFO: Executing invalid instruction: [(buttonenable "goodbutton "true "toomany)]
PASS: Running [(buttonenable "goodbutton "true "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [buttonenable "doesnotexist "true]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
INFO: Running invalid instruction: [buttonenable "notabutton "true]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
INFO: Running invalid instruction: [buttonenable "goodbutton 1]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [buttonenable doesn't like 1 as input] .
INFO: Running invalid instruction: [buttonenable "goodbutton [true]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [buttonenable doesn't like [true] as input] .
INFO: Running invalid instruction: [buttonenable "goodbutton {true}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [buttonenable doesn't like {true} as input] .
INFO: Executing invalid instruction: [(buttonupdate "goodbutton)]
PASS: Running [(buttonupdate "goodbutton)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to buttonupdate] .
INFO: Executing invalid instruction: [(buttonupdate "goodbutton "newlabel "toomany)]
PASS: Running [(buttonupdate "goodbutton "newlabel "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [buttonupdate "nonexistent "newlabel]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
INFO: Running invalid instruction: [buttonupdate "notabutton "newlabel]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
INFO: Executing invalid instruction: [(buttondelete)]
PASS: Running [(buttondelete)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to buttondelete] .
INFO: Executing invalid instruction: [(buttondelete "goodbutton "toomany)]
PASS: Running [(buttondelete "goodbutton "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [buttondelete "notabutton]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
INFO: Running invalid instruction: [buttondelete "doesnotexist]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
CALL: staticdelete "notabutton
CALL: buttondelete "goodbutton
CALL: windowdelete "all
CALL: debugwindows
CALL: windowcreate "root "testwindow [window smoke test] 0 0 120 400 []
CALL: windowstest.setup "testwindow
CALL: debugwindows
CALL: windowdelete "testwindow
CALL: windowcreate "root :parentname "caption 0 0 100 200 []
CALL: staticcreate :parentname (word "s :parentname) "text 10 10 80 20
CALL: groupboxcreate :parentname (word "g :parentname) 10 30 80 40
CALL: radiobuttoncreate :parentname (word "g :parentname) (word "r :parentname) [Radio] 20 40 60 20
CALL: windowcreate "root :parentname "caption 0 0 100 200 []
CALL: staticcreate :parentname (word "s :parentname) "text 10 10 80 20
CALL: groupboxcreate :parentname (word "g :parentname) 10 30 80 40
CALL: radiobuttoncreate :parentname (word "g :parentname) (word "r :parentname) [Radio] 20 40 60 20
CALL: windowcreate "root :parentname "caption 0 0 100 200 []
CALL: staticcreate :parentname (word "s :parentname) "text 10 10 80 20
CALL: groupboxcreate :parentname (word "g :parentname) 10 30 80 40
CALL: radiobuttoncreate :parentname (word "g :parentname) (word "r :parentname) [Radio] 20 40 60 20
CALL: windowcreate "root :parentname "caption 0 0 100 200 []
CALL: staticcreate :parentname (word "s :parentname) "text 10 10 80 20
CALL: groupboxcreate :parentname (word "g :parentname) 10 30 80 40
CALL: radiobuttoncreate :parentname (word "g :parentname) (word "r :parentname) [Radio] 20 40 60 20
CALL: windowcreate "root :parentname "caption 0 0 100 200 []
CALL: staticcreate :parentname (word "s :parentname) "text 10 10 80 20
CALL: groupboxcreate :parentname (word "g :parentname) 10 30 80 40
CALL: radiobuttoncreate :parentname (word "g :parentname) (word "r :parentname) [Radio] 20 40 60 20
CALL: windowcreate "root :parentname "caption 0 0 100 200 []
CALL: staticcreate :parentname (word "s :parentname) "text 10 10 80 20
CALL: groupboxcreate :parentname (word "g :parentname) 10 30 80 40
CALL: radiobuttoncreate :parentname (word "g :parentname) (word "r :parentname) [Radio] 20 40 60 20
CALL: windowcreate "root :parentname "caption 0 0 100 200 []
CALL: staticcreate :parentname (word "s :parentname) "text 10 10 80 20
CALL: groupboxcreate :parentname (word "g :parentname) 10 30 80 40
CALL: radiobuttoncreate :parentname (word "g :parentname) (word "r :parentname) [Radio] 20 40 60 20
CALL: windowcreate "root :parentname "caption 0 0 100 200 []
CALL: staticcreate :parentname (word "s :parentname) "text 10 10 80 20
CALL: groupboxcreate :parentname (word "g :parentname) 10 30 80 40
CALL: radiobuttoncreate :parentname (word "g :parentname) (word "r :parentname) [Radio] 20 40 60 20
CALL: windowcreate "root :parentname "caption 0 0 100 200 []
CALL: staticcreate :parentname (word "s :parentname) "text 10 10 80 20
CALL: groupboxcreate :parentname (word "g :parentname) 10 30 80 40
CALL: radiobuttoncreate :parentname (word "g :parentname) (word "r :parentname) [Radio] 20 40 60 20
CALL: windowcreate "root :parentname "caption 0 0 100 200 []
CALL: staticcreate :parentname (word "s :parentname) "text 10 10 80 20
CALL: groupboxcreate :parentname (word "g :parentname) 10 30 80 40
CALL: radiobuttoncreate :parentname (word "g :parentname) (word "r :parentname) [Radio] 20 40 60 20
CALL: windowcreate "root :parentname "caption 0 0 100 200 []
CALL: staticcreate :parentname (word "s :parentname) "text 10 10 80 20
CALL: groupboxcreate :parentname (word "g :parentname) 10 30 80 40
CALL: radiobuttoncreate :parentname (word "g :parentname) (word "r :parentname) [Radio] 20 40 60 20
CALL: windowcreate "root :parentname "caption 0 0 100 200 []
CALL: staticcreate :parentname (word "s :parentname) "text 10 10 80 20
CALL: groupboxcreate :parentname (word "g :parentname) 10 30 80 40
CALL: radiobuttoncreate :parentname (word "g :parentname) (word "r :parentname) [Radio] 20 40 60 20
CALL: windowcreate "root :parentname "caption 0 0 100 200 []
CALL: staticcreate :parentname (word "s :parentname) "text 10 10 80 20
CALL: groupboxcreate :parentname (word "g :parentname) 10 30 80 40
CALL: radiobuttoncreate :parentname (word "g :parentname) (word "r :parentname) [Radio] 20 40 60 20
CALL: windowcreate "root :parentname "caption 0 0 100 200 []
CALL: staticcreate :parentname (word "s :parentname) "text 10 10 80 20
CALL: groupboxcreate :parentname (word "g :parentname) 10 30 80 40
CALL: radiobuttoncreate :parentname (word "g :parentname) (word "r :parentname) [Radio] 20 40 60 20
CALL: windowcreate "root :parentname "caption 0 0 100 200 []
CALL: staticcreate :parentname (word "s :parentname) "text 10 10 80 20
CALL: groupboxcreate :parentname (word "g :parentname) 10 30 80 40
CALL: radiobuttoncreate :parentname (word "g :parentname) (word "r :parentname) [Radio] 20 40 60 20
CALL: windowcreate "root :parentname "caption 0 0 100 200 []
CALL: staticcreate :parentname (word "s :parentname) "text 10 10 80 20
CALL: groupboxcreate :parentname (word "g :parentname) 10 30 80 40
CALL: radiobuttoncreate :parentname (word "g :parentname) (word "r :parentname) [Radio] 20 40 60 20
CALL: windowcreate "root :parentname "caption 0 0 100 200 []
CALL: staticcreate :parentname (word "s :parentname) "text 10 10 80 20
CALL: groupboxcreate :parentname (word "g :parentname) 10 30 80 40
CALL: radiobuttoncreate :parentname (word "g :parentname) (word "r :parentname) [Radio] 20 40 60 20
CALL: windowcreate "root :parentname "caption 0 0 100 200 []
CALL: staticcreate :parentname (word "s :parentname) "text 10 10 80 20
CALL: groupboxcreate :parentname (word "g :parentname) 10 30 80 40
CALL: radiobuttoncreate :parentname (word "g :parentname) (word "r :parentname) [Radio] 20 40 60 20
CALL: windowcreate "root :parentname "caption 0 0 100 200 []
CALL: staticcreate :parentname (word "s :parentname) "text 10 10 80 20
CALL: groupboxcreate :parentname (word "g :parentname) 10 30 80 40
CALL: radiobuttoncreate :parentname (word "g :parentname) (word "r :parentname) [Radio] 20 40 60 20
CALL: windowcreate "root :parentname "caption 0 0 100 200 []
CALL: staticcreate :parentname (word "s :parentname) "text 10 10 80 20
CALL: groupboxcreate :parentname (word "g :parentname) 10 30 80 40
CALL: radiobuttoncreate :parentname (word "g :parentname) (word "r :parentname) [Radio] 20 40 60 20
CALL: debugwindows
CALL: (debugwindows word 15 :longname)
CALL: WINDOWDELETE (word repcount :longname)
CALL: WINDOWDELETE (word repcount :longname)
CALL: WINDOWDELETE (word repcount :longname)
CALL: WINDOWDELETE (word repcount :longname)
CALL: WINDOWDELETE (word repcount :longname)
CALL: WINDOWDELETE (word repcount :longname)
CALL: WINDOWDELETE (word repcount :longname)
CALL: WINDOWDELETE (word repcount :longname)
CALL: WINDOWDELETE (word repcount :longname)
CALL: WINDOWDELETE (word repcount :longname)
CALL: WINDOWDELETE (word repcount :longname)
CALL: WINDOWDELETE (word repcount :longname)
CALL: WINDOWDELETE (word repcount :longname)
CALL: WINDOWDELETE (word repcount :longname)
CALL: WINDOWDELETE (word repcount :longname)
CALL: WINDOWDELETE (word repcount :longname)
CALL: WINDOWDELETE (word repcount :longname)
CALL: WINDOWDELETE (word repcount :longname)
CALL: WINDOWDELETE (word repcount :longname)
CALL: WINDOWDELETE (word repcount :longname)
CALL: WINDOWCREATE "root "window "caption 0 0 120 400 []
INFO: Executing invalid instruction: [(DEBUGWINDOWS "window "toomany)]
PASS: Running [(DEBUGWINDOWS "window "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [(DEBUGWINDOWS "doesnotexist)]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
CALL: WINDOWDELETE "window
PASS: The regression test for an inconsistent dialogthing list did not crash.
CALL: MOUSEOFF
CALL: MOUSEON [] [] [] [] []
CALL: MOUSEON " " " " "
CALL: MOUSEOFF
INFO: Executing invalid instruction: [(MOUSEON [] [] [] [] )]
PASS: Running [(MOUSEON [] [] [] [] )] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to MOUSEON] .
INFO: Executing invalid instruction: [(MOUSEON [] [] [] [] [] "toomany)]
PASS: Running [(MOUSEON [] [] [] [] [] "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Executing invalid instruction: [(MOUSEOFF "toomany)]
PASS: Running [(MOUSEOFF "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Executing invalid instruction: [(MOUSEPOS "toomany)]
PASS: Running [(MOUSEPOS "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
CALL: IGNORE MIDIOPEN
INFO: Running invalid instruction: [IGNORE MIDIOPEN]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
CALL: MIDICLOSE
INFO: Running invalid instruction: [IGNORE (MIDIOPEN "badinput)]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [MIDIOPEN doesn't like badinput as input] .
CALL: IGNORE MIDIOPEN
FAIL: [IGNORE MIDIOPEN] threw error.  code= 16 . [Stopping...]
CALL: MIDICLOSE
INFO: Running invalid instruction: [IGNORE (MIDIOPEN [1 2 3] )]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [MIDIOPEN doesn't like [1 2 3] as input] .
CALL: IGNORE MIDIOPEN
FAIL: [IGNORE MIDIOPEN] threw error.  code= 16 . [Stopping...]
CALL: MIDICLOSE
INFO: Running invalid instruction: [IGNORE (MIDIOPEN {1 2 3} )]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [MIDIOPEN doesn't like {1 2 3} as input] .
CALL: IGNORE MIDIOPEN
FAIL: [IGNORE MIDIOPEN] threw error.  code= 16 . [Stopping...]
CALL: MIDICLOSE
INFO: Running invalid instruction: [IGNORE (MIDIOPEN 500)]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
CALL: IGNORE MIDIOPEN
CALL: MIDICLOSE
INFO: Executing invalid instruction: [(MIDIOPEN 0 "toomany)]
PASS: Running [(MIDIOPEN 0 "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Executing invalid instruction: [(MIDICLOSE "toomany)]
PASS: Running [(MIDICLOSE "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [MIDICLOSE]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
CALL: IGNORE MIDIOPEN
INFO: Executing invalid instruction: [(MIDIMESSAGE)]
PASS: Running [(MIDIMESSAGE)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to MIDIMESSAGE] .
INFO: Executing invalid instruction: [(MIDIMESSAGE [176 123 0] "toomany)]
PASS: Running [(MIDIMESSAGE [176 123 0] "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [MIDIMESSAGE "176 123 0]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
INFO: Running invalid instruction: [MIDIMESSAGE {176 123 0}]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
INFO: Running invalid instruction: [MIDIMESSAGE [176 123]]
FAIL: Executing [MIDIMESSAGE [176 123]] did not throw an error
INFO: Running invalid instruction: [MIDIMESSAGE [176 123 0 0]]
FAIL: Executing [MIDIMESSAGE [176 123 0 0]] did not throw an error
INFO: Running invalid instruction: [MIDIMESSAGE [176 onetwothree 0]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [MIDIMESSAGE doesn't like onetwothree as input] .
INFO: Running invalid instruction: [MIDIMESSAGE [176 [123] 0]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [MIDIMESSAGE doesn't like [123] as input] .
INFO: Running invalid instruction: [MIDIMESSAGE [176 {123} 0]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [MIDIMESSAGE doesn't like {123} as input] .
CALL: MIDICLOSE
INFO: Executing invalid instruction: [(SOUND)]
PASS: Running [(SOUND)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to SOUND] .
INFO: Executing invalid instruction: [(SOUND [100 100] "toomany)]
PASS: Running [(SOUND [100 100] "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [SOUND "string]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
INFO: Running invalid instruction: [SOUND {100 100}]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
INFO: Running invalid instruction: [SOUND [100]]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
INFO: Running invalid instruction: [SOUND [100 100 100]]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
INFO: Running invalid instruction: [SOUND []]
INFO: ITEM 1 ERROR output 16 .
INFO: ITEM 2 ERROR output [Stopping...] .
INFO: Running invalid instruction: [SOUND [100 string]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SOUND doesn't like string as input] .
INFO: Running invalid instruction: [SOUND [100 [100]]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SOUND doesn't like [100] as input] .
INFO: Running invalid instruction: [SOUND [100.5 100.0]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SOUND doesn't like 100.5 as input] .
INFO: Running invalid instruction: [SOUND [100.0 100.5]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [SOUND doesn't like 100.5 as input] .
INFO: Executing invalid instruction: [(TONE 100)]
PASS: Running [(TONE 100)] set error code to 6 , as expected.
INFO: ITEM 2 ERROR output [not enough inputs to TONE] .
INFO: Executing invalid instruction: [(TONE 100 100 "toomany)]
PASS: Running [(TONE 100 100 "toomany)] set error code to 8 , as expected.
INFO: ITEM 2 ERROR output [too much inside ()'s] .
INFO: Running invalid instruction: [TONE [100] 100]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [TONE doesn't like [100] as input] .
INFO: Running invalid instruction: [TONE {100} 100]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [TONE doesn't like {100} as input] .
INFO: Running invalid instruction: [TONE "ten 100]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [TONE doesn't like ten as input] .
INFO: Running invalid instruction: [TONE 100 [100]]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [TONE doesn't like [100] as input] .
INFO: Running invalid instruction: [TONE 100 {100}]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [TONE doesn't like {100} as input] .
INFO: Running invalid instruction: [TONE 100 "ten]
INFO: ITEM 1 ERROR output 7 .
INFO: ITEM 2 ERROR output [TONE doesn't like ten as input] .
CALL: (NETSTARTUP 1)
CALL: IGNORE NETCONNECTON "localhost 9999 [] []
CALL: NETSHUTDOWN
CALL: NETSHUTDOWN
CALL: NETSTARTUP
PASS: [NETACCEPTON :localport [MAKE "onsendreadycounter :onsendreadycounter + 1] [QUEUE "server.data NETACCEPTRECEIVEVALUE]] returned true , as expected.
CALL: WAIT 60 * 2
PASS: [SHELL [perl.exe sendtologo.pl DAVID-LAPTOP 1234]] returned true , as expected.
CALL: WAIT 60 * 2
CALL: NETACCEPTOFF
CALL: NETSHUTDOWN
FAIL: [:onsendreadycounter] returned 4 . We expected 3
PASS: [:server.data] returned [[hello]] , as expected.
PASS: [NETACCEPTON :localport [] [QUEUE "server.data NETACCEPTRECEIVEVALUE]] returned true , as expected.
PASS: [SHELL [perl.exe sendtologo.pl DAVID-LAPTOP 2222]] returned true , as expected.
PASS: [SHELL [perl.exe sendtologo.pl DAVID-LAPTOP 2222]] returned true , as expected.
FAIL: [:server.data] returned [[hello]] . We expected [[Hello] [Hello]]
CALL: NETSTARTUP
PASS: [NETACCEPTON 1234 [] []] returned true , as expected.
CALL: NETSHUTDOWN
PASS: [SHELL [perl.exe networkserver.pl simple 5556]] returned true , as expected.
CALL: WAIT 60
CALL: NETSTARTUP
PASS: [NETCONNECTON NETWORKTEST.HOSTNAME :remoteport [] [QUEUE "client.data NETCONNECTRECEIVEVALUE]] returned true , as expected.
CALL: WAIT 60*2
CALL: NETCONNECTOFF
CALL: NETSHUTDOWN
PASS: [:client.data] returned [[hello]] , as expected.
PASS: [SHELL [perl.exe networkserver.pl echo 5557]] returned true , as expected.
CALL: WAIT 60
CALL: NETSTARTUP
PASS: [NETCONNECTON NETWORKTEST.HOSTNAME :remoteport [MAKE "onsendreadycounter :onsendreadycounter + 1] [QUEUE "client.data NETCONNECTRECEIVEVALUE]] returned true , as expected.
CALL: WAIT 60*2
PASS: [NETCONNECTSENDVALUE "yodle] returned true , as expected.
PASS: [NETCONNECTSENDVALUE "XXXXX] returned false , as expected.
CALL: WAIT 60*2
CALL: NETCONNECTOFF
CALL: NETSHUTDOWN
PASS: [:onsendreadycounter] returned 4 , as expected.
PASS: [:client.data] returned [[yodle]] , as expected.
PASS: [SHELL [perl.exe networkserver.pl nonul 5555]] returned true , as expected.
CALL: WAIT 60
CALL: NETSTARTUP
PASS: [NETCONNECTON NETWORKTEST.HOSTNAME :remoteport [] [QUEUE "client.data NETCONNECTRECEIVEVALUE]] returned true , as expected.
CALL: WAIT 60*2
CALL: NETCONNECTOFF
CALL: NETSHUTDOWN
PASS: [:client.data] returned [[Hello]] , as expected.
PASS: [SHELL [perl.exe networkserver.pl largepacket 5556]] returned true , as expected.
CALL: WAIT 60
CALL: NETSTARTUP
PASS: [NETCONNECTON NETWORKTEST.HOSTNAME :remoteport [MAKE "onsendreadycounter :onsendreadycounter + 1] [QUEUE "client.data ITEM 1 NETCONNECTRECEIVEVALUE]] returned true , as expected.
CALL: WAIT 60*2
CALL: NETCONNECTOFF
CALL: NETSHUTDOWN
FAIL: [:onsendreadycounter] returned 4 . We expected 3
PASS: [APPLY "WORD :client.data] returned  , as expected.
CALL: NETSTARTUP
PASS: [NETCONNECTON NETWORKTEST.HOSTNAME 4444 [] []] returned true , as expected.
CALL: NETSHUTDOWN
