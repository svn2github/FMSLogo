<section id="command-foreach">
    <title>FOREACH</title>

<variablelist>

<varlistentry><term>Synopsis</term>
<listitem>
<synopsis><command>FOREACH</command> <parameter>datalist</parameter> <parameter>templatelist</parameter>
(<command>FOREACH</command> <parameter>datalist1</parameter> <parameter>datalist2</parameter> <parameter>...</parameter> <parameter>templatelist</parameter>)</synopsis>
</listitem>
</varlistentry>

<varlistentry><term>Description</term>
<listitem>
<para>
Command that evaluates the <parameter>templatelist</parameter> repeatedly, once for each element of the datalist.
If more than one data list is given, each of them must be the same length.
If the data inputs are words, then the template is evaluated once for each character.
</para>

<para>
In a template, the symbol <code>?REST</code> represents the portion of the data input to the right of the member currently being used as the <code>?</code> slot-filler.
That is, if the data input is <code>[A B C D E]</code> and the template is being evaluated with <code>?</code> replaced by <code>B</code>, then <code>?REST</code> would be replaced by <code>[C D E]</code>.
If multiple parallel slots are used, then <code>(?REST 1)</code> goes with <code>?1</code>, etc.
</para>

<para>
In a template, the symbol <code>#</code> represents the position in the data input of the member currently being used as the <code>?</code> slot-filler.
That is, if the data input is <code>[A B C D E]</code> and the template is being evaluated with <code>?</code> replaced by <code>B</code>, then <code>#</code> would be replaced by <code>2</code>.
</para>
</listitem>
</varlistentry>

<varlistentry><term>Example</term>
<listitem>
<programlisting><userinput>FOREACH [a b c d] [PRINT (SENTENCE "index # "value ? "rest ?rest)]</userinput>
index 1 value a rest b c d
index 2 value b rest c d
index 3 value c rest d
index 4 value d rest
</programlisting>
</listitem>
</varlistentry>

</variablelist>
</section>
