<section id="command-find">
    <title>FIND</title>

<variablelist>

<varlistentry><term>Synopsis</term>
<listitem>
<synopsis><command>FIND</command> <parameter>conditiontemplate</parameter> <parameter>data</parameter></synopsis>
</listitem>
</varlistentry>

<varlistentry><term>Description</term>
<listitem>
<para>
Outputs the first constituent of the <parameter>data</parameter> input (the first member of a list, or the first character of a word) for which the value produced by evaluating <parameter>conditiontemplate</parameter> with that constituent in its slot is TRUE.
If there is no such constituent, the empty list is output.
</para>

<para>
In a template, the symbol <code>?REST</code> represents the portion of the data input to the right of the member currently being used as the <code>?</code> slot-filler.
That is, if the data input is <code>[A B C D E]</code> and the template is being evaluated with <code>?</code> replaced by <code>B</code>, then <code>?REST</code> would be replaced by <code>[C D E]</code>.
If multiple parallel slots are used, then <code>(?REST 1)</code> goes with <code>?1</code>, etc.
</para>

<para>
In a template, the symbol <code>#</code> represents the position in the data input of the member currently being used as the <code>?</code> slot-filler.
That is, if the data input is <code>[A B C D E]</code> and the template is being evaluated with <code>?</code> replaced by <code>B</code>, then <code>#</code> would be replaced by <code>2</code>.
</para>
</listitem>
</varlistentry>

<varlistentry><term>Example</term>
<listitem>
<programlisting><userinput>TO MYFIND :arg
  IF :arg=1 [OUTPUT "true]
  OUTPUT "false
END

SHOW (FIND "MYFIND [2 4 3 0])</userinput>
[]
<userinput>SHOW (FIND "MYFIND [2 1 3 0])</userinput>
1
</programlisting>
</listitem>
</varlistentry>

</variablelist>
</section>
