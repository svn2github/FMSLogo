<section id="command-filter">
    <title>FILTER</title>

<variablelist>

<varlistentry><term>Synopsis</term>
<listitem>
<synopsis><command>FILTER</command> <parameter>conditiontemplate</parameter> <parameter>data</parameter></synopsis>
</listitem>
</varlistentry>

<varlistentry><term>Description</term>
<listitem>
<para>
Outputs a word or list, depending on the type of the <parameter>data</parameter> input, containing a subset of the members (for a list) or characters (for a word) of the input.
The <parameter>conditiontemplate</parameter> parameter is evaluated once for each member or character of the data, and it must produce a TRUE or FALSE value.
If the value is TRUE, then the corresponding input constituent is included in the output.
Otherwise, it is omitted.
</para>

<para>
In a template, the symbol <code>?REST</code> represents the portion of the data input to the right of the member currently being used as the <code>?</code> slot-filler.
That is, if the data input is <code>[A B C D E]</code> and the template is being evaluated with <code>?</code> replaced by <code>B</code>, then <code>?REST</code> would be replaced by <code>[C D E]</code>.
If multiple parallel slots are used, then <code>(?REST 1)</code> goes with <code>?1</code>, etc.
</para>

<para>
In a template, the symbol <code>#</code> represents the position in the data input of the member currently being used as the <code>?</code> slot-filler.
That is, if the data input is <code>[A B C D E]</code> and the template is being evaluated with <code>?</code> replaced by <code>B</code>, then <code>#</code> would be replaced by <code>2</code>.
</para>

</listitem>
</varlistentry>

<varlistentry><term>Example</term>
<listitem>
<programlisting><userinput>TO VOWELP :arg
  IF :arg="a [OUTPUT "true]
  IF :arg="e [OUTPUT "true]
  IF :arg="i [OUTPUT "true]
  IF :arg="o [OUTPUT "true]
  IF :arg="u [OUTPUT "true]
  OUTPUT "false
END

PRINT FILTER "vowelp "elephant</userinput>
eea
</programlisting>
</listitem>
</varlistentry>

</variablelist>
</section>
