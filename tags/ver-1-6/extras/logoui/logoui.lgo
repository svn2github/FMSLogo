to aaa
; The author disclaims all copyrights associated with this code (hereafter
; referred to as the "Work").
;
; The author makes this dedication for the benefit of the public at large
; and to the detriment of the author's heirs and successors. The author
; intends this dedication to be an overt act of relinquishment in
; perpetuity of all present and future rights under copyright law,
; whether vested or contingent, in the Work. The author understands that
; such relinquishment of all rights includes the relinquishment of all
; rights to enforce (by lawsuit or otherwise) those copyrights in the
; Work.
;
; The author recognizes that, once placed in the public domain, the
; Work may be freely reproduced, distributed, transmitted, used,
; modified, built upon, or otherwise exploited by anyone for any
; purpose, commercial or non-commercial, and in any way, including by
; methods that have not yet been invented or conceived.
end

to logoui
  catch "error [ dribble "transcript.lgo ]

  make "width        100
  make "height       155
  make "moveDistance 20

  tracecommand [SETPENSIZE [3 3]]
  drawgrid :moveDistance

  windowcreate "main "window [Control the Turtle] 100 100 :width :height [setup]

end

to moveto :x :y
   penup
   setxy :x :y
   pendown
end

to drawgrid :granularity [:oldpen pen] [:oldpos pos] [:oldheading heading]

   hideturtle ; to speed up drawing

   setpensize  [1 1]
   setpencolor [125 225 255] ; light blue

   ; draw vertical lines
   for [i :granularity 500 :granularity] [
      ; draw a horizontal line in the positive X half
      moveto :i -500
      setxy  :i  500

      ; draw a horizontal line in the negative X half
      moveto -:i -500
      setxy  -:i  500

      ; draw a vertical line in the positive Y half
      moveto -500 :i
      setxy   500 :i

      ; draw a horizontal line in the negative Y half
      moveto -500 -:i
      setxy   500 -:i 
   ]

   setpencolor [0 180 232] ; darker blue for X/Y axes

   ; draw the X axis
   moveto 0 -500
   setxy  0  500

   ; draw the Y axis
   moveto -500 0
   setxy   500 0

   ; restore the turtle's original position and heading
   penup
   setpos     :oldpos
   setheading :oldheading
   pendown

   ; restore the original pen color/size
   setpen :oldpen

   showturtle
end

to tracecommand :command 
  print :command
  run   :command
end

to myfd :distance
  tracecommand   (list "FD :distance)
end

to mybk :distance
  tracecommand   (list "BK :distance)
end

to myrt :angle
  tracecommand   (list "RT :angle)
end

to mylt :angle
  tracecommand   (list "LT :angle)
end

to myfill
  tracecommand   [(FILL "TRUE)]
end

to myhome [:PenIsDown pendown?]
  if :PenIsDown [ tracecommand [ PENUP   ]  ]
  tracecommand  [ HOME ]
  if :PenIsDown [ tracecommand [ PENDOWN ]  ]
end

to mycs

  tracecommand   [CS]

  drawgrid :moveDistance
end

to pentoggle
  ifelse pendown? [
     tracecommand [PU]
     buttonupdate "penbutton "PENDOWN
  ] [
     tracecommand [PD]
     buttonupdate "penbutton "PENUP
  ]
end

to turtletoggle
  ifelse shown? [
     tracecommand [HT]
     buttonupdate "turtlebutton "SHOW
  ] [
     tracecommand [ST]
     buttonupdate "turtlebutton "HIDE
  ]

end

to setup

  make "gapx 6
  make "gapy 6

  make "buttonwidthlong  60
  make "buttonwidthshort 40
  make "buttonheight     12

  make "onebuttonx  (:width-:gapx-:buttonwidthlong)/2
  make "twobuttonx1 :gapx
  make "twobuttonx2 :width-:gapx-:buttonwidthshort

  ; row 1
  make "ypos :gapy
  buttoncreate "window "fdbutton (LIST "FORWARD :movedistance) :onebuttonx :ypos :buttonwidthlong  :buttonheight [myfd :movedistance]

  ; row 2
  make "ypos :ypos + :buttonheight + :gapy
  buttoncreate "window "rt90button "|LEFT  90|  :twobuttonx1 :ypos :buttonwidthshort :buttonheight [mylt 90]
  buttoncreate "window "lt90button "|RIGHT 90|  :twobuttonx2 :ypos :buttonwidthshort :buttonheight [myrt 90]

  ; row 3
  make "ypos :ypos + :buttonheight + :gapy
  buttoncreate "window "rt30button "|LEFT  30|  :twobuttonx1 :ypos :buttonwidthshort :buttonheight [mylt 30]
  buttoncreate "window "lt30button "|RIGHT 30|  :twobuttonx2 :ypos :buttonwidthshort :buttonheight [myrt 30]

  ; row 4
  make "ypos :ypos + :buttonheight + :gapy
  buttoncreate "window "bkbutton (LIST "|BACK    | :movedistance) :onebuttonx  :ypos :buttonwidthlong  :buttonheight [mybk :movedistance]

  ; spacer
  make "ypos :ypos + 10

  ; row 5
  make "ypos :ypos + :buttonheight + :gapy 
  buttoncreate "window "fillbutton "|FILL|  :onebuttonx :ypos  :buttonwidthlong :buttonheight [myfill]

  ; row 6
  showturtle
  make "ypos :ypos + :buttonheight + :gapy 
  buttoncreate "window "turtlebutton "|HIDE|  :twobuttonx1 :ypos   :buttonwidthshort :buttonheight [turtletoggle]
  buttoncreate "window "penbutton    "|PENUP| :twobuttonx2 :ypos   :buttonwidthshort :buttonheight [pentoggle]

  ; row 7
  pendown
  make "ypos :ypos + :buttonheight + :gapy
  buttoncreate "window "undobutton "|HOME|  :twobuttonx1  :ypos :buttonwidthshort  :buttonheight [myhome]
  buttoncreate "window "csbutton   "|CLEAR| :twobuttonx2  :ypos :buttonwidthshort  :buttonheight [mycs]

end

Make "startup [logoui]
