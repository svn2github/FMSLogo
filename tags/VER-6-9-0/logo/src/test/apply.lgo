LOAD "testlib.lgo

TO APPLYTEST.NONPRIMITIVE :A :B
   OUTPUT SUM :A :B
END

TO APPLYTEST.NOOUTPUT
   STOP
END

TO APPLYTEST.SMOKETEST

   SIMPLEREPORTTEST [APPLY "SUM [123]      ] 123
   SIMPLEREPORTTEST [APPLY "SUM [100 20 3] ] 123

   SIMPLEREPORTTEST [APPLY "APPLYTEST.NONPRIMITIVE [120 3] ] 123

   TRACEINSTRUCTION [APPLY "APPLYTEST.NOOUTPUT [] ]

   ; this is legal for some reason
   SIMPLEREPORTTEST [APPLY [1] []] 1

   ; apply can be nested
   SIMPLEREPORTTEST [APPLY "APPLY [SUM [100 20 3]]] 123
END


TO APPLYTEST.BADINPUT
    
   RUNNOTENOUGHINPUTSTEST [(APPLY "SUM)]
   RUNTOOMANYINPUTSTEST   [(APPLY "SUM [1 2 3] "toomany)]

   RUNNONRECOVERABLEIDONTKNOWHOWTOTEST  [APPLY "NONEXISTENT [1 2 3]]
   RUNNONRECOVERABLEIDONTKNOWHOWTOTEST  [APPLY "TO          []]
   RUNNONRECOVERABLEIDONTKNOWHOWTOTEST  [APPLY 1            []]

   RUNBADINPUTTEST   [APPLY {1 2 3} [1 2 3]]
   RUNBADINPUTTEST   [APPLY [1 2 3] [1 2 3]]
   RUNBADINPUTTEST   [APPLY "SUM    {1 2 3}]

   ; the function being called has bad inputs
   RUNNOTENOUGHINPUTSTEST [APPLY "APPLYTEST.NONPRIMITIVE [1]]
   RUNTOOMANYINPUTSTEST   [APPLY "APPLYTEST.NONPRIMITIVE [1 2 3]]

END

TO APPLYTEST

   APPLYTEST.SMOKETEST
   APPLYTEST.BADINPUT

END

